%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: HESSO-instit-quadri+and Arts.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: iMac_27
%%CreationDate: 07.02.12
%%BoundingBox: 0 0 217 112
%%HiResBoundingBox: 0 0 216.6377 111.0361
%%CropBox: 0 0 216.6377 111.0361
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 68 8%%BeginData: 8334 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD2AFF360D140D1436FD06FF140D140D1484FD6EFF360D0D140D36%FD06FF0D0D0D140D84FD6EFF600D140D1436FD06FF360D140D1484FD6EFF%350E0D0D0D36FD06FF0D0E0D0D0D85FD6EFF850D140D1436FD06FF360D14%0D1484FD07FFA9855A8584FD0BFF84855A8584A9A9FD0FFFA8FFA8FD0BFF%CFFFA8FD30FF5A0E0D0E0D5AFD06FF13140D0E0D85FD05FF850D140D0D0D%140D5AA9FD06FF840D140D0D0D0E0D0E7EFD0BFFA8A87D7D7DA17DA7A1FD%06FFA87DA77D7D7DA8A7FD2DFF840D140D145AFD06FF360D140D1484FD04%FF850D140D140D140D140D36FD05FF850D140D140D140D140D84FD0BFFA8%7DA87DA8A1A87DA7FD05FFA87DA17DA8A8A87DA77DFD2CFF5A0D0D0E0D14%355A365A355A0D0D0D0E0D84FFFFFF840D0E0D0D0D5A350D0D0E0D84FFFF%FFAF0D0E0D0D0D8484840D0E84FD0AFFA87D7D7DFFFFFFA8A8A7FD04FFA8%7DA17DFFFFFFA8A87DA17DFD2BFF850D140D140D140D140D140D140D140D%1484FFFFFF13140D1414FFFFFF36140D140DFFFFFF84140D140D85FD04FF%84FD0BFFA1A87DFD0BFF7DA8A1FD06FFA87DA7A8FD2AFF5A0D0D140D0E0D%140D0D0D140D0E0D140D84FFFF840D0D140DA9FFFFFFA90D140D0EA8FFFF%840D140D0E0D85A9FD0EFFA87DA1A8FD09FFA87D7DA8FD06FFA8A77DA8FD%2AFF850D140D140D14133614360D140D140D1484FFFF850D140D14143636%3614140D140DA9FFFFA9140D140D140D1436A9FD06FFA8A8CAFFFFFFA8A7%7DA77DCAA8FD06FFA87DA7A8FD07FF7DA87DFD2AFF5A0E0D0D0D5AFD06FF%0D0E0D0D0D85FFFF5A0E0D0D0D0E0D0D0D0E0D0D0D0E7EFFFFFF360D0D14%0D0D0D0E0D36A8FFFFFFA87D7DA8FD04FF7DA17D7D7DA17DA8A8FFFFFF7D%A17DFD07FFA8A17DA7FD2AFF850D140D145AFD06FF600D140D1484FFFF85%0D140D140D140D140D140D140D85FD04FF5A140D140D140D140D36FD04FF%7DA77DFD05FFA8A87DA87DA87DA8FFFFFFA87DA8A8FD07FF7DA87DFD2AFF%5A140D0E0D36FD06FF36140D0E0D84FFFF5A0E0D0E0D60848484A984A984%A9A9FD05FFA8840D0D0D140D0E0DAFFFFFA8A87DCAFD08FFA8A87DA17DCA%FFFF7DA77DFD07FFA8A17DA7FD2AFF840D140D1436FD06FF600D140D145A%FFFFA90D140D145AFD11FF84140D140D1484FD10FFA87DA7A7FFFFA87DA7%A8FD07FF7DA77DFD2AFF5A0D0D0E0D36FD06FF360D0D0E0D84FFFFA9140D%0E0D0D5AFD05FF845AA8FFFFA95AFD05FF130D0D0E0DA9FD10FFA87D7DA8%FFFFA87D7DA8FD06FF7DA17DA8FD2AFF850D140D1436FD06FF360D140D14%5AFFFFFF7E140D140D1414605A6014140DFFFFFF8414148584AF5A140D14%0D14AFFD09FFA8CAFD05FFA87DA7A8FFFFFF7DA87DA8FD04FFA8A87DA8FD%2BFF5A0D0D140D14FD06FF360D0D140D5AFD04FF360E0D0E0D140D0D0D14%0D14FFFFFF840D140D0D0D140D0E0D0E5AFD0AFFA87DA7A1A8A7A77DA17D%FD05FF7DA77DA8A8A8A17D7DA7A8FD2BFF850D140D140DFD06FF360D140D%1436FD05FF5A140D140D140D140D145AFFFFFF84140D140D140D140D145A%FD0BFFA8A87DA17DA77DA7A7FD07FFA1A87D7D7DA77DA8A8FD2CFF84845A%845A85FD06FF84845A845AA9FD06FFA8855A3635363684A8FD05FFA884FD%053685A8FD0DFFFD07A8FD09FFFD05A8FDFCFFFDFCFFFDC5FFCFFD13FFA8%FD07FFA8FD09FFA8FD07FFA8FD05FFA8FD05FFA8FFA8FD05FFA8FD3AFFA8%FFCFA8FD08FFA8FD07FFCAA8A8FD09FFA7FD07FFA8CAA8FD05FFA8A8FD0A%FFA8FFCAFD05FFA8FD3AFFFD05A8FFFD05A8FFA8A87DFFA8A8A8FFFFFF7D%FFA8FF7DA8CAA87DCFFFA8A8A8A1A8FFFFA8A7A8FFA8A87DFFFFA87DFFA8%A8A8FFA8FFA8A8FFFD05A8A7FFA8A8A7FFA8A8A8FD36FFA7FFA8CAFFFFA7%FFA8FFA8FFA8FFA8A8A8FFFFFFCFA8A8FFA8FFFFFFA8FFA8FFA8FFA7A8A8%FFFFFFA8A8A8FFA8FFA8CFA7CAA8A8A8FFA8A8FFFFA8FFA8FFA8FFA8CAFF%A8A8A8FFA8A8A8FD35FFA8A8FFFFA8A8A1A8A8CAA8A8A8CAA7FF7DCAA8FF%FFFF7DFFFFA8A7FFFD09A8FFFFFFCAFFFD09A8FFA8A8A8CFA8A8A1FD06A8%FF7DCAA8A8A8FF7DA8A8FD36FFA8FFCAFFFFCAA8FFFFA8A8FFFFCAFFFFA8%FD04FFCAA8FFFFCAA8FFA8A8CAFFA8FFA8A8CAFFFFFFA8A8FFFFA7FFFFFF%A8A8A8FFA8CFA8FFFFA8A8FFCAFFA8FFA8CFFFFFA8CAFFFFA8FD62FFA8A8%FDDCFFA8FD07FFA8A8A8FD05FFA8FD17FFA8FFFFFFA8CAFD08FFA8FD05FF%A7FD42FFA8A8FFFFA8FFFFFFA8A8CFFFCAFD07FFA8FFA8FFFFFFA8FD05FF%A8FFFFFFA8FFFFCFA8FFFFFFA8A8A8FFA8FFFFFFA8FFFFA8A8FFA8FFFFA8%FFFFA8FD3EFFA7A8A8FF7DA8A8FFFFFF7DA8FFA8A8FFFD04A87DFFA8A7A8%FF7DA8A8FFFFFFA1A8A8FFA1CAA8A8A8FFA7FFA8A8A1FFA8A87DFF7DA87D%FF7DA8A8A87DFFA7FFA1A87DFD3CFFA8FFFFFFA8A8A8FD05FFA8A8A8FFCA%FFA8FFFFA8A8FFFD04A8CAFFFFFFA8CFFFA8A8A8FFFFA8FFFFCFA8A8FFFF%A8A8A8FFFFA8FFCFFFA8FFFFA8A8CACFFFA8A8FD3EFFA1A8A7FFA7A8A8FF%FFFFA8A8A8FFA7A8A8CAA8FFFD05A8FFA1A8A8FFFFFFA8A8A8FFA7A8A8A8%A7FFA8FFA8A87DFFA8A8A8FFA7FFA8FFFD04A8A7FFA7FFA8A8A8FD42FFCF%FD05FFCAFFFFFFCAFD07FFA8FFFFFFA8FD1FFFCAFDFCFFFDFCFFFD3EFFA8%FFFFFFA8FD0BFFA8FD09FFA8FD07FFA8FD1DFFA8FD0BFFCAFD2AFFA8FD08%FFA8FFFFFFCAFD0AFFA8FD0AFFA8FD07FFA8FD0CFFA8FD0FFFA8FD0DFFA8%FD28FF7DFFA8FFA8FFFFFFA8FF7DA8A8FFA7A8A8FFCACAA8FFFFCAA8A87D%FFFFFFA8FFFFFFA8FFA8A8A8FFA8FFA8FFA8FFA8CFA8FFFFFFA7FF7DFFA8%CFA8CAFFFFA8FFA8A7A8FFA8FFFFCAA8A8A7FD07FFA8FFA8FFCFFFA8CFA8%FD25FFA8A8FFA8A8A8FFA7FFFFA8A8A8FFA8A8A8FFA8A8A8CACAA8FFA8A8%A8FFA8A8A8FFA8FFCAA8A8A8FFA8FFA8A8CAFFA8A7A8FFFFFFFD04A8CFCA%A8A7CAA8A8A8FFA7FF7DA8FFA8A8FFA8A8A8FFA8FFA1CFA8CFA8A8A8FFA8%FFA8A8FD25FF7DFFFD06A8FFFF7DFFA8FFA8FFA7CFA7FFA8A8A7FFFFA8A8%FFA7FFFD04A8FFFFA1FFA7FF7DFFA7FFA7FF7DA8A8FFFFFFA7A8A8A8A7FF%7DA8A8FFFD04A8FFA87DCF7DFFFFA8A8FFA7FF7DA8A1A8A8A7A8CFA8A8FF%A8A8FD25FFA8FFFFA8CFA8FFA8CACAA8FFFFFFA8FFFFCFFFA8A8FFFFA8FF%A8FD04FFA8A8FFA8A8A8CFFFA8FFFFA8A8FFCFFFA8A8FD05FFA7FFA7FFFF%A8A8FFFFA8A8FFA8FFA8A8A8FFA8FFA8FFA8CFFFA8A8CAA8FFA8CAA8FFA8%FFA7CFFD25FFA8FFFFFFA8FFFFFFA8FFFFFFCAFFFFFFCAFFFFFFA8FFFFFF%A8FFFFFFCFFFA8FFFFFFA8FFA8FD07FFA8FFFFFFA8FD0BFFA8FFA8FD05FF%A8FFFFFFA8FFFFFFCAFFFFFFA8FFFFFFA8FFFFFFA8FFA8FDFCFFFDFCFFFD%8DFFA8FFFFFFA8FD05FFA8FD0DFFA8FFA8FD0BFFA1FD04FFA8A8FD09FFA8%A8A8FD07FFA7FFFFFFA8A8A8FD04FFA8A8FD1EFFA8A8FFFFFFA8FD05FFA8%FD0AFFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFCFFFFFFFCFA8A8%FD07FFA8FFA8A8FD04FF7DCAFFFFA8FFFFFFA8FFFFCFA8FFFFFFA8FFFFFF%A8A8FFFFFFA8A8FFFFFFA8FFCAFFFFFFA8FFFFFFA8FFFFFFA8FFA8FFFFFF%A8FD05FFA8FFFFFFA8FFFFFFA7FD04FFA8A8FD04FFA8A8FFA8FD06FFA8A8%FFA8A8A8A7A8A8CAFD06A87DFFA8A8A8A7A8FFA1FF7DCA7DFFA8FFFFFFA7%A8A8FFA1FFFFFFA8A87DFFA8A8A1FFA8A8A1FFA8FFA8FFA8A87DFFA8A87D%FFFFFFA8A8A8FFA1FD05A8A7FD08A8FFA8A87DFF7DA8CAFFFFFFA8A7A8CA%A7A8A8CAA8A8A8FFFFCAA7A8FFA87DFFA1FFA8A8A8FD06FFA8FFA8FFA8FF%A8FFA8FFA8A8A8CFA8FFA8FFA8FFA8A8CFA8FFA8FFA87DFFFFFFA8FFFFA8%A8CFFFFFFFFD04A8FFFFCAA8FFFFFFA8FFFD05A8FFA8A8FFA8A8FFFFFFFD%04A8FFFFA8FFA7FFA8FFA7FFA8FFA1FFFFA8A8FFFFFFA1FFFFFFA8CAA8CF%A8FFA8A8A7FFA8FFFFFFA8A8A1FFA8FFFFA8FFFFA7A8FD05FFA8A8A1A8FF%A8A8CFA8A8A8FF7DFFA8A8A8FFA8CFCFA87DFFA7FF7DFFA8A7A8FFFFFFA1%A8A8FFA7FFFFFFA1FFFD04A8A7FFA8A8A8FFA8CFA8FFA8A8A8FFA1A87DFF%FFFFA8A87DFFFD06A87DFD07A87DFFA8A8A8FFA8A8A8FFFFFF7DFD04A8CF%A8A87DA8A8FFA8A8FFFFA7A8A8FFA1A8A8A8A1FD1AFFCAFD07FFA8FD10FF%A8A8FFFFCFA8FD11FFA8FFFFFFCAFD2FFFCFFD22FFA8FD11FFA8FFFFFFA8%FDAEFFCAFD59FFA8A8FF7DFFA7FD07FFA8A8FFFFA8FFFFFFA8FD06FFA8A1%A8A8FD05FFA8FFA8A8FD0AFFA1FD0BFF7DFD40FFA8FFA8A8A8CAFFCAA8FF%FD04A8A7FFA8CAA8FFA7FFA8A8A8FFFFFFA8CAFFFFA8FFA8FFA8FFA8A8A7%FFA8A8FFFFA8FFFFA8A8A8FFFFA8FFFFA8A8FFFFFFA8A8FD41FFA1FD04A8%CAA1A8A8A87DFFA8CAFD06A8FFFD04A8FFFFFFFD09A8CAA8A8FFCAA8FF7D%A8A8FFA1FFA8FFA8A8A7FFA7FFA8FFA1FFA8FD41FFA8A8FF7DFFA8A8A8FF%CAA8A8FFA8FFA1FFA8FFA8FFA1FFA8FD05FF7DFFFD04A8CAFFA8FFA8FF7D%FFFFA8A8FFA8A8FFA8CAA8A8A8CFA8FFFD05A8FD41FFA8CACAA8CAFFA8A8%A8CFA8FFFFA8A8FFA8FFA8FFFFA8A8FFA8FFFFCFA8A8FFFFA8FFA8FFA8FF%FD05A8FFA8A8A8FFA8FFA8FFA8A8A8FFA8FFA8FFA8A8A8FF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2012-02-07T16:42:24+01:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>132</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAhAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXkf/OR0YPlzSpKmq3hUDtRomP/ABrm37HPrl7nQ9vj91H+t+h4Zon/AB2rD/mJh/5ODN9l&#xA;+k+55nB/eR94fZ+cU+iPGP8AnJOFjZ6DNT4UkuUJ93WMj/iGbvsY7yHu/S857Qx2gff+h5V+X3/K&#xA;daB/zH2//J1c2ur/ALqX9Uui0X9/D+sPvfXmce+gOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KvLP+cigP8FWJpuNSjAPehgnza9j/wB6f6v6Q6Pt/wDuR/W/&#xA;QXgugz21vrmnT3RC20V1C87EEgIsgLEgVJ2zf5QTAgc6Ly+CQjkiTyBD6b/5XF+W3/V6T/kTcf8A&#xA;VPOY/k7P/N+0PZfyvpv532H9TzT87/O/lbzFpemQ6NfrdywTu8qhJE4qUAB+NVzZ9maXJjkTIVs6&#xA;ftjW4s0IiBuj3FgH5ff8p1oH/Mfb/wDJ1c2Gr/upf1S6nRf38P6w+99a399a2FlPe3cgitbaNpZp&#xA;T0VEFSdvbORjEyIA5l76cxGJkeQfOfnP87/M+r3UkOjTPpOlgkRCKguHXszyCpU+yEU9+udJpuzM&#xA;cBcvVL7Hj9X2zlyGoHgj9vz/AFfax+e7/M+0sxq08+tQWjUYXzvdKh59G9QmnxV2Nd8yBHATwgQv&#xA;u2cWU9UBxE5AO/1fezv8r/zn1c6tb6L5kn+t2124it75wBLFI1AgdhTkhO1TuK9aZga7s2PCZQFE&#xA;dHadm9rz4xDIbB5F7tLLHFE8srBI41LO56BVFSTmhAt6cmt3zZ51/OvzPrF9NFo9zJpekqxWBYfg&#xA;ndR0d5B8Sk9aKRTpv1zpdN2bjgPUOKX2PHaztjLkkRA8MPLn8/1Jdpmm/m/qVmup2DavNbt8cdws&#xA;8wLb/aSrhm37rlk56aJ4Tw37mvHj1k48UeOveWf/AJJ+YfO115m1DSNeurqWG0tC7296pMqTeqgX&#xA;k0g9QfCW2JzA7Sw4hASgBuejs+x9RnllMMhNCPXndj4vZ80j0bsVYr5t81z6dMLGyoLgqGlmYV4A&#xA;9AAdq/PIksgEpt9O8830K3IuZo0kFU5TGOoPQ8VOCinZMdBfzbb6zDaakZGtXDlmejqaKSKSCvem&#xA;1cItBpk9/fW9jaSXVw3GKIVPiT2A9zkixYM/mTzLrd4bfTQYU6iOKgIXxeQ/2ZCyWdAL7nTfPNjE&#xA;bn61LKqDk6pM0hA/1W6/RjRXZMvK3nCW9nWx1Cnrv/czKKBiBXiwGwPywiSCGWZJi7FXYq7FXYq7&#xA;FXYq7FXYq7FXlv8AzkV/yhNl/wBtKL/kxPm17I/vT/V/SHR9v/3I/rD7i+fLCzmvb63soaetcypD&#xA;HyNBykYKKnwqc6GchEEno8pjgZSERzJp6Un/ADjv53ZQTd6chP7LSzVH3QkZrP5Xxd0vs/W7kdg5&#xA;++PzP6mN+dvyz8weT4LafU5baaK6cxxtbO7UZRUg80j7ZlabWwzEiN7d7h6zs7JpwDIjfu/sQX5f&#xA;f8pzoH/Mfbf8nVyer/upf1S06L+/h/Wj973P8/7+e18hiGI0W9vIbeb3QK81P+CiGaLsmAOa+4fs&#xA;en7cmY4KH8UgP0/ofPOi31tYavZ31zbC9gtZkmktC3ASBDy4Fir7Gm+2dFkiZRIBq3k8MxGYkRYB&#xA;5PVtX/5yEh1PSrzTpvLg9K8hkget5UASKVrT0B0r45qcfZJjISE+Xl+13uXt0TiYmGxFfV+x46CQ&#xA;ajYjoc3Lzz6/gEuv+SIwzBZdW0wVfqA1zb9a/N844/u8v9WX3F78fvsH9eH3h8j6hp97p17NY3sL&#xA;QXdu5SaFxQqwzr4TEhY5F4LJjlCRjIUQ9C8nfnl5h0Cxt9Nu7WLUtPtkEcIJMUyoooqiQBlIUdKp&#xA;X3zXajsyGQmQPCS7bSdtZMUREgSiPgfn+x7P5J/MPyv5uLvp5MOpRJ+/tJ1CzCOvUEVDpyPY7d6V&#xA;zS6nSZMP1fS9Ho9fi1H0/V3Hmnmt6xBpNibqZS9WCIi7FmNTSvbYHMMmnPAUfL/mG31mGV442ikh&#xA;IEkbGuzV4kEeNDiDakMT896VdR6k2oBC1tOqhnG4VlAWh8KgZGQZRV9K/MBoYY4L639QRqF9WI0Y&#xA;gbbqdq/TiJIMWVaVr2maop+qy1kAq0TDi4+j+mSBQQkH5jXDraWduDRZXd29/TAA/wCJ4JJiiPy/&#xA;tY49IknAHqTSkM3figAA/XjFZMnyTF5TrCfo7zHcGAcfQn9SMDam4cD8crPNmHq2WMHYq7FXYq7F&#xA;XYq7FXYq7FXYq8u/5yJYjyRZgftalED/AMiJj/DNr2R/en+r+kOj7f8A7kf1h9xeB6CzJrmnMpoy&#xA;3MJUjqCJBm/y/Qfc8vp/7yPvH3vs3OLfRHkn/ORzqPLWlpX4jekgewiav682/Y/94fc6Ht8/uo/1&#xA;v0F415G/5Tby/wD9tKz/AOT6ZutV/dS/qn7nndF/fQ/rR+977+e+kXGoeQpJYAWOnXEd5IoFSUVX&#xA;iY/7ES8j7DOf7LyCObfqKep7axGeCx/Cb/R+l846TNYQanay6jbm6sElQ3VsGZS8VfjUMpUg8em+&#xA;dJkBMSImi8hiMRIGQuN7+59EaJ5A/JTVrRbzTLW3uYnWpH1u4LLtyo6NLyRgOoIrnO5dXqoGpEj4&#xA;D9T1uHQaLILiAf8AOP60Prflr8h9FAF/DapKSAtvHcTyyknYfu45GYfMimSxZ9XP6b+QYZtNoMX1&#xA;V8zfyt6QkdlpWmLHGvo2NhAFRFqQkUKUAHUmirmsJM5eZdyAIRobAD7mLT6T+XH5iWSXvCDUGCgC&#xA;4iYx3MfgrlSsgp/K+2ZYyZ9Oa3H3ODLFptWOLaXn1/X8C8W/Nf8ALXT/ACdLZy2F809velwttPx9&#xA;dOABLVUKGXfwFPfN3oNbLNdjk852n2dHT0Ymweh5pX+VE93D+YWim2J5vP6cgBIrGykSVoD+zU5b&#xA;rwDhlfc09lyI1EK731Jqml2mp2htboExkhlZTRlYdCDv45yJD3QKlo2h2OkQPFa8j6h5O7kFjTp0&#xA;AG2IFJJRxaJ2aIlWYD449iaHxHvhQk+oeUNCvAx9AQSnpJD8H/C/Z/DAYptgFmZbDX41gk5vBcem&#xA;rr0cB+J+hhkOrNln5iWjPY2tyBUQSMjewkA3+9MlJjFd+X19FJp0tmSBNC5cL3KPTf78YrJlZIAJ&#xA;JoBuSckxeVag36X8xy+h8QuZwkZHdahQ33CuVncs3quWMHYq7FXYq7FXYq7FXYq7FXYqwP8AOXyr&#xA;rfmXyxa2GjwC4uYr2Od0LpHSNYpUJq5UdXGZ/Z2eGLITI0K/U6vtfTTzYhGAs8V/YXkNl+S35lQ3&#xA;kEw09EMciOHNxAacWBrTmembmXaWAgi/sLz0OyNSCDw/aP1vprOXe1ec/nT5O8weZ9M02DRrcXEt&#xA;vM7yq0iR0VkoDVytd82XZuohikTI1YdR2xpcmaERAXReaaB+TX5hWmu6bd3GnIkFvdQyyt9YgNES&#xA;RWY0D1OwzZ5e0cJgQDzB6F0un7K1EckSY7AjqO/3vo+aGKaF4ZkWSKVSkkbAFWVhQgg9QRnNg0bD&#xA;2BAIovDPOX/OPt6LqS78rTJJbOS36PuGKuhJrxjkNVYeHMj5nN7p+1hVZOfe8zq+wpXeI7dx/R+1&#xA;hT/k/wDmQjFToshI/llgYfeJCMzf5QwfzvvdceydT/M+0frTvyz+Rfna4v7ebUoYdPtI5EeUTSLI&#xA;7ICCQqRF9z/lEZTm7UxAER3LkabsXMZAzAiPx3PoLW7CTUNFv7CJxHLd200CSNUhWljKBjTwrnO4&#xA;p8Mge4vV58ZnCUR1BD5wvfyW/MnTLnlaWq3PE/Dc2c6D7g5ik/4XOlj2lgkNzXvDyEuyNTA7C/MH&#xA;+wqC/lD+Z1/c8p9Mk5tQPPcTxbDpuS5Y09sl/KGCI2P2Fj/JWpkd4/Mj9b1j8r/ygTytc/pbVJku&#xA;tX4lIViBMUAYUYqzAFnI2rQUFRmo13aHijhjtH73e9m9leAeOZuf3PS81juXYqxLzJ5d1y41X9I6&#xA;bKFbgqgK5jkFB47D8ciQWQKXyWP5gzIYJDJwOzfvYl2PiytU4N12TDy35KayuUvb91eaM8ooU3VW&#xA;8WJ6kYRFSWUXVrBdW8lvOgeGUcXU9xkmLCLvyRrFjc/WNJn5hTWP4vTlHtXZT9+Q4WVtT6V59vY/&#xA;q9yzCFvtAyRBSP8AK4GpxorYTvy15Sj0pvrNw4mvSKAr9hAevGu5PvhAQSyLJIdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVSOTXTb3mpwTsx+r8fqwSGRwOUQf4mRWHU98Fpp3+I1tdJsru7Tm1xEJJ&#xA;CrRpTYE8VdlLHfYLja0jP03bF5lVGYRWwu+WwBRgSAK99sbWkOmtzNqSRegRZPaC5MpK1UHcsfi6&#xA;DpSla+2NrTeleZbTUbr6vGhRmjMsZLxtVQQPiCMxVt+hxBUhZrep3NrqFpbpN6EUySPI4hadqpSn&#xA;wrv3xJUBW/TDIYLeKKS+uZIROxRRF+7JoGIkK0J7DG1pq48wQwzTA28jW9syJc3A4cUZ6UFC1TTk&#xA;OVOmNrSi2rixudVkuXZ4oZYUhjqBQyRqeIJIUCp6k42tI3SdWg1KKR4xxaF/TkUMritAahkJUg1x&#xA;BUhLn1S8XWmt7q5FjH6qi2iaHkk8e1aSk7Ment74LWkQ3mJFllBtZfq0E/1aa5qnFXJAHw15U+Id&#xA;sNrSHm8yRDXI7ZZaWyObaVQYqtOxAFQT6nFelQOuC91pGLrJne4WG3lNtCZI3vAUCh41Jaik8juK&#xA;Vp1w2tId/MNvZ6bZ3EoeVJow5d3iV6bVPEsvJt+ijG1pTvdSdLjUJfWlW2js4ZUEdKguzVZQ21aA&#xA;dcFqik12JtT/AEckTvIgQyOWRftryBClgzADrQYbWkLaeY4rnWxCsv8AosoaKBAYt5EJLO4BMgBp&#xA;RegwWtK+n+Z7G+vUtoloJQxhfnGS3DryRWLJtuKjCCtJxhQ7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;qg00yNJb2T1GJvqeoDT4aJw+HbwwUm0G/lqIxwpHcyxelbm0LKEJaM/6ymh9xjS2vuNASRUEVzJB&#xA;S3FrKUCEvEOgPJTQ+4xpbVBokIlgk9V6RW/1WRPh4yR06Nt+rGlt2maObBlVbp5YI1KwwsqDiPdg&#xA;oZqdsQFJX32lm5uoLqO5kt5oFdFZAjbPStQ6sO2NLanNo8kk0dyl7LFdLH6Mk6iOrpXlupXiCCdi&#xA;BjS2suPL8M8k3K4lW2uWV7m2HHi7oAKklaivEVpjS2vutCtrn63zkcNdSRy8loCjxKFUrt/k98aW&#xA;0TYWkttGyyztcOxqXZUSm1KAIFGEIQt3ojXkym5u5JLVZRMttxQAMu4HMLypgpNoSz0OWWe8N48i&#xA;W7Xr3EdsCoSSgUq7EAtSo6V7YKW0WmhiK9e4guXijml9eaAKjKz7E0ZlLKGpvQ4aW249EEUk3pXU&#xA;qWs7O72o4FecgIY8ivKm9aV640toeXyvAyRIlzLGEtvqbkBCWi3/AJlNDvuRjS2rT6BbzJOjSuBP&#xA;bpbPSn2YySGG3XfGltufQori9guZpnZbdkkhi4oOLIKD4+PPiepFeuNLbrPQxZz8oLlxah2kW2Ko&#xA;QC1SRz48uNT0rjS27TtEFjIoiuXNrGWMduypQcq7c+PMgV23xAW0zwodirsVdirsVdirsVdirsVd&#xA;irsVdirsVdiqld3C21rNcOCVhRpGA6kICT+rFWPpe3T6nZ6hdpGsf1Ke4ijiJYhaI1GY0BNPAZFk&#xA;jNF1jUL2VPXtuFvNF6scqpIApqPgLMKNseowgoIU/MSXyzR3PGaXToo29eK2lMUitWvqUBHKg7Vw&#xA;FQqQauTIIbf95bjTxdRTSVLsalaMa77DfDa0oLqs73EM8Vqst3Jpf1lQpapYsp9MCtKVPzwWtLB5&#xA;j1BtNa4jiSWeOVUuY0SUNApFWLxn4jQjtjaaXS+Y7pxbR2Sx3Es0DTmREldDxbgFVVHMb9a9MbRS&#xA;cRXbHT1u5omib0vUliIPJSFqy0ySEstddvB9We9ijWK9gkuIPSLFlEah+LA9fhbqMFpp36Z1KPSD&#xA;qc0UJjlRGt4ULcgZWAQOx2/a3xtaVLqW9SfT1vY4HkkueKNGXAUemTXc9diMVQMt/dahJpl2Y447&#xA;Nr7jCAS0p4rItW6KK8TtgtKJ0/X768u0KW1bKSWSIuEk5IEqFZmpw3I3HbEFFLLHXdVn+pyyRQC3&#xA;vZJYo+JfmrR86FgdqHhja0p2GsajHpPrTyRy3Etw8VuvF2ZiHaq8U+W3tjaaXQ37393otzLF6Mom&#xA;uY3StaFInU/iuKFXSNevr+aFzbUs7jnxcJJ8HGvHk5HA1pTbviCpCe5JDsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVaZVdSrAMrCjKdwQe2KoC10DSbWYTQQcXVWQEs7AK3UUYkUwUm1Sy0fTrKQyW0Rj&#xA;ahUDm7KATUhVYlV6dhjS23e6TYXr87lGZuPA8XdKrWtCEZaj540trbnRdMuEjSWH4YU9OMIzIAm3&#xA;w/AVqNuhxpbbGj6cONIvswfVV+J9oag8evt1640trRoemCExCJgrOJGYSSBywHEEvy59NuuNLbpN&#xA;D0uSOGMwcRbgiEozoyg9aMhVt/njS2i4YYoYUhjXjGihVXrsNu+FCFtNG0y0k9SCAK9CoJLNRT1V&#xA;eRPEewwUm1seg6TGksa249OVSjxlmZeJNaKpJC777Y0trotG06IRhYj+5k9WMs7sQ4XjWrMSduxx&#xA;pbWJoGkpci5S34zK/qqQzgBz3C149/DGltfHo2mxXRuo4uEpYueLuE5EULcK8K/RjS2vi0qwijgj&#xA;ji4pau0kA5MeLPy5Hc7/AGz1xpFqTaDpJRk9CitJ6x4s60k/mWhHH6MaTapBpGnweh6UXH6szvD8&#xA;THi0gIc7nevI9caRa220bTbaf14IjG9SwAd+ALbEhK8B9AxpNo3Ch2KuxV2KuxV2KuxV2KuxVBWm&#xA;taXdzCG2nEshBIChqUHvSmC00jcKFCe9ghura2evq3RcRUG3wLyNfoxV097DBcW8Dhi9yzLHQVFV&#xA;Usa/QMVV8Vdiqgb2AX4sd/XMRn6bcAwXr41OKq+KuxVQsryK8tUuYaiOSvHkKHYkdPoxVXxVQsry&#xA;K8txPECIyzKOQoaoxU/iuKqzuqIzsaKoJY+AG+KoX9Lad/ow9da3n+8w3+P5bfrwWmleC5gn9T0n&#xA;D+k5jkp2deo+jChUxVYk0Lu8aOrPEQJFBBKkioB8NsVX4qofXIfr31Pf1vS9bp8PHlx6+NcVV8Vd&#xA;iqnc3CW8XqOrMKhaIpY1Y06DFVTFXYq7FXYq7FXYq7FXYq7FXYqxbTYdTtPKvqEySkQsq2PHgylp&#xA;KFuS0k2FTkRyZdVCE6oNP1CKJp3t1lgKMiSo/ovQzekJS0n44qiZbKzu7vS0to7gWXqXHNmMyEVh&#xA;HRnIcKTt9+KrY7KaZdMt7gTtFFdXMbNVw4jAcJVxRqEUFa9MVaRLtLC2iuvXNhFeTJcU9QyekvL0&#xA;qlfiKVpXFXEX31GD6yLkab9ckLj94Zvq1D6XOn7zjy696Yqum06G71GPgtwlothJ6bkyo3L1fhBJ&#xA;IY+IU40qGuxqBj02dvXuLgW0YezInXkxbdxJHsHHfl2wKmUFBrVwb9Lk3Prj6kU9UxejxFPs/Btv&#xA;y5YUITSbKe1bSZ4xMHleZLtWLlQnxcaodl33GISW7CW7Eul2bicz29zP9bYrJw4kyFauRxYGopvi&#xA;FQ80d+mmaehDx2omuvrfwSkCsjGMusRSTjuehpirI9FWQaXCssjTEBh6jqyMy8jSqvVunjhCCxaK&#xA;xvkimYwyctGZEtfhJMgFyXYr4/uwoyNJVrm3v47PTvU5R206yzXZ4TMFmmPMeosLI+3Kg98VXX6X&#xA;qpYSLJNeSRwhRbMlxF6h5kBwyfZenXn2wlVW5tCtzri1ubWWf03iuEE0ilDw58eOx+LY03ArTYYq&#xA;sj+tmwtfrEE0dgty4uxCZyXQJ8DhW/eiMt1GKq1xp8N3dgxrcrbpYP6JJlRuQkPEMT8RPcBsaVRZ&#xA;dWf6ih9cfpK2hiuJByrG8bqXc/ykxk/Tiq1f09Lpd1IomW5too7RR8XJ+D1lkUVHIlab4N1bjS6G&#xA;l3P1eWWRWntyiJHPHw+MCQL6rMxG3xb0wqjrZ45PMsrf6RHHFVYlInMcsrVLuSaoFXoox6o6MgyS&#xA;HYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FUsXWHMGqSekK6c0iqoP2+Ccx22rgtNNzeYdLtggupfTlaJZmQI70Vu5KqdsbWnXGs2tvct61&#xA;wi2ywJNQJIz0d+IfkKrxP342tK82rafC0yyS0aAosihWJ5S7oooDyJ8FxtFKba9pS2q3TTEQvIYQ&#xA;eEnL1BX4CvHkDt3GNppfFq+nzXRtY5GaYHiQI5OIbjyoW48Qadq42tIGHzHAGsIpD673iu3rwRy8&#xA;BxNBRSGbc7e3U7Y2tJhBqthcfV/Rl5/WlZ4KK3xKn2j02pXvjaKde6pY2TItzIVaQEoqqzmi9TRA&#xA;1APHG1pBz60TqljaWrK0NyhleUo71TbiEK0UVr1PTG00itW1B7G1EkcfrTyOkUENacnc0pX5VOJK&#xA;hRi1+wOnWl7MxjW6ACKqu550PJfgBO1Dja0vOvaULdLj1iYpHMSURy3MVqvALyB27jG1pSn1lJFs&#xA;pLF1eOe7FvKWVgQOLMw4niVb4e+NrS+LWLZLdpbiZW/fvCnpRyEllJ+EJRmZhTcjbG1pUOs6YLWK&#xA;69cejMSIiAxZiKggIByqKdKY2tLNC1CW/wBPFzKAGMkiigK/CrlRsd+gxBUqGmazdX926pHCtvHI&#xA;8ciGQ+uvAkBmj40oSPHEFSFWXXbFobn6vOOcCOxkaOQxAp1+IABqeCnG1pfNrenWyoLmYB2RZGKo&#xA;7AK2wZqBuAJ6csbWmrvX9JtJ3guJ+EkfEyDg7BQ/2SWVSBja0qz6tYQXK2zyEzsAeCI70DGgLcAw&#xA;Wvvja00usac12LRZqzFjGPhfiXUVZQ9OHIeFcbWm7PVbG9crbOZKAnlwcKQp4ni7KFbfwONopfea&#xA;ha2aq1wzKrVoQjvQDqTxDUA8ThtUPc+YNItmCzXFC0YmUqjuDG3R6orCm2C00s1TXbO0s5HjlDXB&#xA;gaaCMKz1HElWYKNlJ7mmJKgIy1uC9jDcTUUtEskh6AVUE4UJdpPmFLyG6luIvqy2yibc8qwOvNX2&#xA;HgDgBSQvfzJYc7MQh5Y7xmVZBHIAAoJrTjU/5npja0ioNVsLi5a2hkLyoWVqI/CqfaHOnAkfPG0U&#xA;i8KpHc6NqnO/jtZ4VttRJMpkVjInJeDcaGh26VwUm1eXRnNxdOjKI5rMWkamtQRy3b/gsaW1g0J3&#xA;ZlldTC+npZMBWvJSfiHtvjS2hv8ADVy2lpDLOj3y3C3LSMCUdkXgFalGpw8MFLaIj0W4EdsCIYmi&#xA;vBdOsfPiVCFOrVJbfDS24aJcDWxfo8cEfItIIuYaYUoFkUnhsd641utrLLQry1j0rhNGXsBIkwIN&#xA;HSYgtxPiKbY0tu8v6eIr7ULgV9FZXhtFYUCpy9STj/kl2/DEBSi76wvWv0vbN4xL6LW7rMGK8SwY&#xA;MvHuCOnfEhVKw0R7OWw4yB47S3khYmoZmdlaoG+3w+OIC2q6jpX1+8tmmb/RbcM3pqzoxkbYHkpU&#xA;jiPfEhbSmXTLvTnsobcrIn155LYNyYIkkbbOeuxPXBSVS60y5tI7PgyzXk+o/WZX4kIGeNwdhUhR&#xA;QDGkIpNCnUQuZla4+u/XblqFVPwFCqDfoCKVOGltDyeWrgwxlZIzPDczTqr8vTZZiaq3GjA07jBS&#xA;2q/oW+jFnPbG3iurVpj6XFzCVmpy78q7dcNLaO0SwmsbAW8zq8nOR2ZKhfjcttX54hSgzo15Pq1v&#xA;fTmCM2zMfUhDCSQEUCvXb9eNLayLRdTi0ufSllha0McscDlW9T95WnLem3LqMFLa268uTtcmaIwy&#xA;rJCkM0c/OgMY4hl4HoR1BxpbVp9Dmk/SvF0Av4Yoohv8JjQrU/8ABYaW1RdN1C31CW5tJIilysQn&#xA;WUMSpiHGqcSOo7HGlQ9p5fntr0v+5lt/XM6O/P1V5EtQAHj1PXBS2qaRolxZX0twXjihkUg2sHP0&#xA;y5NefFyeJptQYQFJXa3pF1fyxtG8bRLG6NDNz4cmpSSikVI98SFBWRaHcIhX1EI/RyWPf7acvi/1&#xA;fixpbQ7eXdRjgeO2nh/0izjtLn1VY7xxlOSEHvXvgpbTO6sLmbRvqCShJWiWKSXfpQB6fMVw0qBm&#xA;8sqkkxsX9OOe0ltZEkeR92FIyCxagXBS2iZtLuuGmNDKgm0+gbmCVYGP02pTfp0w0tqVnotzBrD3&#xA;3OOGJ+Zkhg5gSlvss6seIYe2NLac4UOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KqN764s5zbnj&#xA;OI2MRpX46fDsffFWPQeYruS809+Q+pPHCt5sP76ZJCKHsAUyNsqVY/NIt7K3a7HqXM8TXRUtHEBE&#xA;WPADkV5NTsMbRSLPmS3a9gtYYjIZ445VcuifDJ04hiORA6gYbWlCDzJNHBfz30HCO2uDBFxZdz8I&#xA;CGppXepbpgtaVF8zwPaPPHA0siTpbmKN0erSU4lXU8SDXDa0658xvbvOjWMr/VEjkuyrIfTEgr4/&#xA;FT2xtaTG/muV0+aWzT1LgRloUPdqbYUJNZa+I7Sa4nunumiMa3Fs8QhkhLtxJYdxvkbZUin8zW6y&#xA;3kYhcvasqINv3rNJ6VF+T7YbRSHm1m6i5/VEecnUTbSeqy7bKeMf2aA9q1pgtaRx1eVdUWwe1ZSy&#xA;tKZeakCNduRAqRU7DDa0hrLzVZ3c3pohAaN5IiHjZiI9yGRSWQkbiuNrS2PVbi9uNJlWOS1guZJD&#xA;wLA+oiwllJ412r442tK8HmK2lvpbP0z6qK7IVeOQMI+oPBjxPscbWmrHzCtzJCJbWS2juImmglcq&#xA;QypQt9kkjr3xtaUY9WnvNU01oopYLKYTFS5UCUBAQeAJNB2rgtaT3JIdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirCR+hP0BfcPrPp/W1404epyqOHp9uPWmQ2pkmGo/UvrVl9S9f659VHD0fRp9&#xA;X/Z5+t8HXphKtan9U9Wx+u/WvqlYOHP0Keptx/4tr/PwxKhbdfor0tW5/WfQ+srypw/3qqP7nvX7&#xA;P2tsVVtvqcX1r6z6n1y34cvQry5DhT0vg41698VX3v1D1PMHP1a+hD9a48fs8G4+nXvTrXFCbXVf&#xA;0c3p+rXgOHo8fV7U48vhr88KpAn1CmrfpH1/rv1b/SPV9Hl6NPh4ej8Fa06+2BKja/ob19Fp9Y5/&#xA;HTlx+16v+7/f1elO+Koif6h9Wu+H1n1f0ofT9Lhz+s8Vpx5fDx/1sVX2vqfp68p9aryT63z+r8PT&#xA;oeHX95wp/Lj1VT0f6v6bfVvrf6P9OX6vz9GlKHpT97/q8sQpRNt9R9Hy/wAPVpv9W+zWnpGvqU/y&#xA;fDFCC0f6j69n6X1r0PSufqXq+jw9PbnTh8Va/wA2+ISUTa/o7jolfW9P6tP6XLjT0+C8vV4+1KUx&#xA;VDaN9U/SOncPrvpcZvqHr+n6fp8RWnH4vlXEKX//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2012-02-07T16:42:24+01:00</xmp:MetadataDate>
         <xmp:ModifyDate>2012-02-07T16:42:24+01:00</xmp:ModifyDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>20.999993</stDim:w>
            <stDim:h>14.799992</stDim:h>
            <stDim:unit>Centimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Groupe de nuances par défaut</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 J=0 N=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 J=0 N=100</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=10 J=100 N=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 J=0 N=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 J=100 N=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=55 J=100 N=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>55.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=90 J=10 N=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>10.000002</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=15 M=100 J=100 N=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>14.999998</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=45 M=90 J=0 N=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>45.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=40 J=30 N=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>39.999996</xmpG:magenta>
                           <xmpG:yellow>30.000002</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=85 J=100 N=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>85.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=5 J=100 N=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>5.000001</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=90 J=0 N=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=80 M=5 J=0 N=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>80.000000</xmpG:cyan>
                           <xmpG:magenta>5.000001</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 3015 CVU</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>22.999998</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>18.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE Warm Gray 7 CVU</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>6.000000</xmpG:magenta>
                           <xmpG:yellow>11.000000</xmpG:yellow>
                           <xmpG:black>38.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:DocumentID>xmp.did:CE611759082068118DBBE9289BBD28CF</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:CE611759082068118DBBE9289BBD28CF</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:CE611759082068118DBBE9289BBD28CF</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CE611759082068118DBBE9289BBD28CF</stEvt:instanceID>
                  <stEvt:when>2012-02-07T16:42:24+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -111.036 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 111.036 li
216.638 111.036 li
216.638 0 li
cp
clp
[1 0 0 1 0 0 ]ct
95.7817 50.0859 mo
95.2002 50.0859 95.1572 50.0859 94.5425 50.1172 cv
94.4775 50.0449 li
94.5098 48.8877 94.5425 47.6382 94.5317 46.5737 cv
94.2793 46.5737 94.0049 46.5635 93.5005 46.5635 cv
92.645 46.5635 91.7012 46.5737 90.9458 46.5845 cv
90.9341 48.5469 90.9673 49.2393 91.0215 50.0142 cv
90.9673 50.0859 li
90.3638 50.0859 90.3311 50.0859 89.728 50.1172 cv
89.6621 50.0449 li
89.7056 49.0322 89.7163 48.5054 89.7163 45.3755 cv
89.7163 43.9814 89.6841 43.4849 89.6514 42.8647 cv
89.7163 42.793 li
90.2769 42.7822 90.4077 42.7822 90.9341 42.7622 cv
90.9893 42.834 li
90.9785 43.4438 90.9565 44.291 90.9565 45.7061 cv
91.5264 45.7168 91.8335 45.7271 92.5469 45.7271 cv
93.5552 45.7271 94.0161 45.7168 94.5317 45.6953 cv
94.5098 43.7329 94.5098 43.5059 94.4541 42.8647 cv
94.5098 42.793 li
95.1016 42.7822 95.1895 42.7822 95.7266 42.7622 cv
95.7817 42.834 li
95.7485 43.8364 95.7378 44.4873 95.7378 46.2944 cv
95.7378 48.2993 95.7817 49.0635 95.8477 50.0142 cv
95.7817 50.0859 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 .06 .11 .38 cmyk
f
102.065 46.9355 mo
102.065 46.502 102.065 45.9336 101.989 45.644 cv
101.759 44.8384 100.969 44.5806 100.158 44.5806 cv
99.5107 44.5806 98.8745 44.7144 98.2598 44.9209 cv
98.1948 44.9829 li
98.1841 45.1997 98.1841 45.2617 98.1616 45.7368 cv
98.249 45.7881 li
98.7104 45.6025 99.2036 45.3965 99.9165 45.3965 cv
100.464 45.3965 100.717 45.5928 100.827 45.7788 cv
100.926 45.9443 100.926 46.1396 100.926 46.4189 cv
100.738 46.4399 li
98.7646 46.6567 97.5366 47.1011 97.5366 48.4854 cv
97.5366 49.5078 98.3047 50.21 99.4009 50.21 cv
100.234 50.21 100.728 49.8384 100.937 49.6836 cv
100.926 50.0552 li
100.969 50.1172 li
101.474 50.0967 101.562 50.0859 102.076 50.0767 cv
102.132 50.0239 li
102.076 49.3521 102.065 49.2393 102.065 47.9585 cv
102.065 46.9355 li
cp
100.937 47.1836 mo
100.937 48.9087 li
100.816 49.0117 100.421 49.3628 99.7407 49.3628 cv
98.6992 49.3628 98.6992 48.4751 98.6992 48.4233 cv
98.6992 47.5034 99.73 47.3594 100.837 47.2041 cv
100.937 47.1836 li
cp
f
108.931 44.7461 mo
108.909 45.5303 108.898 46.2632 108.898 47.1011 cv
108.898 48.3711 108.931 49.1353 108.954 49.5796 cv
108.954 49.7251 108.964 49.8691 108.975 50.0142 cv
108.931 50.0767 li
108.405 50.0859 108.317 50.0967 107.813 50.1172 cv
107.747 50.0552 li
107.758 49.6216 li
107.517 49.7866 106.935 50.21 106.036 50.21 cv
105.608 50.21 105.137 50.1172 104.786 49.8584 cv
104.084 49.3218 104.084 48.4434 104.073 47.6382 cv
104.073 46.9971 li
104.051 45.52 104.051 45.3545 104.018 44.7974 cv
104.073 44.7246 li
104.588 44.7144 104.687 44.7144 105.202 44.6733 cv
105.269 44.7461 li
105.224 47.0078 li
105.224 47.2866 105.213 47.4937 105.224 47.9888 cv
105.235 48.4233 105.258 49.3521 106.365 49.3521 cv
107.012 49.3521 107.473 49.0117 107.736 48.8154 cv
107.747 48.2573 107.747 47.7822 107.747 47.1836 cv
107.747 45.7471 107.736 45.458 107.67 44.7861 cv
107.736 44.7144 li
108.241 44.7041 108.36 44.7041 108.865 44.6733 cv
108.931 44.7461 li
cp
f
113.482 49.27 mo
113.45 49.6108 113.45 49.6836 113.439 49.9829 cv
113.384 50.0449 li
113.154 50.0967 112.967 50.1377 112.561 50.1377 cv
112.298 50.1377 111.607 50.1377 111.268 49.6016 cv
111.07 49.3008 111.07 49.0532 111.07 47.835 cv
111.092 45.562 li
110.708 45.562 110.697 45.5713 110.302 45.582 cv
110.259 45.52 li
110.28 45.1895 110.28 45.1069 110.28 44.7764 cv
110.345 44.7144 li
110.587 44.7144 110.729 44.7246 111.092 44.7144 cv
111.081 44.4971 111.081 44.2705 111.081 44.0532 cv
111.07 43.8564 111.059 43.6606 111.048 43.4639 cv
111.103 43.3921 li
111.596 43.2783 111.717 43.2476 112.222 43.1035 cv
112.298 43.1543 li
112.265 43.8364 112.254 43.9702 112.254 44.7246 cv
112.715 44.7144 112.846 44.7144 113.471 44.6934 cv
113.527 44.7554 li
113.504 45.0239 113.493 45.1377 113.493 45.4893 cv
113.439 45.5513 li
112.891 45.5405 112.824 45.5303 112.244 45.5303 cv
112.222 47.4526 li
112.233 47.5762 112.233 48.1646 112.233 48.3101 cv
112.233 49.0635 112.331 49.3008 112.88 49.3008 cv
113.11 49.3008 113.286 49.25 113.406 49.208 cv
113.482 49.27 li
cp
f
119.361 48.7744 mo
119.218 48.8877 118.977 49.0742 118.571 49.2285 cv
118.265 49.332 117.935 49.3838 117.618 49.3838 cv
117.277 49.3838 116.651 49.332 116.203 48.8257 cv
115.829 48.4033 115.797 47.896 115.786 47.5347 cv
117.583 47.5244 117.881 47.5244 119.592 47.5347 cv
119.667 47.4727 li
119.678 47.0181 119.702 45.9956 119.076 45.2925 cv
118.746 44.9209 118.144 44.5806 117.277 44.5806 cv
115.84 44.5806 114.612 45.52 114.612 47.4414 cv
114.612 49.2393 115.741 50.21 117.54 50.21 cv
118.516 50.21 119.108 49.9111 119.296 49.8184 cv
119.361 49.7456 li
119.383 49.3428 119.394 49.2393 119.448 48.8257 cv
119.361 48.7744 li
cp
118.539 46.7388 mo
117.529 46.7495 117.113 46.7603 115.786 46.7495 cv
115.896 45.7168 116.619 45.3237 117.233 45.3237 cv
117.726 45.3237 118.209 45.562 118.429 46.1294 cv
118.516 46.3672 118.528 46.5947 118.539 46.7388 cv
cp
f
129.824 49.2393 mo
129.79 49.5908 129.79 49.6626 129.768 50.0142 cv
129.691 50.0859 li
127.554 50.0859 127.214 50.0967 125.13 50.1172 cv
125.074 50.0449 li
125.108 49.2285 125.141 48.6709 125.141 46.7803 cv
125.141 45.0449 125.141 44.0532 125.063 42.8647 cv
125.13 42.793 li
127.29 42.7822 127.718 42.7822 129.736 42.7622 cv
129.802 42.834 li
129.768 43.1445 129.747 43.2681 129.725 43.6396 cv
129.66 43.7119 li
128.245 43.6714 127.772 43.6714 126.381 43.6606 cv
126.347 44.6113 126.347 44.9111 126.347 45.8608 cv
127.697 45.8716 128.113 45.8608 129.451 45.8408 cv
129.505 45.9121 li
129.462 46.2744 129.462 46.3779 129.451 46.7085 cv
129.384 46.7803 li
128.113 46.7495 127.837 46.7495 126.347 46.7495 cv
126.325 47.9478 126.336 48.2373 126.347 49.2188 cv
128.003 49.2188 128.342 49.2188 129.757 49.167 cv
129.824 49.2393 li
cp
f
135.593 48.8564 mo
135.548 49.3008 135.537 49.3521 135.504 49.7764 cv
135.427 49.8491 li
135.11 49.9932 134.683 50.2007 133.915 50.2007 cv
132.258 50.2007 131.184 49.0742 131.184 47.4619 cv
131.184 45.8203 132.236 44.5806 133.936 44.5806 cv
134.648 44.5806 135.153 44.7974 135.438 44.9111 cv
135.481 44.9829 li
135.438 45.3545 135.427 45.4893 135.405 45.7988 cv
135.317 45.8408 li
134.957 45.5928 134.54 45.438 134.1 45.438 cv
133.19 45.438 132.39 46.0986 132.39 47.4209 cv
132.39 48.8257 133.235 49.332 134.089 49.332 cv
134.836 49.332 135.295 48.9707 135.504 48.8154 cv
135.593 48.8564 li
cp
f
142.128 47.3179 mo
142.106 46.5947 141.962 45.8716 141.459 45.3237 cv
140.978 44.8071 140.241 44.5806 139.496 44.5806 cv
138.4 44.5806 137.764 45.0029 137.457 45.3037 cv
136.722 45.9956 136.7 47.0078 136.7 47.4004 cv
136.7 47.7412 136.71 48.7949 137.457 49.5078 cv
137.807 49.8491 138.432 50.2007 139.42 50.2007 cv
140.187 50.2007 140.835 50.0239 141.317 49.5698 cv
141.679 49.2285 141.91 48.8257 142.029 48.3193 cv
142.106 48.0098 142.128 47.6689 142.128 47.3179 cv
cp
140.933 47.3594 mo
140.943 47.5762 140.933 48.2686 140.68 48.7329 cv
140.363 49.3008 139.835 49.4248 139.429 49.4248 cv
139.211 49.4248 138.98 49.3838 138.784 49.291 cv
137.917 48.877 137.906 47.835 137.906 47.4209 cv
137.906 46.9863 137.94 46.3872 138.234 45.9644 cv
138.618 45.3857 139.233 45.3652 139.442 45.3652 cv
140.055 45.3652 140.406 45.6338 140.615 45.9536 cv
140.889 46.4092 140.933 47.1011 140.933 47.3594 cv
cp
f
145.056 50.0767 mo
144.529 50.0859 144.421 50.0967 143.904 50.1172 cv
143.85 50.0449 li
143.873 49.312 143.904 48.3813 143.904 46.3979 cv
143.904 44.9722 143.904 43.4438 143.795 42.1216 cv
143.85 42.0591 li
144.387 41.9771 144.499 41.9561 145.046 41.8423 cv
145.111 41.9141 li
145.034 43.2681 145.034 44.6313 145.034 45.9849 cv
145.034 48.2476 145.066 49.0322 145.122 50.0142 cv
145.056 50.0767 li
cp
f
151.571 48.7744 mo
151.428 48.8877 151.187 49.0742 150.781 49.2285 cv
150.475 49.332 150.145 49.3838 149.828 49.3838 cv
149.487 49.3838 148.863 49.332 148.412 48.8257 cv
148.039 48.4033 148.007 47.896 147.996 47.5347 cv
149.793 47.5244 150.091 47.5244 151.801 47.5347 cv
151.877 47.4727 li
151.89 47.0181 151.91 45.9956 151.286 45.2925 cv
150.956 44.9209 150.354 44.5806 149.487 44.5806 cv
148.05 44.5806 146.822 45.52 146.822 47.4414 cv
146.822 49.2393 147.951 50.21 149.75 50.21 cv
150.727 50.21 151.318 49.9111 151.504 49.8184 cv
151.571 49.7456 li
151.592 49.3428 151.605 49.2393 151.657 48.8257 cv
151.571 48.7744 li
cp
150.747 46.7388 mo
149.739 46.7495 149.323 46.7603 147.996 46.7495 cv
148.104 45.7168 148.829 45.3237 149.443 45.3237 cv
149.936 45.3237 150.419 45.562 150.639 46.1294 cv
150.727 46.3672 150.738 46.5947 150.747 46.7388 cv
cp
f
160.114 45.9536 mo
160.914 46.2852 161.979 46.7188 161.979 48.041 cv
161.979 49.1982 161.067 50.2407 159.159 50.2407 cv
157.996 50.2407 157.251 49.9111 156.988 49.7866 cv
156.944 49.7144 li
156.988 49.3521 156.999 49.1563 157.031 48.7637 cv
157.142 48.7227 li
157.417 48.8984 158.052 49.332 159.072 49.332 cv
160.202 49.332 160.675 48.7847 160.675 48.1646 cv
160.675 47.4414 160.036 47.1631 159.324 46.9043 cv
158.776 46.6768 li
157.996 46.3359 156.956 45.8916 156.956 44.6313 cv
156.956 44.249 157.065 43.8564 157.295 43.5464 cv
157.8 42.8647 158.71 42.6372 159.599 42.6372 cv
160.466 42.6372 160.99 42.793 161.572 42.9688 cv
161.628 43.0508 li
161.583 43.4438 161.572 43.5879 161.54 43.9604 cv
161.452 44.0015 li
160.981 43.7739 160.466 43.5259 159.644 43.5259 cv
158.733 43.5259 158.162 43.9287 158.162 44.5386 cv
158.162 45.0029 158.491 45.2197 158.721 45.3545 cv
158.863 45.438 158.906 45.458 159.566 45.7271 cv
160.114 45.9536 li
cp
f
164.873 44.7041 mo
164.796 44.6426 li
164.304 44.7354 164.183 44.7661 163.646 44.8481 cv
163.59 44.9111 li
163.723 46.0884 163.723 46.8115 163.732 48.4121 cv
163.732 49.0225 163.743 49.6318 163.743 50.2407 cv
163.743 51.2954 163.723 51.9453 163.7 52.5757 cv
163.756 52.6377 li
164.138 52.6274 164.523 52.6172 164.906 52.6064 cv
164.973 52.5444 li
164.917 51.5737 164.896 51.3052 164.886 50.0659 cv
165.039 50.0767 165.171 50.0859 165.378 50.0859 cv
167.691 50.0859 168.821 48.7129 168.821 47.1118 cv
168.821 45.6548 167.846 44.5806 166.452 44.5806 cv
165.598 44.5806 165.071 44.9722 164.852 45.1377 cv
164.873 44.7041 li
cp
164.873 49.291 mo
164.862 48.6919 164.852 48.0825 164.852 47.4727 cv
164.852 46.9463 164.862 46.4189 164.873 45.8818 cv
165.126 45.7168 165.542 45.4473 166.135 45.4473 cv
167.013 45.4473 167.615 46.1094 167.615 47.1836 cv
167.615 48.4541 166.781 49.3218 165.335 49.3218 cv
165.147 49.3218 165.016 49.3008 164.873 49.291 cv
cp
f
175.03 48.7744 mo
174.886 48.8877 174.646 49.0742 174.239 49.2285 cv
173.933 49.332 173.604 49.3838 173.285 49.3838 cv
172.946 49.3838 172.32 49.332 171.871 48.8257 cv
171.497 48.4033 171.466 47.896 171.453 47.5347 cv
173.253 47.5244 173.548 47.5244 175.259 47.5347 cv
175.337 47.4727 li
175.346 47.0181 175.369 45.9956 174.743 45.2925 cv
174.415 44.9209 173.813 44.5806 172.946 44.5806 cv
171.509 44.5806 170.28 45.52 170.28 47.4414 cv
170.28 49.2393 171.41 50.21 173.209 50.21 cv
174.185 50.21 174.777 49.9111 174.963 49.8184 cv
175.03 49.7456 li
175.052 49.3428 175.063 49.2393 175.116 48.8257 cv
175.03 48.7744 li
cp
174.152 42.4204 mo
173.943 42.4316 173.735 42.4316 173.526 42.4316 cv
173.317 42.4316 173.121 42.4316 172.88 42.4204 cv
172.813 42.4731 li
172.573 43.1445 172.254 43.8047 172.144 44.0532 cv
172.188 44.125 li
172.573 44.125 172.693 44.125 172.989 44.1362 cv
173.065 44.0942 li
173.56 43.3403 173.658 43.1963 174.195 42.5044 cv
174.152 42.4204 li
cp
174.206 46.7388 mo
173.198 46.7495 172.782 46.7603 171.453 46.7495 cv
171.563 45.7168 172.288 45.3237 172.902 45.3237 cv
173.395 45.3237 173.878 45.562 174.097 46.1294 cv
174.185 46.3672 174.195 46.5947 174.206 46.7388 cv
cp
f
181.127 48.8564 mo
181.082 49.3008 181.073 49.3521 181.039 49.7764 cv
180.963 49.8491 li
180.644 49.9932 180.217 50.2007 179.448 50.2007 cv
177.792 50.2007 176.718 49.0742 176.718 47.4619 cv
176.718 45.8203 177.771 44.5806 179.471 44.5806 cv
180.185 44.5806 180.688 44.7974 180.972 44.9111 cv
181.017 44.9829 li
180.972 45.3545 180.963 45.4893 180.941 45.7988 cv
180.853 45.8408 li
180.49 45.5928 180.074 45.438 179.636 45.438 cv
178.726 45.438 177.925 46.0986 177.925 47.4209 cv
177.925 48.8257 178.769 49.332 179.625 49.332 cv
180.37 49.332 180.83 48.9707 181.039 48.8154 cv
181.127 48.8564 li
cp
f
183.737 43.2056 mo
183.177 43.2271 183.056 43.2363 182.521 43.2891 cv
182.454 43.2271 li
182.465 43.0928 182.465 42.9478 182.465 42.814 cv
182.465 42.6279 182.454 42.4624 182.443 42.2549 cv
182.521 42.1938 li
183.09 42.1528 183.189 42.1421 183.737 42.0908 cv
183.803 42.1528 li
183.792 42.5762 183.792 42.6792 183.803 43.1338 cv
183.737 43.2056 li
cp
183.725 50.0767 mo
183.155 50.0859 183.068 50.0859 182.531 50.1172 cv
182.476 50.0449 li
182.508 49.4976 182.542 49.0225 182.542 47.876 cv
182.542 45.9028 182.508 45.5303 182.433 44.9209 cv
182.486 44.8481 li
182.957 44.7764 183.123 44.7554 183.671 44.6426 cv
183.78 44.7041 li
183.748 45.2417 183.714 45.7988 183.714 47.1318 cv
183.714 49.0532 183.737 49.312 183.78 50.0142 cv
183.725 50.0767 li
cp
f
189.944 46.9355 mo
189.944 46.502 189.944 45.9336 189.867 45.644 cv
189.638 44.8384 188.847 44.5806 188.035 44.5806 cv
187.388 44.5806 186.753 44.7144 186.139 44.9209 cv
186.072 44.9829 li
186.062 45.1997 186.062 45.2617 186.041 45.7368 cv
186.128 45.7881 li
186.589 45.6025 187.081 45.3965 187.795 45.3965 cv
188.344 45.3965 188.596 45.5928 188.704 45.7788 cv
188.803 45.9443 188.803 46.1396 188.803 46.4189 cv
188.617 46.4399 li
186.644 46.6567 185.416 47.1011 185.416 48.4854 cv
185.416 49.5078 186.184 50.21 187.279 50.21 cv
188.112 50.21 188.606 49.8384 188.815 49.6836 cv
188.803 50.0552 li
188.847 50.1172 li
189.352 50.0967 189.441 50.0859 189.955 50.0767 cv
190.009 50.0239 li
189.955 49.3521 189.944 49.2393 189.944 47.9585 cv
189.944 46.9355 li
cp
188.815 47.1836 mo
188.815 48.9087 li
188.693 49.0117 188.299 49.3628 187.619 49.3628 cv
186.577 49.3628 186.577 48.4751 186.577 48.4233 cv
186.577 47.5034 187.608 47.3594 188.717 47.2041 cv
188.815 47.1836 li
cp
f
193.147 50.0767 mo
192.621 50.0859 192.51 50.0967 191.996 50.1172 cv
191.94 50.0449 li
191.962 49.312 191.996 48.3813 191.996 46.3979 cv
191.996 44.9722 191.996 43.4438 191.884 42.1216 cv
191.94 42.0591 li
192.479 41.9771 192.587 41.9561 193.135 41.8423 cv
193.2 41.9141 li
193.124 43.2681 193.124 44.6313 193.124 45.9849 cv
193.124 48.2476 193.157 49.0322 193.213 50.0142 cv
193.147 50.0767 li
cp
f
196.414 43.2056 mo
195.855 43.2271 195.736 43.2363 195.197 43.2891 cv
195.131 43.2271 li
195.142 43.0928 195.142 42.9478 195.142 42.814 cv
195.142 42.6279 195.131 42.4624 195.122 42.2549 cv
195.197 42.1938 li
195.768 42.1528 195.866 42.1421 196.414 42.0908 cv
196.481 42.1528 li
196.47 42.5762 196.47 42.6792 196.481 43.1338 cv
196.414 43.2056 li
cp
196.403 50.0767 mo
195.834 50.0859 195.745 50.0859 195.208 50.1172 cv
195.154 50.0449 li
195.187 49.4976 195.219 49.0225 195.219 47.876 cv
195.219 45.9028 195.187 45.5303 195.11 44.9209 cv
195.165 44.8481 li
195.636 44.7764 195.802 44.7554 196.35 44.6426 cv
196.458 44.7041 li
196.427 45.2417 196.393 45.7988 196.393 47.1318 cv
196.393 49.0532 196.414 49.312 196.458 50.0142 cv
196.403 50.0767 li
cp
f
200.746 46.9463 mo
201.187 47.0801 202.184 47.4004 202.184 48.4951 cv
202.184 48.9087 202.02 49.374 201.57 49.7144 cv
200.988 50.1787 200.209 50.21 199.814 50.21 cv
199.223 50.21 198.729 50.1069 198.313 49.9512 cv
198.257 49.9312 198.202 49.9111 198.148 49.8901 cv
198.093 49.7974 li
198.136 49.394 198.136 49.3428 198.159 48.9297 cv
198.27 48.8984 li
198.466 49.0425 198.947 49.394 199.793 49.394 cv
200.66 49.394 200.978 48.9395 200.978 48.6196 cv
200.978 48.1445 200.507 47.9888 199.836 47.7822 cv
199.486 47.6689 li
199.035 47.5347 198.05 47.2358 198.05 46.1704 cv
198.05 45.1069 199.035 44.5806 200.264 44.5806 cv
201.074 44.5806 201.646 44.7974 201.843 44.8701 cv
201.898 44.9419 li
201.854 45.3237 201.843 45.3652 201.812 45.7578 cv
201.713 45.7988 li
201.437 45.6338 201.01 45.3857 200.298 45.3857 cv
200.145 45.3857 199.991 45.3965 199.825 45.438 cv
199.495 45.52 199.223 45.7368 199.223 46.0576 cv
199.223 46.502 199.672 46.6367 200.354 46.8325 cv
200.746 46.9463 li
cp
f
208.183 48.7744 mo
208.04 48.8877 207.799 49.0742 207.394 49.2285 cv
207.087 49.332 206.757 49.3838 206.439 49.3838 cv
206.099 49.3838 205.475 49.332 205.022 48.8257 cv
204.651 48.4033 204.617 47.896 204.607 47.5347 cv
206.405 47.5244 206.701 47.5244 208.413 47.5347 cv
208.489 47.4727 li
208.5 47.0181 208.523 45.9956 207.897 45.2925 cv
207.568 44.9209 206.964 44.5806 206.099 44.5806 cv
204.663 44.5806 203.435 45.52 203.435 47.4414 cv
203.435 49.2393 204.564 50.21 206.362 50.21 cv
207.339 50.21 207.931 49.9111 208.118 49.8184 cv
208.183 49.7456 li
208.204 49.3428 208.215 49.2393 208.271 48.8257 cv
208.183 48.7744 li
cp
207.305 42.4204 mo
207.098 42.4316 206.889 42.4316 206.68 42.4316 cv
206.472 42.4316 206.273 42.4316 206.034 42.4204 cv
205.967 42.4731 li
205.726 43.1445 205.408 43.8047 205.298 44.0532 cv
205.342 44.125 li
205.726 44.125 205.847 44.125 206.142 44.1362 cv
206.22 44.0942 li
206.714 43.3403 206.811 43.1963 207.35 42.5044 cv
207.305 42.4204 li
cp
207.359 46.7388 mo
206.351 46.7495 205.935 46.7603 204.607 46.7495 cv
204.718 45.7168 205.44 45.3237 206.054 45.3237 cv
206.548 45.3237 207.03 45.562 207.251 46.1294 cv
207.339 46.3672 207.35 46.5947 207.359 46.7388 cv
cp
f
214.62 48.7744 mo
214.478 48.8877 214.236 49.0742 213.831 49.2285 cv
213.522 49.332 213.194 49.3838 212.877 49.3838 cv
212.536 49.3838 211.912 49.332 211.462 48.8257 cv
211.089 48.4033 211.057 47.896 211.046 47.5347 cv
212.843 47.5244 213.141 47.5244 214.851 47.5347 cv
214.927 47.4727 li
214.938 47.0181 214.961 45.9956 214.335 45.2925 cv
214.006 44.9209 213.401 44.5806 212.536 44.5806 cv
211.1 44.5806 209.872 45.52 209.872 47.4414 cv
209.872 49.2393 211.002 50.21 212.8 50.21 cv
213.776 50.21 214.368 49.9111 214.556 49.8184 cv
214.62 49.7456 li
214.642 49.3428 214.653 49.2393 214.709 48.8257 cv
214.62 48.7744 li
cp
213.798 46.7388 mo
212.789 46.7495 212.372 46.7603 211.046 46.7495 cv
211.155 45.7168 211.878 45.3237 212.491 45.3237 cv
212.987 45.3237 213.469 45.562 213.688 46.1294 cv
213.776 46.3672 213.787 46.5947 213.798 46.7388 cv
cp
f
104.753 54.4604 mo
104.807 55.0596 104.863 55.6797 104.852 56.9604 cv
104.555 56.9399 104.446 56.9399 104.216 56.9399 cv
103.646 56.9399 102.604 56.9712 101.802 57.6523 cv
101.342 58.0347 100.837 58.7476 100.837 59.874 cv
100.837 61.4438 101.846 62.5293 103.306 62.5293 cv
104.106 62.5293 104.555 62.1982 104.818 62.0122 cv
104.796 62.3945 li
104.874 62.4565 li
105.378 62.4355 105.509 62.4258 105.992 62.4258 cv
106.047 62.353 li
106.002 61.6406 105.959 60.876 105.959 59.2749 cv
105.959 58.2422 105.97 55.6797 106.047 54.2437 cv
105.97 54.1812 li
105.476 54.2847 105.367 54.3052 104.807 54.3984 cv
104.753 54.4604 li
cp
104.807 61.1543 mo
104.654 61.2783 104.249 61.6099 103.58 61.6099 cv
103.009 61.6099 102.647 61.3613 102.449 61.1445 cv
102.219 60.8867 102.043 60.4624 102.043 59.874 cv
102.043 58.9546 102.438 58.4683 102.68 58.2515 cv
103.207 57.7871 103.93 57.7671 104.27 57.7671 cv
104.501 57.7671 104.632 57.7871 104.818 57.7969 cv
104.829 59.4917 104.829 59.8013 104.807 61.1543 cv
cp
f
112.485 61.1133 mo
112.342 61.2271 112.101 61.4131 111.695 61.5679 cv
111.387 61.6714 111.059 61.7236 110.74 61.7236 cv
110.401 61.7236 109.776 61.6714 109.327 61.1655 cv
108.954 60.7417 108.92 60.2349 108.909 59.874 cv
110.708 59.8633 111.004 59.8633 112.715 59.874 cv
112.792 59.812 li
112.803 59.3579 112.824 58.335 112.199 57.6323 cv
111.871 57.2607 111.268 56.9199 110.401 56.9199 cv
108.964 56.9199 107.736 57.8599 107.736 59.7813 cv
107.736 61.5786 108.865 62.5493 110.665 62.5493 cv
111.64 62.5493 112.233 62.2505 112.418 62.1572 cv
112.485 62.085 li
112.507 61.6816 112.518 61.5786 112.572 61.1655 cv
112.485 61.1133 li
cp
111.662 59.0781 mo
110.653 59.0884 110.236 59.0991 108.909 59.0884 cv
109.019 58.0557 109.743 57.6631 110.357 57.6631 cv
110.85 57.6631 111.333 57.9009 111.552 58.4683 cv
111.64 58.7065 111.651 58.9341 111.662 59.0781 cv
cp
f
121.028 58.2935 mo
121.829 58.624 122.893 59.0581 122.893 60.3804 cv
122.893 61.5371 121.982 62.5806 120.073 62.5806 cv
118.912 62.5806 118.166 62.2505 117.902 62.125 cv
117.859 62.0532 li
117.902 61.6919 117.913 61.4961 117.946 61.1035 cv
118.056 61.0615 li
118.33 61.2373 118.966 61.6714 119.986 61.6714 cv
121.115 61.6714 121.587 61.124 121.587 60.5044 cv
121.587 59.7813 120.951 59.5024 120.237 59.2441 cv
119.689 59.0166 li
118.912 58.6758 117.868 58.2314 117.868 56.9712 cv
117.868 56.5889 117.98 56.1953 118.209 55.8857 cv
118.714 55.2046 119.624 54.9771 120.513 54.9771 cv
121.378 54.9771 121.905 55.1318 122.487 55.3076 cv
122.541 55.3901 li
122.498 55.7827 122.487 55.9277 122.454 56.2993 cv
122.366 56.3408 li
121.894 56.1133 121.378 55.8657 120.556 55.8657 cv
119.646 55.8657 119.076 56.2681 119.076 56.8779 cv
119.076 57.3428 119.404 57.5596 119.635 57.6943 cv
119.777 57.7769 119.822 57.7969 120.479 58.0659 cv
121.028 58.2935 li
cp
f
129.44 57.085 mo
129.418 57.8691 129.406 58.603 129.406 59.4399 cv
129.406 60.71 129.44 61.4751 129.462 61.9194 cv
129.462 62.064 129.473 62.209 129.483 62.353 cv
129.44 62.4155 li
128.914 62.4258 128.825 62.4355 128.321 62.4565 cv
128.256 62.3945 li
128.267 61.9609 li
128.025 62.125 127.443 62.5493 126.545 62.5493 cv
126.118 62.5493 125.646 62.4565 125.294 62.1982 cv
124.592 61.6606 124.592 60.7827 124.582 59.9775 cv
124.582 59.3369 li
124.56 57.8599 124.56 57.6943 124.526 57.1367 cv
124.582 57.064 li
125.096 57.0532 125.195 57.0532 125.71 57.0127 cv
125.777 57.085 li
125.733 59.3467 li
125.733 59.6265 125.721 59.832 125.733 60.3276 cv
125.743 60.7622 125.766 61.6919 126.873 61.6919 cv
127.52 61.6919 127.981 61.3511 128.245 61.1543 cv
128.256 60.5972 128.256 60.1216 128.256 59.5225 cv
128.256 58.0859 128.245 57.7969 128.178 57.126 cv
128.245 57.0532 li
128.75 57.0439 128.87 57.0439 129.374 57.0127 cv
129.44 57.085 li
cp
f
132.698 55.5449 mo
132.137 55.5659 132.016 55.5762 131.479 55.6289 cv
131.413 55.5659 li
131.425 55.4312 131.425 55.2866 131.425 55.1533 cv
131.425 54.9668 131.413 54.8018 131.403 54.5947 cv
131.479 54.5327 li
132.05 54.4917 132.149 54.4814 132.698 54.4307 cv
132.763 54.4917 li
132.752 54.915 132.752 55.0186 132.763 55.4727 cv
132.698 55.5449 li
cp
132.685 62.4155 mo
132.115 62.4258 132.027 62.4258 131.49 62.4565 cv
131.436 62.3838 li
131.468 61.8364 131.501 61.3613 131.501 60.2148 cv
131.501 58.2422 131.468 57.8691 131.391 57.2607 cv
131.447 57.188 li
131.919 57.1157 132.083 57.0947 132.631 56.981 cv
132.741 57.0439 li
132.707 57.5801 132.676 58.1387 132.676 59.4707 cv
132.676 61.3931 132.698 61.6514 132.741 62.353 cv
132.685 62.4155 li
cp
f
137.03 59.2856 mo
137.468 59.4189 138.466 59.7393 138.466 60.834 cv
138.466 61.248 138.301 61.7129 137.852 62.0532 cv
137.27 62.5186 136.491 62.5493 136.096 62.5493 cv
135.504 62.5493 135.011 62.4458 134.594 62.291 cv
134.54 62.2705 134.484 62.2505 134.43 62.229 cv
134.375 62.1362 li
134.419 61.7334 134.419 61.6816 134.441 61.269 cv
134.551 61.2373 li
134.748 61.3818 135.23 61.7334 136.076 61.7334 cv
136.941 61.7334 137.259 61.2783 137.259 60.9585 cv
137.259 60.4839 136.788 60.3276 136.119 60.1216 cv
135.768 60.0088 li
135.319 59.874 134.331 59.5742 134.331 58.5103 cv
134.331 57.4463 135.319 56.9199 136.546 56.9199 cv
137.358 56.9199 137.928 57.1367 138.126 57.209 cv
138.18 57.2808 li
138.137 57.6631 138.126 57.7051 138.093 58.0967 cv
137.994 58.1387 li
137.72 57.9727 137.293 57.7251 136.579 57.7251 cv
136.426 57.7251 136.272 57.7358 136.107 57.7769 cv
135.779 57.8599 135.504 58.0767 135.504 58.3965 cv
135.504 58.8408 135.954 58.9751 136.635 59.1709 cv
137.03 59.2856 li
cp
f
142.315 59.2856 mo
142.753 59.4189 143.75 59.7393 143.75 60.834 cv
143.75 61.248 143.588 61.7129 143.136 62.0532 cv
142.557 62.5186 141.776 62.5493 141.383 62.5493 cv
140.79 62.5493 140.296 62.4458 139.881 62.291 cv
139.826 62.2705 139.77 62.2505 139.716 62.229 cv
139.662 62.1362 li
139.705 61.7334 139.705 61.6816 139.727 61.269 cv
139.836 61.2373 li
140.035 61.3818 140.516 61.7334 141.36 61.7334 cv
142.226 61.7334 142.544 61.2783 142.544 60.9585 cv
142.544 60.4839 142.074 60.3276 141.405 60.1216 cv
141.055 60.0088 li
140.603 59.874 139.617 59.5742 139.617 58.5103 cv
139.617 57.4463 140.603 56.9199 141.832 56.9199 cv
142.644 56.9199 143.213 57.1367 143.412 57.209 cv
143.466 57.2808 li
143.422 57.6631 143.412 57.7051 143.379 58.0967 cv
143.28 58.1387 li
143.006 57.9727 142.577 57.7251 141.866 57.7251 cv
141.711 57.7251 141.558 57.7358 141.394 57.7769 cv
141.064 57.8599 140.79 58.0767 140.79 58.3965 cv
140.79 58.8408 141.241 58.9751 141.919 59.1709 cv
142.315 59.2856 li
cp
f
149.75 61.1133 mo
149.607 61.2271 149.366 61.4131 148.96 61.5679 cv
148.654 61.6714 148.324 61.7236 148.007 61.7236 cv
147.666 61.7236 147.042 61.6714 146.592 61.1655 cv
146.22 60.7417 146.186 60.2349 146.175 59.874 cv
147.973 59.8633 148.27 59.8633 149.98 59.874 cv
150.057 59.812 li
150.069 59.3579 150.091 58.335 149.465 57.6323 cv
149.135 57.2607 148.533 56.9199 147.666 56.9199 cv
146.231 56.9199 145.001 57.8599 145.001 59.7813 cv
145.001 61.5786 146.13 62.5493 147.929 62.5493 cv
148.906 62.5493 149.498 62.2505 149.684 62.1572 cv
149.75 62.085 li
149.771 61.6816 149.784 61.5786 149.837 61.1655 cv
149.75 61.1133 li
cp
148.928 59.0781 mo
147.918 59.0884 147.502 59.0991 146.175 59.0884 cv
146.285 58.0557 147.008 57.6631 147.623 57.6631 cv
148.115 57.6631 148.598 57.9009 148.818 58.4683 cv
148.906 58.7065 148.917 58.9341 148.928 59.0781 cv
cp
f
160.563 59.6572 mo
160.541 58.9341 160.399 58.2114 159.895 57.6631 cv
159.413 57.146 158.677 56.9199 157.931 56.9199 cv
156.835 56.9199 156.198 57.3428 155.892 57.6431 cv
155.156 58.335 155.135 59.3467 155.135 59.7393 cv
155.135 60.0801 155.147 61.1343 155.892 61.8472 cv
156.243 62.188 156.869 62.5386 157.854 62.5386 cv
158.621 62.5386 159.269 62.3638 159.752 61.9087 cv
160.114 61.5679 160.343 61.1655 160.466 60.6592 cv
160.541 60.3496 160.563 60.0088 160.563 59.6572 cv
cp
159.369 59.6982 mo
159.379 59.915 159.369 60.6079 159.115 61.0723 cv
158.798 61.6406 158.271 61.7646 157.866 61.7646 cv
157.646 61.7646 157.417 61.7236 157.219 61.6299 cv
156.352 61.2163 156.341 60.1738 156.341 59.7598 cv
156.341 59.3262 156.375 58.7266 156.671 58.3042 cv
157.055 57.7251 157.668 57.7051 157.877 57.7051 cv
158.491 57.7051 158.842 57.9727 159.051 58.2935 cv
159.324 58.7476 159.369 59.4399 159.369 59.6982 cv
cp
f
166.431 61.1963 mo
166.388 61.6406 166.375 61.6919 166.345 62.1162 cv
166.267 62.188 li
165.948 62.3325 165.521 62.5386 164.753 62.5386 cv
163.098 62.5386 162.021 61.4131 162.021 59.8013 cv
162.021 58.1592 163.074 56.9199 164.774 56.9199 cv
165.488 56.9199 165.993 57.1367 166.277 57.25 cv
166.321 57.3228 li
166.277 57.6943 166.267 57.8291 166.245 58.1387 cv
166.157 58.1797 li
165.796 57.9316 165.378 57.7769 164.94 57.7769 cv
164.029 57.7769 163.229 58.4375 163.229 59.7598 cv
163.229 61.1655 164.073 61.6714 164.929 61.6714 cv
165.674 61.6714 166.135 61.3096 166.345 61.1543 cv
166.431 61.1963 li
cp
f
171.949 61.1963 mo
171.902 61.6406 171.894 61.6919 171.859 62.1162 cv
171.783 62.188 li
171.466 62.3325 171.037 62.5386 170.271 62.5386 cv
168.614 62.5386 167.538 61.4131 167.538 59.8013 cv
167.538 58.1592 168.593 56.9199 170.292 56.9199 cv
171.005 56.9199 171.509 57.1367 171.794 57.25 cv
171.837 57.3228 li
171.794 57.6943 171.783 57.8291 171.76 58.1387 cv
171.673 58.1797 li
171.312 57.9316 170.895 57.7769 170.456 57.7769 cv
169.546 57.7769 168.745 58.4375 168.745 59.7598 cv
168.745 61.1655 169.589 61.6714 170.444 61.6714 cv
171.19 61.6714 171.651 61.3096 171.859 61.1543 cv
171.949 61.1963 li
cp
f
174.558 55.5449 mo
173.999 55.5659 173.878 55.5762 173.341 55.6289 cv
173.274 55.5659 li
173.285 55.4312 173.285 55.2866 173.285 55.1533 cv
173.285 54.9668 173.274 54.8018 173.265 54.5947 cv
173.341 54.5327 li
173.91 54.4917 174.01 54.4814 174.558 54.4307 cv
174.624 54.4917 li
174.612 54.915 174.612 55.0186 174.624 55.4727 cv
174.558 55.5449 li
cp
174.547 62.4155 mo
173.978 62.4258 173.889 62.4258 173.352 62.4565 cv
173.296 62.3838 li
173.33 61.8364 173.362 61.3613 173.362 60.2148 cv
173.362 58.2422 173.33 57.8691 173.253 57.2607 cv
173.309 57.188 li
173.779 57.1157 173.943 57.0947 174.491 56.981 cv
174.601 57.0439 li
174.568 57.5801 174.534 58.1387 174.534 59.4707 cv
174.534 61.3931 174.558 61.6514 174.601 62.353 cv
174.547 62.4155 li
cp
f
180.195 54.4604 mo
180.251 55.0596 180.305 55.6797 180.294 56.9604 cv
179.997 56.9399 179.889 56.9399 179.657 56.9399 cv
179.086 56.9399 178.044 56.9712 177.244 57.6523 cv
176.784 58.0347 176.279 58.7476 176.279 59.874 cv
176.279 61.4438 177.287 62.5293 178.747 62.5293 cv
179.548 62.5293 179.997 62.1982 180.262 62.0122 cv
180.238 62.3945 li
180.315 62.4565 li
180.82 62.4355 180.95 62.4258 181.435 62.4258 cv
181.489 62.353 li
181.444 61.6406 181.401 60.876 181.401 59.2749 cv
181.401 58.2422 181.412 55.6797 181.489 54.2437 cv
181.412 54.1812 li
180.92 54.2847 180.81 54.3052 180.251 54.3984 cv
180.195 54.4604 li
cp
180.251 61.1543 mo
180.096 61.2783 179.69 61.6099 179.021 61.6099 cv
178.451 61.6099 178.089 61.3613 177.892 61.1445 cv
177.662 60.8867 177.485 60.4624 177.485 59.874 cv
177.485 58.9546 177.882 58.4683 178.122 58.2515 cv
178.648 57.7871 179.371 57.7671 179.712 57.7671 cv
179.942 57.7671 180.074 57.7871 180.262 57.7969 cv
180.271 59.4917 180.271 59.8013 180.251 61.1543 cv
cp
f
187.927 61.1133 mo
187.784 61.2271 187.543 61.4131 187.138 61.5679 cv
186.829 61.6714 186.501 61.7236 186.184 61.7236 cv
185.843 61.7236 185.218 61.6714 184.769 61.1655 cv
184.396 60.7417 184.362 60.2349 184.351 59.874 cv
186.149 59.8633 186.446 59.8633 188.156 59.874 cv
188.233 59.812 li
188.244 59.3579 188.268 58.335 187.642 57.6323 cv
187.313 57.2607 186.71 56.9199 185.843 56.9199 cv
184.406 56.9199 183.177 57.8599 183.177 59.7813 cv
183.177 61.5786 184.307 62.5493 186.106 62.5493 cv
187.081 62.5493 187.675 62.2505 187.86 62.1572 cv
187.927 62.085 li
187.948 61.6816 187.959 61.5786 188.014 61.1655 cv
187.927 61.1133 li
cp
187.104 59.0781 mo
186.096 59.0884 185.679 59.0991 184.351 59.0884 cv
184.462 58.0557 185.185 57.6631 185.8 57.6631 cv
186.292 57.6631 186.775 57.9009 186.995 58.4683 cv
187.081 58.7065 187.094 58.9341 187.104 59.0781 cv
cp
f
194.76 62.4155 mo
194.231 62.4258 194.166 62.4258 193.661 62.4565 cv
193.586 62.3838 li
193.586 62.2705 193.597 62.1572 193.597 62.043 cv
193.607 61.5371 193.607 61.0308 193.607 60.5244 cv
193.607 58.9341 193.597 58.8306 193.541 58.6138 cv
193.333 57.8291 192.708 57.8291 192.555 57.8291 cv
191.896 57.8291 191.392 58.1895 191.096 58.4072 cv
191.085 60.2041 191.107 61.1445 191.183 62.353 cv
191.118 62.4155 li
190.581 62.4258 190.492 62.4258 189.966 62.4565 cv
189.912 62.3838 li
189.923 61.8057 189.944 61.248 189.944 60.4839 cv
189.944 58.8306 189.867 57.9526 189.813 57.2607 cv
189.878 57.188 li
190.426 57.0947 190.524 57.0742 191.04 56.981 cv
191.118 57.0532 li
191.107 57.5903 li
191.392 57.4048 192.073 56.9502 193.038 56.9502 cv
193.312 56.9502 193.652 56.9922 193.948 57.146 cv
194.231 57.3018 194.464 57.5391 194.583 57.8179 cv
194.727 58.1274 194.736 58.4375 194.748 59.0781 cv
194.748 60.2876 li
194.779 61.4961 194.792 61.9609 194.826 62.353 cv
194.76 62.4155 li
cp
f
199.299 61.6099 mo
199.267 61.9502 199.267 62.0229 199.256 62.3218 cv
199.2 62.3838 li
198.971 62.4355 198.785 62.4775 198.379 62.4775 cv
198.114 62.4775 197.424 62.4775 197.083 61.9404 cv
196.887 61.6406 196.887 61.3931 196.887 60.1738 cv
196.908 57.9009 li
196.524 57.9009 196.514 57.9111 196.119 57.9219 cv
196.075 57.8599 li
196.096 57.5283 196.096 57.4463 196.096 57.1157 cv
196.162 57.0532 li
196.403 57.0532 196.548 57.064 196.908 57.0532 cv
196.897 56.8364 196.897 56.6094 196.897 56.3926 cv
196.887 56.1953 196.876 56.0005 196.863 55.8037 cv
196.919 55.731 li
197.413 55.6182 197.534 55.5869 198.037 55.4424 cv
198.114 55.4941 li
198.082 56.1753 198.071 56.3101 198.071 57.064 cv
198.531 57.0532 198.662 57.0532 199.288 57.0332 cv
199.344 57.0947 li
199.322 57.3638 199.31 57.4775 199.31 57.8291 cv
199.256 57.8906 li
198.707 57.8799 198.641 57.8691 198.061 57.8691 cv
198.037 59.791 li
198.05 59.915 198.05 60.5044 198.05 60.6489 cv
198.05 61.4023 198.148 61.6406 198.696 61.6406 cv
198.927 61.6406 199.103 61.5889 199.223 61.5479 cv
199.299 61.6099 li
cp
f
204.903 59.2749 mo
204.903 58.8408 204.903 58.2725 204.826 57.9834 cv
204.597 57.1768 203.806 56.9199 202.994 56.9199 cv
202.348 56.9199 201.713 57.0532 201.098 57.2607 cv
201.031 57.3228 li
201.021 57.5391 201.021 57.6011 200.999 58.0767 cv
201.087 58.1274 li
201.549 57.9419 202.041 57.7358 202.753 57.7358 cv
203.301 57.7358 203.554 57.9316 203.663 58.1182 cv
203.763 58.2832 203.763 58.479 203.763 58.7588 cv
203.576 58.7788 li
201.603 58.9961 200.373 59.4399 200.373 60.8247 cv
200.373 61.8472 201.142 62.5493 202.239 62.5493 cv
203.072 62.5493 203.564 62.1777 203.773 62.0229 cv
203.763 62.3945 li
203.806 62.4565 li
204.313 62.4355 204.398 62.4258 204.914 62.4155 cv
204.97 62.3638 li
204.914 61.6919 204.903 61.5786 204.903 60.2974 cv
204.903 59.2749 li
cp
203.773 59.5225 mo
203.773 61.248 li
203.652 61.3511 203.258 61.7026 202.579 61.7026 cv
201.536 61.7026 201.536 60.814 201.536 60.7622 cv
201.536 59.8433 202.567 59.6982 203.676 59.543 cv
203.773 59.5225 li
cp
f
208.106 62.4155 mo
207.579 62.4258 207.469 62.4355 206.953 62.4565 cv
206.899 62.3838 li
206.921 61.6514 206.953 60.7207 206.953 58.7378 cv
206.953 57.3115 206.953 55.7827 206.845 54.4604 cv
206.899 54.3984 li
207.437 54.3159 207.546 54.2959 208.095 54.1812 cv
208.161 54.2539 li
208.084 55.6069 208.084 56.9712 208.084 58.3242 cv
208.084 60.5864 208.116 61.3721 208.172 62.353 cv
208.106 62.4155 li
cp
f
214.62 61.1133 mo
214.478 61.2271 214.236 61.4131 213.831 61.5679 cv
213.522 61.6714 213.194 61.7236 212.877 61.7236 cv
212.536 61.7236 211.912 61.6714 211.462 61.1655 cv
211.089 60.7417 211.057 60.2349 211.046 59.874 cv
212.843 59.8633 213.141 59.8633 214.851 59.874 cv
214.927 59.812 li
214.938 59.3579 214.961 58.335 214.335 57.6323 cv
214.006 57.2607 213.401 56.9199 212.536 56.9199 cv
211.1 56.9199 209.872 57.8599 209.872 59.7813 cv
209.872 61.5786 211.002 62.5493 212.8 62.5493 cv
213.776 62.5493 214.368 62.2505 214.556 62.1572 cv
214.62 62.085 li
214.642 61.6816 214.653 61.5786 214.709 61.1655 cv
214.62 61.1133 li
cp
213.798 59.0781 mo
212.789 59.0884 212.372 59.0991 211.046 59.0884 cv
211.155 58.0557 211.878 57.6631 212.491 57.6631 cv
212.987 57.6631 213.469 57.9009 213.688 58.4683 cv
213.776 58.7065 213.787 58.9341 213.798 59.0781 cv
cp
f
64.9375 77.3223 mo
63.8516 77.292 63.6323 77.292 62.3271 77.2803 cv
62.3057 77.7256 62.3057 79.3062 62.3931 80.4316 cv
62.3389 80.5044 li
61.7349 80.5044 61.6475 80.5137 61.0659 80.5342 cv
61.0112 80.4629 li
61.0552 79.6768 61.0767 79.0786 61.0767 76.0303 cv
61.0767 74.564 61.0444 73.9136 61.0112 73.2837 cv
61.0659 73.2109 li
61.8232 73.2202 64.729 73.1997 65.4863 73.1797 cv
65.5405 73.252 li
65.4971 73.624 65.4971 73.6753 65.4746 74.0776 cv
65.4087 74.1411 li
64.0493 74.1094 63.6763 74.0996 62.3389 74.0996 cv
62.3271 74.5229 62.3057 75.5654 62.3057 76.1758 cv
62.3057 76.4126 li
63.5557 76.4033 63.9287 76.3926 65.0249 76.3613 cv
65.0801 76.4233 li
65.0356 76.8984 65.0356 76.9497 65.0034 77.25 cv
64.9375 77.3223 li
cp
f
70.6978 77.354 mo
70.6978 76.9194 70.6978 76.3516 70.6201 76.062 cv
70.3906 75.2559 69.6006 74.998 68.7886 74.998 cv
68.1416 74.998 67.5059 75.1323 66.8921 75.3398 cv
66.8257 75.4009 li
66.8145 75.6182 66.8145 75.6802 66.793 76.1553 cv
66.8813 76.2065 li
67.3418 76.021 67.835 75.814 68.5479 75.814 cv
69.0967 75.814 69.3486 76.0098 69.4585 76.1963 cv
69.5566 76.3613 69.5566 76.5571 69.5566 76.8369 cv
69.3711 76.8569 li
67.397 77.0742 66.1685 77.5181 66.1685 78.9023 cv
66.1685 79.9258 66.9355 80.6274 68.0322 80.6274 cv
68.8662 80.6274 69.3594 80.2568 69.5674 80.1006 cv
69.5566 80.4727 li
69.6006 80.5342 li
70.1055 80.5137 70.1929 80.5044 70.7085 80.4937 cv
70.7637 80.4409 li
70.7085 79.77 70.6978 79.6567 70.6978 78.376 cv
70.6978 77.354 li
cp
69.5674 77.6016 mo
69.5674 79.3262 li
69.4473 79.4292 69.0527 79.7813 68.3721 79.7813 cv
67.3301 79.7813 67.3301 78.8926 67.3301 78.8408 cv
67.3301 77.9219 68.3613 77.7764 69.4692 77.6216 cv
69.5674 77.6016 li
cp
f
76.8398 79.2744 mo
76.7949 79.7178 76.7837 79.77 76.7515 80.1934 cv
76.6748 80.2661 li
76.3564 80.4116 75.9292 80.6177 75.1611 80.6177 cv
73.5049 80.6177 72.4302 79.4922 72.4302 77.8804 cv
72.4302 76.2373 73.4829 74.998 75.1831 74.998 cv
75.896 74.998 76.3999 75.2144 76.6855 75.3286 cv
76.7295 75.4009 li
76.6855 75.7729 76.6748 75.9077 76.6523 76.2168 cv
76.5649 76.2578 li
76.2031 76.0098 75.7866 75.856 75.3472 75.856 cv
74.4365 75.856 73.6362 76.5161 73.6362 77.8384 cv
73.6362 79.2427 74.4814 79.75 75.3364 79.75 cv
76.0825 79.75 76.5425 79.3882 76.7515 79.2334 cv
76.8398 79.2744 li
cp
f
83.0898 80.4937 mo
82.5635 80.5044 82.4985 80.5044 81.9937 80.5342 cv
81.9165 80.4629 li
81.9277 80.1221 li
81.939 79.585 81.939 79.0366 81.939 78.4995 cv
81.9277 77.395 li
81.9277 77.1572 81.9277 76.9194 81.873 76.6919 cv
81.7524 76.2168 81.4458 75.9077 80.8862 75.9077 cv
80.2612 75.9077 79.7783 76.2373 79.416 76.4854 cv
79.4053 78.2827 79.4277 79.2227 79.4932 80.4316 cv
79.4385 80.4937 li
78.9346 80.5044 78.8022 80.5044 78.2646 80.5342 cv
78.21 80.4629 li
78.2314 79.7295 78.2646 78.7993 78.2646 76.8164 cv
78.2646 75.9482 78.2534 75.0801 78.2422 74.2124 cv
78.2207 73.3037 78.188 73.0039 78.1558 72.5391 cv
78.21 72.4771 li
78.7363 72.3945 78.9111 72.3633 79.4053 72.2603 cv
79.4717 72.333 li
79.4053 73.4385 79.4053 74.5532 79.4053 75.6694 cv
79.7563 75.4526 80.4473 75.0283 81.3682 75.0283 cv
81.6206 75.0283 81.873 75.0596 82.1035 75.1528 cv
82.5967 75.3398 82.8936 75.7095 83.0024 76.1338 cv
83.0576 76.3413 83.0576 76.4644 83.0791 77.1572 cv
83.0791 78.3657 li
83.0898 78.8511 li
83.1118 79.7178 83.1118 79.8638 83.1567 80.4316 cv
83.0898 80.4937 li
cp
f
89.978 80.4937 mo
89.4512 80.5044 89.3853 80.5044 88.8804 80.5342 cv
88.8047 80.4629 li
88.8154 80.1221 li
88.8262 79.585 88.8262 79.0366 88.8262 78.4995 cv
88.8154 77.395 li
88.8154 77.1572 88.8154 76.9194 88.7603 76.6919 cv
88.6396 76.2168 88.3325 75.9077 87.7734 75.9077 cv
87.1479 75.9077 86.6655 76.2373 86.3032 76.4854 cv
86.2925 78.2827 86.3149 79.2227 86.3799 80.4316 cv
86.3257 80.4937 li
85.8213 80.5044 85.6895 80.5044 85.1523 80.5342 cv
85.0972 80.4629 li
85.1196 79.7295 85.1523 78.7993 85.1523 76.8164 cv
85.1523 75.9482 85.1416 75.0801 85.1304 74.2124 cv
85.1089 73.3037 85.0747 73.0039 85.0425 72.5391 cv
85.0972 72.4771 li
85.6235 72.3945 85.7993 72.3633 86.2925 72.2603 cv
86.3584 72.333 li
86.2925 73.4385 86.2925 74.5532 86.2925 75.6694 cv
86.6431 75.4526 87.3345 75.0283 88.2559 75.0283 cv
88.5078 75.0283 88.7603 75.0596 88.9902 75.1528 cv
89.4844 75.3398 89.7798 75.7095 89.8896 76.1338 cv
89.9448 76.3413 89.9448 76.4644 89.9663 77.1572 cv
89.9663 78.3657 li
89.978 78.8511 li
90 79.7178 90 79.8638 90.043 80.4316 cv
89.978 80.4937 li
cp
f
97.1494 77.7354 mo
97.1279 77.0127 96.9854 76.2896 96.481 75.7412 cv
95.9985 75.2251 95.2637 74.998 94.5176 74.998 cv
93.4214 74.998 92.7852 75.4209 92.4785 75.7212 cv
91.7432 76.4126 91.7217 77.4253 91.7217 77.8184 cv
91.7217 78.1592 91.7324 79.2134 92.4785 79.9258 cv
92.8286 80.2661 93.4541 80.6177 94.4419 80.6177 cv
95.209 80.6177 95.8555 80.4409 96.3384 79.9873 cv
96.7007 79.647 96.9312 79.2427 97.0513 78.7378 cv
97.1279 78.4268 97.1494 78.0859 97.1494 77.7354 cv
cp
95.9546 77.7764 mo
95.9653 77.9932 95.9546 78.686 95.7021 79.1499 cv
95.3848 79.7178 94.8584 79.8433 94.4526 79.8433 cv
94.2329 79.8433 94.002 79.8018 93.8057 79.709 cv
92.9385 79.2954 92.9277 78.252 92.9277 77.8384 cv
92.9277 77.4048 92.9609 76.8052 93.2563 76.3833 cv
93.6406 75.8027 94.2544 75.7822 94.4634 75.7822 cv
95.0771 75.7822 95.4277 76.0518 95.6372 76.3716 cv
95.9111 76.8267 95.9546 77.5181 95.9546 77.7764 cv
cp
f
103.018 79.2744 mo
102.974 79.7178 102.962 79.77 102.929 80.1934 cv
102.854 80.2661 li
102.535 80.4116 102.107 80.6177 101.339 80.6177 cv
99.6836 80.6177 98.6079 79.4922 98.6079 77.8804 cv
98.6079 76.2373 99.6611 74.998 101.361 74.998 cv
102.075 74.998 102.579 75.2144 102.864 75.3286 cv
102.908 75.4009 li
102.864 75.7729 102.854 75.9077 102.831 76.2168 cv
102.744 76.2578 li
102.381 76.0098 101.965 75.856 101.526 75.856 cv
100.615 75.856 99.8149 76.5161 99.8149 77.8384 cv
99.8149 79.2427 100.66 79.75 101.515 79.75 cv
102.26 79.75 102.722 79.3882 102.929 79.2334 cv
103.018 79.2744 li
cp
f
109.269 80.4937 mo
108.742 80.5044 108.676 80.5044 108.172 80.5342 cv
108.095 80.4629 li
108.106 80.1221 li
108.118 79.585 108.118 79.0366 108.118 78.4995 cv
108.106 77.395 li
108.106 77.1572 108.106 76.9194 108.051 76.6919 cv
107.93 76.2168 107.624 75.9077 107.064 75.9077 cv
106.439 75.9077 105.956 76.2373 105.595 76.4854 cv
105.584 78.2827 105.605 79.2227 105.671 80.4316 cv
105.617 80.4937 li
105.112 80.5044 104.98 80.5044 104.443 80.5342 cv
104.388 80.4629 li
104.41 79.7295 104.443 78.7993 104.443 76.8164 cv
104.443 75.9482 104.433 75.0801 104.421 74.2124 cv
104.399 73.3037 104.366 73.0039 104.333 72.5391 cv
104.388 72.4771 li
104.914 72.3945 105.091 72.3633 105.584 72.2603 cv
105.649 72.333 li
105.584 73.4385 105.584 74.5532 105.584 75.6694 cv
105.935 75.4526 106.625 75.0283 107.547 75.0283 cv
107.799 75.0283 108.051 75.0596 108.282 75.1528 cv
108.775 75.3398 109.071 75.7095 109.181 76.1338 cv
109.235 76.3413 109.235 76.4644 109.258 77.1572 cv
109.258 78.3657 li
109.269 78.8511 li
109.291 79.7178 109.291 79.8638 109.334 80.4316 cv
109.269 80.4937 li
cp
f
113.611 77.3633 mo
114.05 77.498 115.048 77.8184 115.048 78.9131 cv
115.048 79.3262 114.883 79.791 114.435 80.1323 cv
113.852 80.5977 113.074 80.6274 112.679 80.6274 cv
112.087 80.6274 111.593 80.5244 111.177 80.3701 cv
111.123 80.3496 111.067 80.3281 111.013 80.3081 cv
110.957 80.2148 li
111.002 79.8115 111.002 79.7598 111.023 79.3481 cv
111.133 79.3164 li
111.33 79.4609 111.813 79.8115 112.657 79.8115 cv
113.524 79.8115 113.841 79.3574 113.841 79.0366 cv
113.841 78.5615 113.371 78.4067 112.701 78.2007 cv
112.351 78.0859 li
111.9 77.9517 110.914 77.6528 110.914 76.5889 cv
110.914 75.5254 111.9 74.998 113.129 74.998 cv
113.94 74.998 114.51 75.2144 114.708 75.2871 cv
114.763 75.3599 li
114.719 75.7412 114.708 75.7822 114.675 76.1758 cv
114.577 76.2168 li
114.303 76.0518 113.875 75.8027 113.162 75.8027 cv
113.008 75.8027 112.855 75.814 112.69 75.856 cv
112.361 75.937 112.087 76.1553 112.087 76.4746 cv
112.087 76.9194 112.536 77.0537 113.217 77.25 cv
113.611 77.3633 li
cp
f
120.708 79.2744 mo
120.663 79.7178 120.652 79.77 120.62 80.1934 cv
120.542 80.2661 li
120.225 80.4116 119.797 80.6177 119.03 80.6177 cv
117.373 80.6177 116.298 79.4922 116.298 77.8804 cv
116.298 76.2373 117.351 74.998 119.051 74.998 cv
119.764 74.998 120.268 75.2144 120.553 75.3286 cv
120.598 75.4009 li
120.553 75.7729 120.542 75.9077 120.521 76.2168 cv
120.432 76.2578 li
120.071 76.0098 119.655 75.856 119.215 75.856 cv
118.305 75.856 117.504 76.5161 117.504 77.8384 cv
117.504 79.2427 118.35 79.75 119.205 79.75 cv
119.951 79.75 120.411 79.3882 120.62 79.2334 cv
120.708 79.2744 li
cp
f
126.958 80.4937 mo
126.432 80.5044 126.367 80.5044 125.862 80.5342 cv
125.785 80.4629 li
125.795 80.1221 li
125.808 79.585 125.808 79.0366 125.808 78.4995 cv
125.795 77.395 li
125.795 77.1572 125.795 76.9194 125.741 76.6919 cv
125.621 76.2168 125.314 75.9077 124.755 75.9077 cv
124.129 75.9077 123.646 76.2373 123.284 76.4854 cv
123.273 78.2827 123.295 79.2227 123.361 80.4316 cv
123.306 80.4937 li
122.801 80.5044 122.671 80.5044 122.132 80.5342 cv
122.078 80.4629 li
122.1 79.7295 122.132 78.7993 122.132 76.8164 cv
122.132 75.9482 122.122 75.0801 122.11 74.2124 cv
122.089 73.3037 122.057 73.0039 122.024 72.5391 cv
122.078 72.4771 li
122.604 72.3945 122.779 72.3633 123.273 72.2603 cv
123.34 72.333 li
123.273 73.4385 123.273 74.5532 123.273 75.6694 cv
123.625 75.4526 124.315 75.0283 125.236 75.0283 cv
125.489 75.0283 125.741 75.0596 125.972 75.1528 cv
126.464 75.3398 126.762 75.7095 126.87 76.1338 cv
126.926 76.3413 126.926 76.4644 126.947 77.1572 cv
126.947 78.3657 li
126.958 78.8511 li
126.981 79.7178 126.981 79.8638 127.025 80.4316 cv
126.958 80.4937 li
cp
f
133.834 75.1631 mo
133.813 75.9482 133.801 76.6821 133.801 77.5181 cv
133.801 78.7891 133.834 79.5537 133.857 79.9976 cv
133.857 80.1421 133.868 80.2861 133.879 80.4316 cv
133.834 80.4937 li
133.308 80.5044 133.221 80.5137 132.716 80.5342 cv
132.651 80.4727 li
132.662 80.0386 li
132.42 80.2041 131.838 80.6274 130.94 80.6274 cv
130.511 80.6274 130.041 80.5342 129.689 80.2769 cv
128.988 79.7397 128.988 78.8613 128.976 78.0562 cv
128.976 77.415 li
128.954 75.937 128.954 75.7729 128.921 75.2144 cv
128.976 75.1431 li
129.493 75.1323 129.59 75.1323 130.106 75.0918 cv
130.172 75.1631 li
130.127 77.4253 li
130.127 77.7036 130.117 77.9111 130.127 78.4067 cv
130.138 78.8408 130.162 79.77 131.269 79.77 cv
131.916 79.77 132.375 79.4292 132.639 79.2334 cv
132.651 78.6763 132.651 78.2007 132.651 77.6016 cv
132.651 76.165 132.639 75.876 132.574 75.2051 cv
132.639 75.1323 li
133.144 75.1211 133.264 75.1211 133.769 75.0918 cv
133.834 75.1631 li
cp
f
137.059 80.4937 mo
136.533 80.5044 136.423 80.5137 135.909 80.5342 cv
135.853 80.4629 li
135.875 79.7295 135.909 78.7993 135.909 76.8164 cv
135.909 75.3906 135.909 73.8618 135.799 72.5391 cv
135.853 72.4771 li
136.39 72.3945 136.5 72.3745 137.048 72.2603 cv
137.113 72.333 li
137.037 73.686 137.037 75.0498 137.037 76.4033 cv
137.037 78.665 137.07 79.4502 137.125 80.4316 cv
137.059 80.4937 li
cp
f
143.574 79.1914 mo
143.43 79.3062 143.188 79.4922 142.783 79.647 cv
142.477 79.75 142.148 79.8018 141.829 79.8018 cv
141.49 79.8018 140.865 79.75 140.416 79.2427 cv
140.042 78.8203 140.01 78.314 139.999 77.9517 cv
141.797 77.9424 142.092 77.9424 143.803 77.9517 cv
143.879 77.8901 li
143.892 77.436 143.913 76.4126 143.288 75.7095 cv
142.959 75.3398 142.355 74.998 141.49 74.998 cv
140.053 74.998 138.826 75.937 138.826 77.8584 cv
138.826 79.6567 139.954 80.6274 141.752 80.6274 cv
142.729 80.6274 143.32 80.3281 143.507 80.2354 cv
143.574 80.1641 li
143.594 79.7598 143.606 79.6567 143.661 79.2427 cv
143.574 79.1914 li
cp
142.752 77.1572 mo
141.743 77.1675 141.326 77.1772 139.999 77.1675 cv
140.107 76.1338 140.832 75.7412 141.445 75.7412 cv
141.939 75.7412 142.42 75.979 142.641 76.5474 cv
142.729 76.7847 142.74 77.0127 142.752 77.1572 cv
cp
f
156.229 80.5044 mo
155.483 80.5044 155.373 80.5044 154.65 80.5342 cv
154.574 80.4629 li
154.397 79.4292 154.331 79.1299 154.178 78.376 cv
153.278 73.9229 li
152.368 78.1382 li
152.314 78.4175 152.258 78.7061 152.193 78.9858 cv
152.105 79.4292 151.942 80.1841 151.896 80.4316 cv
151.831 80.5044 li
151.041 80.5044 150.998 80.5137 150.241 80.5342 cv
150.165 80.4629 li
149.967 79.5322 149.057 75.6182 148.465 73.2837 cv
148.519 73.2109 li
149.134 73.2109 149.233 73.1997 149.769 73.1797 cv
149.835 73.252 li
149.902 73.6143 149.967 73.9443 150.066 74.46 cv
150.154 74.9253 150.241 75.3809 150.329 75.835 cv
151.128 79.7813 li
152.051 75.2051 li
152.204 74.4502 152.227 74.3271 152.424 73.2837 cv
152.49 73.2109 li
153.323 73.1997 153.466 73.1997 154.232 73.1797 cv
154.299 73.252 li
154.31 73.3345 154.32 73.418 154.331 73.5098 cv
154.376 73.7788 154.629 75.1011 154.693 75.4526 cv
155.56 79.8115 li
156.415 75.7314 li
156.821 73.7373 156.832 73.6953 156.888 73.2837 cv
156.952 73.2109 li
157.457 73.2109 157.567 73.1997 158.028 73.1797 cv
158.083 73.252 li
157.83 74.0576 157.766 74.3364 157.161 76.8467 cv
156.888 77.9731 156.592 79.0889 156.351 80.2148 cv
156.34 80.2861 156.316 80.3599 156.307 80.4316 cv
156.229 80.5044 li
cp
f
163.579 79.1914 mo
163.437 79.3062 163.195 79.4922 162.789 79.647 cv
162.482 79.75 162.154 79.8018 161.836 79.8018 cv
161.497 79.8018 160.871 79.75 160.421 79.2427 cv
160.049 78.8203 160.015 78.314 160.004 77.9517 cv
161.802 77.9424 162.099 77.9424 163.81 77.9517 cv
163.886 77.8901 li
163.897 77.436 163.92 76.4126 163.294 75.7095 cv
162.966 75.3398 162.362 74.998 161.497 74.998 cv
160.06 74.998 158.831 75.937 158.831 77.8584 cv
158.831 79.6567 159.961 80.6274 161.759 80.6274 cv
162.735 80.6274 163.327 80.3281 163.514 80.2354 cv
163.579 80.1641 li
163.601 79.7598 163.613 79.6567 163.667 79.2427 cv
163.579 79.1914 li
cp
162.757 77.1572 mo
161.749 77.1675 161.331 77.1772 160.004 77.1675 cv
160.114 76.1338 160.837 75.7412 161.452 75.7412 cv
161.945 75.7412 162.427 75.979 162.647 76.5474 cv
162.735 76.7847 162.746 77.0127 162.757 77.1572 cv
cp
f
167.868 77.3633 mo
168.306 77.498 169.305 77.8184 169.305 78.9131 cv
169.305 79.3262 169.141 79.791 168.691 80.1323 cv
168.109 80.5977 167.329 80.6274 166.936 80.6274 cv
166.345 80.6274 165.851 80.5244 165.434 80.3701 cv
165.378 80.3496 165.322 80.3281 165.269 80.3081 cv
165.214 80.2148 li
165.257 79.8115 165.257 79.7598 165.279 79.3481 cv
165.389 79.3164 li
165.587 79.4609 166.068 79.8115 166.914 79.8115 cv
167.781 79.8115 168.097 79.3574 168.097 79.0366 cv
168.097 78.5615 167.626 78.4067 166.957 78.2007 cv
166.607 78.0859 li
166.157 77.9517 165.171 77.6528 165.171 76.5889 cv
165.171 75.5254 166.157 74.998 167.385 74.998 cv
168.196 74.998 168.768 75.2144 168.964 75.2871 cv
169.02 75.3599 li
168.977 75.7412 168.964 75.7822 168.932 76.1758 cv
168.834 76.2168 li
168.559 76.0518 168.131 75.8027 167.419 75.8027 cv
167.264 75.8027 167.112 75.814 166.946 75.856 cv
166.618 75.937 166.345 76.1553 166.345 76.4746 cv
166.345 76.9194 166.793 77.0537 167.473 77.25 cv
167.868 77.3633 li
cp
f
173.352 79.6885 mo
173.317 80.0293 173.317 80.1006 173.309 80.4009 cv
173.253 80.4629 li
173.021 80.5137 172.836 80.5557 172.431 80.5557 cv
172.167 80.5557 171.477 80.5557 171.135 80.0186 cv
170.938 79.7178 170.938 79.4702 170.938 78.252 cv
170.961 75.979 li
170.575 75.979 170.566 75.9893 170.17 76.0005 cv
170.127 75.937 li
170.149 75.6074 170.149 75.5254 170.149 75.1938 cv
170.215 75.1323 li
170.456 75.1323 170.599 75.1431 170.961 75.1323 cv
170.948 74.9155 170.948 74.6875 170.948 74.4712 cv
170.938 74.2744 170.927 74.0776 170.916 73.8818 cv
170.972 73.8101 li
171.466 73.6953 171.587 73.666 172.091 73.5205 cv
172.167 73.5723 li
172.135 74.2544 172.122 74.3892 172.122 75.1431 cv
172.584 75.1323 172.715 75.1323 173.341 75.1118 cv
173.395 75.1733 li
173.373 75.4419 173.362 75.5547 173.362 75.9077 cv
173.309 75.9688 li
172.759 75.959 172.693 75.9482 172.111 75.9482 cv
172.091 77.8701 li
172.101 77.9932 172.101 78.583 172.101 78.7271 cv
172.101 79.481 172.2 79.7178 172.748 79.7178 cv
172.979 79.7178 173.153 79.667 173.274 79.625 cv
173.352 79.6885 li
cp
f
177.08 77.3633 mo
177.52 77.498 178.517 77.8184 178.517 78.9131 cv
178.517 79.3262 178.353 79.791 177.902 80.1323 cv
177.321 80.5977 176.543 80.6274 176.147 80.6274 cv
175.555 80.6274 175.063 80.5244 174.646 80.3701 cv
174.59 80.3496 174.534 80.3281 174.48 80.3081 cv
174.426 80.2148 li
174.47 79.8115 174.47 79.7598 174.491 79.3481 cv
174.601 79.3164 li
174.798 79.4609 175.282 79.8115 176.126 79.8115 cv
176.993 79.8115 177.311 79.3574 177.311 79.0366 cv
177.311 78.5615 176.838 78.4067 176.169 78.2007 cv
175.819 78.0859 li
175.369 77.9517 174.381 77.6528 174.381 76.5889 cv
174.381 75.5254 175.369 74.998 176.597 74.998 cv
177.409 74.998 177.979 75.2144 178.178 75.2871 cv
178.231 75.3599 li
178.187 75.7412 178.178 75.7822 178.144 76.1758 cv
178.044 76.2168 li
177.771 76.0518 177.343 75.8027 176.631 75.8027 cv
176.476 75.8027 176.322 75.814 176.158 75.856 cv
175.83 75.937 175.555 76.1553 175.555 76.4746 cv
175.555 76.9194 176.005 77.0537 176.685 77.25 cv
177.08 77.3633 li
cp
f
184.176 79.2744 mo
184.131 79.7178 184.12 79.77 184.087 80.1934 cv
184.012 80.2661 li
183.694 80.4116 183.265 80.6177 182.497 80.6177 cv
180.842 80.6177 179.766 79.4922 179.766 77.8804 cv
179.766 76.2373 180.82 74.998 182.521 74.998 cv
183.232 74.998 183.737 75.2144 184.022 75.3286 cv
184.065 75.4009 li
184.022 75.7729 184.012 75.9077 183.989 76.2168 cv
183.901 76.2578 li
183.539 76.0098 183.123 75.856 182.685 75.856 cv
181.774 75.856 180.974 76.5161 180.974 77.8384 cv
180.974 79.2427 181.817 79.75 182.674 79.75 cv
183.418 79.75 183.88 79.3882 184.087 79.2334 cv
184.176 79.2744 li
cp
f
190.426 80.4937 mo
189.901 80.5044 189.834 80.5044 189.329 80.5342 cv
189.252 80.4629 li
189.265 80.1221 li
189.275 79.585 189.275 79.0366 189.275 78.4995 cv
189.265 77.395 li
189.265 77.1572 189.265 76.9194 189.209 76.6919 cv
189.09 76.2168 188.781 75.9077 188.223 75.9077 cv
187.597 75.9077 187.114 76.2373 186.753 76.4854 cv
186.742 78.2827 186.763 79.2227 186.829 80.4316 cv
186.775 80.4937 li
186.271 80.5044 186.139 80.5044 185.602 80.5342 cv
185.546 80.4629 li
185.569 79.7295 185.602 78.7993 185.602 76.8164 cv
185.602 75.9482 185.589 75.0801 185.58 74.2124 cv
185.558 73.3037 185.524 73.0039 185.491 72.5391 cv
185.546 72.4771 li
186.072 72.3945 186.249 72.3633 186.742 72.2603 cv
186.808 72.333 li
186.742 73.4385 186.742 74.5532 186.742 75.6694 cv
187.094 75.4526 187.784 75.0283 188.704 75.0283 cv
188.958 75.0283 189.209 75.0596 189.441 75.1528 cv
189.934 75.3398 190.229 75.7095 190.339 76.1338 cv
190.395 76.3413 190.395 76.4644 190.415 77.1572 cv
190.415 78.3657 li
190.426 78.8511 li
190.449 79.7178 190.449 79.8638 190.492 80.4316 cv
190.426 80.4937 li
cp
f
198.729 80.4937 mo
197.993 80.5044 197.907 80.5044 197.238 80.5342 cv
197.161 80.4629 li
197.029 79.8325 196.82 78.9951 196.634 78.2627 cv
195.998 75.7822 li
195.351 78.3247 li
195.022 79.5742 194.913 79.9775 194.813 80.4316 cv
194.748 80.4937 li
193.98 80.5044 193.925 80.5044 193.234 80.5342 cv
193.169 80.4629 li
192.687 78.6133 191.864 75.9077 191.634 75.2251 cv
191.677 75.1528 li
192.203 75.1211 192.346 75.1211 192.872 75.0703 cv
192.938 75.1323 li
193.004 75.4736 193.081 75.793 193.554 77.7036 cv
194.08 79.8325 li
194.792 77.0537 li
195.122 75.6802 195.142 75.5454 195.208 75.2144 cv
195.284 75.1431 li
195.933 75.1431 196.119 75.1431 196.843 75.1118 cv
196.908 75.1831 li
197.062 75.896 197.325 76.8877 197.522 77.6743 cv
198.104 79.8638 li
198.718 77.4561 li
198.805 77.0947 198.894 76.7329 198.981 76.3716 cv
199.167 75.6694 199.188 75.5874 199.256 75.1938 cv
199.333 75.1323 li
199.508 75.1323 199.693 75.1431 199.87 75.1431 cv
200.034 75.1431 200.198 75.1323 200.362 75.1323 cv
200.429 75.1938 li
200.22 75.7822 199.256 78.665 198.805 80.4316 cv
198.729 80.4937 li
cp
f
206.099 79.1914 mo
205.956 79.3062 205.715 79.4922 205.31 79.647 cv
205.003 79.75 204.673 79.8018 204.355 79.8018 cv
204.015 79.8018 203.391 79.75 202.938 79.2427 cv
202.567 78.8203 202.533 78.314 202.523 77.9517 cv
204.321 77.9424 204.617 77.9424 206.329 77.9517 cv
206.405 77.8901 li
206.416 77.436 206.439 76.4126 205.813 75.7095 cv
205.484 75.3398 204.88 74.998 204.015 74.998 cv
202.579 74.998 201.351 75.937 201.351 77.8584 cv
201.351 79.6567 202.48 80.6274 204.278 80.6274 cv
205.255 80.6274 205.847 80.3281 206.034 80.2354 cv
206.099 80.1641 li
206.12 79.7598 206.131 79.6567 206.187 79.2427 cv
206.099 79.1914 li
cp
205.276 77.1572 mo
204.268 77.1675 203.851 77.1772 202.523 77.1675 cv
202.634 76.1338 203.356 75.7412 203.972 75.7412 cv
204.464 75.7412 204.947 75.979 205.167 76.5474 cv
205.255 76.7847 205.266 77.0127 205.276 77.1572 cv
cp
f
209.29 73.624 mo
208.73 73.644 208.61 73.6543 208.073 73.707 cv
208.008 73.644 li
208.017 73.5098 208.017 73.3657 208.017 73.2314 cv
208.017 73.0449 208.008 72.8794 207.995 72.6733 cv
208.073 72.6113 li
208.643 72.5698 208.741 72.5605 209.29 72.5088 cv
209.356 72.5698 li
209.346 72.9941 209.346 73.0977 209.356 73.5513 cv
209.29 73.624 li
cp
209.28 80.4937 mo
208.709 80.5044 208.621 80.5044 208.084 80.5342 cv
208.029 80.4629 li
208.062 79.9146 208.095 79.4395 208.095 78.2935 cv
208.095 76.3198 208.062 75.9482 207.984 75.3398 cv
208.04 75.2661 li
208.513 75.1938 208.675 75.1733 209.225 75.0596 cv
209.333 75.1211 li
209.301 75.6587 209.268 76.2168 209.268 77.5488 cv
209.268 79.4702 209.29 79.7295 209.333 80.4316 cv
209.28 80.4937 li
cp
f
214.97 80.5044 mo
214.664 80.5044 213.162 80.5137 212.823 80.5137 cv
211.538 80.5137 211.396 80.5137 210.727 80.5342 cv
210.683 80.4409 li
211.516 79.1406 212.843 76.9297 213.401 75.937 cv
211.956 75.9482 211.692 75.9482 210.989 75.979 cv
210.936 75.917 li
210.979 75.5767 210.989 75.4937 211.012 75.2051 cv
211.078 75.1431 li
212.92 75.1431 213.129 75.1431 215.037 75.1118 cv
215.093 75.1938 li
214.115 76.7021 212.724 79.1616 212.427 79.6885 cv
213.371 79.6768 214.313 79.6567 215.059 79.625 cv
215.114 79.6885 li
215.069 80.0078 215.059 80.1421 215.037 80.4526 cv
214.97 80.5044 li
cp
f
182.836 17.9951 mo
184.74 18.5776 189.072 19.9678 189.072 24.7217 cv
189.072 26.5156 188.358 28.5327 186.406 30.0137 cv
183.883 32.0317 180.503 32.166 178.789 32.166 cv
176.219 32.166 174.076 31.7178 172.268 31.0449 cv
172.029 30.9561 171.791 30.8662 171.553 30.7764 cv
171.315 30.3721 li
171.506 28.6226 171.506 28.3979 171.601 26.605 cv
172.077 26.4707 li
172.934 27.0981 175.028 28.6226 178.694 28.6226 cv
182.455 28.6226 183.836 26.6499 183.836 25.2598 cv
183.836 23.1973 181.79 22.5249 178.885 21.627 cv
177.361 21.1338 li
175.409 20.5508 171.125 19.251 171.125 14.6328 cv
171.125 10.0127 175.409 7.72559 180.741 7.72559 cv
184.266 7.72559 186.739 8.66797 187.597 8.98145 cv
187.836 9.2959 li
187.646 10.9541 187.597 11.1333 187.453 12.8379 cv
187.025 13.0171 li
185.835 12.2993 183.979 11.2231 180.884 11.2231 cv
180.218 11.2231 179.551 11.2681 178.837 11.4478 cv
177.409 11.8062 176.219 12.748 176.219 14.1377 cv
176.219 16.0669 178.17 16.6499 181.124 17.5015 cv
182.836 17.9951 li
cp
f
216.638 19.6084 mo
216.542 16.4702 215.924 13.3306 213.733 10.9541 cv
211.639 8.71191 208.449 7.72559 205.212 7.72559 cv
200.45 7.72559 197.69 9.56445 196.355 10.8647 cv
193.168 13.8691 193.071 18.2642 193.071 19.9678 cv
193.071 21.4478 193.12 26.0215 196.355 29.1157 cv
197.879 30.5967 200.593 32.1216 204.877 32.1216 cv
208.211 32.1216 211.02 31.3584 213.114 29.3843 cv
214.686 27.9058 215.684 26.1563 216.207 23.959 cv
216.542 22.6147 216.638 21.1338 216.638 19.6084 cv
cp
211.448 19.7881 mo
211.496 20.7295 211.448 23.7354 210.352 25.7529 cv
208.973 28.2192 206.688 28.7573 204.927 28.7573 cv
203.973 28.7573 202.973 28.5776 202.116 28.1743 cv
198.355 26.3809 198.308 21.8506 198.308 20.0576 cv
198.308 18.1743 198.452 15.5737 199.737 13.7344 cv
201.403 11.2231 204.069 11.1333 204.974 11.1333 cv
207.64 11.1333 209.163 12.2993 210.067 13.6895 cv
211.258 15.6636 211.448 18.6675 211.448 19.7881 cv
cp
f
165.694 19.978 mo
165.694 21.5425 164.426 22.812 162.86 22.812 cv
161.295 22.812 160.027 21.5425 160.027 19.978 cv
160.027 18.4136 161.295 17.1436 162.86 17.1436 cv
164.426 17.1436 165.694 18.4136 165.694 19.978 cv
cp
f
100.469 .268555 mo
100.422 3.72217 100.374 5.8291 100.374 8.96826 cv
100.374 16.502 100.517 23.9912 100.898 31.5249 cv
100.66 31.7935 li
96.6133 31.7485 95.6616 31.7935 92.0898 31.9282 cv
91.8525 31.6587 li
92.0898 25.3369 92.0898 23.8564 91.9956 17.8032 cv
90.0913 17.7583 88.187 17.7134 86.2822 17.7134 cv
84.4263 17.7134 82.6641 17.7583 80.5703 17.8481 cv
80.6172 24.3496 80.6641 25.9648 80.9502 31.5249 cv
80.7124 31.7935 li
76.5239 31.7485 75.666 31.7935 72.1909 31.9282 cv
71.9526 31.6587 li
72.0479 27.8936 72.1436 25.6963 72.1436 21.6592 cv
72.1436 10.5391 71.8574 5.02246 71.6196 .402344 cv
71.9053 .133789 li
76.0469 .133789 76.7607 .133789 80.4268 0 cv
80.6641 .268555 li
80.5703 12.1074 li
82.2363 12.1074 83.9492 12.1523 85.6152 12.1523 cv
87.7588 12.1523 89.8525 12.1074 91.9473 12.0625 cv
91.9009 6.77051 91.9009 5.4707 91.5664 .402344 cv
91.8052 .133789 li
95.8042 .133789 96.4219 .133789 100.231 0 cv
100.469 .268555 li
cp
1 .23 0 .18 cmyk
f
128.073 25.1577 mo
126.263 26.0542 124.12 27.0859 120.646 27.0859 cv
117.79 27.0859 115.837 26.2334 114.694 24.6187 cv
113.98 23.6772 113.838 22.7803 113.648 21.8828 cv
129.025 21.6143 li
129.31 21.3008 li
129.264 19.104 129.215 16.8604 128.55 14.6187 cv
126.882 9.32666 123.216 8.25049 121.598 7.8916 cv
120.408 7.57861 119.313 7.48877 118.218 7.48877 cv
110.743 7.48877 105.792 12.1074 105.792 19.8657 cv
105.792 21.9727 106.174 24.1699 106.935 25.7402 cv
109.697 31.7935 116.171 32.332 119.599 32.332 cv
123.55 32.332 125.265 31.6587 127.787 30.7173 cv
128.073 30.3589 li
128.406 25.2925 li
128.073 25.1577 li
cp
113.648 17.1299 mo
113.79 15.7397 114.123 13.8569 115.933 12.7808 cv
116.504 12.4219 117.172 12.2871 117.837 12.2871 cv
119.409 12.2871 120.359 13.0493 120.884 13.8569 cv
121.55 14.8433 121.598 15.9189 121.598 16.9502 cv
113.648 17.1299 li
cp
f
148.162 17.1299 mo
150.781 18.0728 154.447 19.3726 154.447 24.3047 cv
154.447 24.6187 154.447 24.9321 154.397 25.2925 cv
153.542 31.7036 146.401 32.332 142.783 32.332 cv
139.309 32.332 137.308 31.6147 134.975 30.8071 cv
134.738 30.4038 li
134.929 28.1621 134.975 27.6689 135.071 25.3369 cv
135.499 25.1577 li
136.212 25.6963 136.595 26.0098 137.404 26.4131 cv
139.165 27.2646 141.117 27.6689 142.45 27.6689 cv
145.115 27.6689 146.211 26.458 146.211 25.3369 cv
146.211 23.7222 144.114 23.0488 142.831 22.6465 cv
141.021 22.0176 li
138.784 21.2109 134.833 19.7759 134.833 14.9775 cv
134.833 13.1836 135.499 11.8389 136.118 11.0313 cv
138.593 7.66797 143.26 7.48877 145.591 7.48877 cv
148.687 7.48877 150.639 8.02637 152.874 8.60986 cv
153.113 8.87842 li
152.638 13.7671 li
152.208 13.9019 li
151.02 13.1836 149.162 12.0186 146.259 12.0186 cv
143.306 12.0186 142.925 13.4976 142.925 14.0356 cv
142.925 15.2915 144.21 15.7842 145.83 16.3223 cv
148.162 17.1299 li
cp
f
175.53 95.7075 mo
174.426 95.8623 173.398 96.0063 173.398 96.9238 cv
173.398 96.9751 173.398 97.8613 174.437 97.8613 cv
175.115 97.8613 175.509 97.5112 175.629 97.4077 cv
175.629 95.6865 li
175.53 95.7075 li
cp
176.755 96.46 mo
176.755 97.7373 176.766 97.8511 176.821 98.521 cv
176.766 98.5728 li
176.251 98.583 176.165 98.5928 175.661 98.6138 cv
175.618 98.5518 li
175.629 98.1812 li
175.422 98.335 174.93 98.7065 174.098 98.7065 cv
173.005 98.7065 172.238 98.0054 172.238 96.9858 cv
172.238 95.6045 173.463 95.1611 175.433 94.9453 cv
175.618 94.9243 li
175.618 94.6465 175.618 94.4502 175.52 94.2856 cv
175.411 94.0996 175.158 93.9038 174.612 93.9038 cv
173.901 93.9038 173.409 94.1099 172.95 94.2959 cv
172.862 94.2437 li
172.884 93.77 172.884 93.708 172.895 93.4922 cv
172.962 93.4302 li
173.573 93.2241 174.208 93.0894 174.852 93.0894 cv
175.661 93.0894 176.449 93.3472 176.679 94.1519 cv
176.755 94.4395 176.755 95.0068 176.755 95.4399 cv
176.755 96.46 li
cp
0 .06 .11 .38 cmyk
f
183.44 98.5728 mo
182.917 98.583 182.852 98.583 182.347 98.6138 cv
182.27 98.5415 li
182.27 98.4277 182.282 98.3149 182.282 98.2012 cv
182.294 97.6963 182.294 97.1914 182.294 96.686 cv
182.294 95.0991 182.282 94.9961 182.227 94.7803 cv
182.019 93.9971 181.396 93.9971 181.245 93.9971 cv
180.588 93.9971 180.083 94.3574 179.789 94.5737 cv
179.776 96.3672 179.799 97.3047 179.876 98.5107 cv
179.811 98.5728 li
179.275 98.583 179.188 98.583 178.662 98.6138 cv
178.606 98.5415 li
178.619 97.9644 178.641 97.4077 178.641 96.645 cv
178.641 94.9961 178.563 94.1206 178.511 93.4302 cv
178.575 93.3584 li
179.12 93.2651 179.22 93.2441 179.733 93.1514 cv
179.811 93.2241 li
179.799 93.7598 li
180.083 93.5742 180.762 93.1206 181.725 93.1206 cv
181.997 93.1206 182.338 93.1621 182.632 93.3164 cv
182.917 93.4712 183.146 93.708 183.267 93.9868 cv
183.409 94.2959 183.418 94.6045 183.431 95.2441 cv
183.431 96.4492 li
183.462 97.6553 183.474 98.1191 183.505 98.5107 cv
183.44 98.5728 li
cp
f
188.837 93.9658 mo
188.651 93.9561 188.521 93.9351 188.291 93.9351 cv
187.952 93.9351 187.23 93.9561 186.705 94.4194 cv
186.466 94.6357 186.072 95.1201 186.072 96.0376 cv
186.072 96.625 186.247 97.0469 186.477 97.3047 cv
186.673 97.5215 187.033 97.7686 187.602 97.7686 cv
188.269 97.7686 188.673 97.4385 188.826 97.3154 cv
188.848 95.9653 188.848 95.6558 188.837 93.9658 cv
cp
188.826 90.5752 mo
189.386 90.4824 189.494 90.4619 189.986 90.3594 cv
190.062 90.4204 li
189.986 91.8535 189.976 94.4087 189.976 95.4399 cv
189.976 97.0366 190.019 97.7993 190.062 98.5107 cv
190.008 98.583 li
189.526 98.583 189.396 98.5928 188.893 98.6138 cv
188.815 98.5518 li
188.837 98.1709 li
188.575 98.356 188.127 98.6855 187.329 98.6855 cv
185.874 98.6855 184.869 97.6035 184.869 96.0376 cv
184.869 94.9141 185.372 94.2026 185.831 93.8218 cv
186.63 93.1416 187.668 93.1104 188.236 93.1104 cv
188.466 93.1104 188.575 93.1104 188.871 93.1313 cv
188.882 91.8535 188.826 91.2349 188.772 90.6372 cv
188.826 90.5752 li
cp
f
196.656 95.5327 mo
197.006 95.5327 197.355 95.543 197.706 95.543 cv
198.077 95.543 198.471 95.5327 198.854 95.5327 cv
197.805 92.0493 li
196.656 95.5327 li
cp
198.82 91.5234 mo
199.183 92.6567 199.598 93.9351 199.926 94.9141 cv
200.264 95.9033 200.812 97.4902 201.14 98.48 cv
201.097 98.562 li
200.526 98.5728 200.285 98.583 199.827 98.6035 cv
199.749 98.5308 li
199.477 97.5625 199.39 97.2847 199.105 96.3564 cv
198.669 96.3564 198.241 96.3462 197.805 96.3462 cv
197.321 96.3462 196.82 96.3564 196.384 96.3564 cv
196.064 97.3257 195.999 97.5723 195.736 98.4897 cv
195.662 98.562 li
195.191 98.562 195.08 98.562 194.535 98.5928 cv
194.491 98.521 li
194.522 98.4077 194.565 98.3047 194.612 98.2012 cv
195.027 97.0889 195.43 95.9756 195.826 94.8623 cv
196.479 93.0386 196.721 92.3687 197.037 91.3794 cv
197.127 91.3066 li
197.892 91.2969 197.99 91.2969 198.69 91.2656 cv
198.765 91.3379 li
198.82 91.5234 li
cp
f
204.905 94.2959 mo
204.794 94.2544 204.651 94.2026 204.466 94.2026 cv
204.258 94.2026 204.106 94.2749 204.007 94.3369 cv
203.558 94.6357 203.558 95.0889 203.558 96.1611 cv
203.558 97.3257 203.592 97.9331 203.636 98.5107 cv
203.58 98.583 li
203.065 98.583 202.948 98.5928 202.422 98.6138 cv
202.366 98.5518 li
202.378 97.7686 202.391 97.0576 202.391 96.0996 cv
202.391 94.4502 202.356 94.0278 202.292 93.4302 cv
202.356 93.3584 li
202.771 93.2852 203.035 93.2344 203.493 93.1514 cv
203.558 93.2134 li
203.506 94.0898 li
203.636 93.7598 203.908 93.1006 204.84 93.1006 cv
204.979 93.1006 205.057 93.1104 205.144 93.1313 cv
205.189 93.1934 li
205.078 93.688 205.057 93.791 204.979 94.2437 cv
204.905 94.2959 li
cp
f
209.383 97.7686 mo
209.349 98.1089 209.349 98.1812 209.336 98.48 cv
209.283 98.5415 li
209.055 98.5928 208.868 98.6348 208.463 98.6348 cv
208.2 98.6348 207.513 98.6348 207.172 98.0981 cv
206.977 97.7993 206.977 97.5522 206.977 96.3364 cv
206.998 94.0688 li
206.614 94.0688 206.605 94.0791 206.212 94.0898 cv
206.165 94.0278 li
206.187 93.6982 206.187 93.6152 206.187 93.2852 cv
206.255 93.2241 li
206.493 93.2241 206.636 93.2344 206.998 93.2241 cv
206.986 93.0073 206.986 92.7808 206.986 92.5645 cv
206.977 92.3687 206.964 92.1729 206.955 91.9771 cv
207.008 91.9053 li
207.5 91.7915 207.621 91.7603 208.122 91.6162 cv
208.2 91.6675 li
208.169 92.3477 208.156 92.4819 208.156 93.2344 cv
208.614 93.2241 208.748 93.2241 209.37 93.2031 cv
209.426 93.2651 li
209.404 93.5332 209.392 93.646 209.392 93.9971 cv
209.336 94.0586 li
208.791 94.0479 208.727 94.0381 208.147 94.0381 cv
208.122 95.9546 li
208.135 96.0786 208.135 96.666 208.135 96.8101 cv
208.135 97.5625 208.233 97.7993 208.778 97.7993 cv
209.011 97.7993 209.185 97.748 209.306 97.7065 cv
209.383 97.7686 li
cp
f
213.26 95.4497 mo
213.696 95.584 214.69 95.9033 214.69 96.9956 cv
214.69 97.4077 214.526 97.8711 214.077 98.2119 cv
213.498 98.6758 212.721 98.7065 212.327 98.7065 cv
211.739 98.7065 211.247 98.6035 210.832 98.4487 cv
210.776 98.4277 210.721 98.4077 210.668 98.3867 cv
210.612 98.2939 li
210.655 97.8921 210.655 97.8413 210.677 97.4287 cv
210.785 97.3975 li
210.983 97.5415 211.464 97.8921 212.306 97.8921 cv
213.17 97.8921 213.488 97.4385 213.488 97.1196 cv
213.488 96.645 213.018 96.4912 212.349 96.2842 cv
211.999 96.1714 li
211.554 96.0376 210.568 95.7388 210.568 94.6772 cv
210.568 93.6152 211.554 93.0894 212.776 93.0894 cv
213.585 93.0894 214.154 93.3062 214.353 93.3784 cv
214.405 93.4502 li
214.361 93.832 214.353 93.873 214.318 94.2646 cv
214.22 94.3057 li
213.947 94.1406 213.52 93.894 212.811 93.894 cv
212.655 93.894 212.504 93.9038 212.34 93.9448 cv
212.012 94.0278 211.739 94.2437 211.739 94.5635 cv
211.739 95.0068 212.185 95.1411 212.863 95.3369 cv
213.26 95.4497 li
cp
f
13.9502 91.3486 mo
13.9277 92.2861 13.917 92.5337 13.917 93.3472 cv
13.917 93.791 13.917 94.1206 13.9277 94.8931 cv
13.9395 95.8208 li
13.9395 96.4395 13.9395 97.3257 13.3047 97.9751 cv
12.7798 98.5107 11.9385 98.7373 11.0527 98.7373 cv
9.64258 98.7373 8.94238 98.2012 8.65771 97.9023 cv
8.06787 97.2637 8.06787 96.645 8.06787 95.4399 cv
8.06787 94.3887 li
8.06787 92.8945 8.06787 92.7188 8.03467 91.3794 cv
8.11133 91.3066 li
8.7124 91.2969 8.78906 91.2969 9.33594 91.2759 cv
9.39063 91.3486 li
9.34668 92.4199 9.34668 94.2856 9.34668 95.2852 cv
9.34668 96.3154 9.36816 96.9438 9.75146 97.3667 cv
9.9375 97.5835 10.3638 97.8711 11.1177 97.8711 cv
11.3916 97.8711 12.2549 97.8511 12.6709 97.0889 cv
12.9116 96.6558 12.9116 96.0684 12.9116 95.2642 cv
12.9116 94.0688 12.9004 92.5537 12.8242 91.3794 cv
12.8779 91.3066 li
13.3813 91.2969 13.4473 91.2969 13.8848 91.2759 cv
13.9502 91.3486 li
cp
f
20.8833 98.5728 mo
20.3584 98.583 20.293 98.583 19.7905 98.6138 cv
19.7139 98.5415 li
19.7139 98.4277 19.7246 98.3149 19.7246 98.2012 cv
19.7354 97.6963 19.7354 97.1914 19.7354 96.686 cv
19.7354 95.0991 19.7246 94.9961 19.6694 94.7803 cv
19.4619 93.9971 18.8389 93.9971 18.6855 93.9971 cv
18.0293 93.9971 17.5269 94.3574 17.231 94.5737 cv
17.2202 96.3672 17.2427 97.3047 17.3184 98.5107 cv
17.2534 98.5728 li
16.7178 98.583 16.6294 98.583 16.1045 98.6138 cv
16.0508 98.5415 li
16.0615 97.9644 16.083 97.4077 16.083 96.645 cv
16.083 94.9961 16.0063 94.1206 15.9521 93.4302 cv
16.0181 93.3584 li
16.5645 93.2651 16.6631 93.2441 17.1768 93.1514 cv
17.2534 93.2241 li
17.2427 93.7598 li
17.5269 93.5742 18.2041 93.1206 19.167 93.1206 cv
19.4404 93.1206 19.7788 93.1621 20.0742 93.3164 cv
20.3584 93.4712 20.5884 93.708 20.7085 93.9868 cv
20.8511 94.2959 20.8618 94.6045 20.8726 95.2441 cv
20.8726 96.4492 li
20.9053 97.6553 20.9165 98.1191 20.9492 98.5107 cv
20.8833 98.5728 li
cp
f
24.1357 91.7192 mo
23.5771 91.7393 23.4575 91.7505 22.9219 91.8013 cv
22.856 91.7393 li
22.8667 91.6055 22.8667 91.4614 22.8667 91.3276 cv
22.8667 91.1416 22.856 90.9771 22.8452 90.771 cv
22.9219 90.709 li
23.4897 90.668 23.5884 90.6582 24.1357 90.606 cv
24.2007 90.668 li
24.1899 91.0908 24.1899 91.1938 24.2007 91.6475 cv
24.1357 91.7192 li
cp
24.1245 98.5728 mo
23.5557 98.583 23.4683 98.583 22.9326 98.6138 cv
22.8774 98.5415 li
22.9106 97.9951 22.9434 97.5215 22.9434 96.3774 cv
22.9434 94.4087 22.9106 94.0381 22.834 93.4302 cv
22.8887 93.3584 li
23.3589 93.2852 23.5234 93.2651 24.0698 93.1514 cv
24.1787 93.2134 li
24.1465 93.749 24.1133 94.3057 24.1133 95.6357 cv
24.1133 97.5522 24.1357 97.8101 24.1787 98.5107 cv
24.1245 98.5728 li
cp
f
28.5649 98.5728 mo
27.9526 98.583 27.8003 98.583 27.1655 98.6138 cv
27.1006 98.5415 li
26.564 96.79 25.9956 95.0479 25.3511 93.3271 cv
25.394 93.2441 li
25.9302 93.2134 26.0508 93.2031 26.5864 93.1514 cv
26.6738 93.2031 li
27.0781 94.7285 27.5264 96.2534 27.9751 97.7686 cv
28.0845 97.3975 28.6309 95.6045 28.751 95.2031 cv
29.1118 94.0176 29.2109 93.5952 29.2983 93.2441 cv
29.375 93.1934 li
29.8882 93.2134 29.9756 93.2031 30.4023 93.1934 cv
30.457 93.2651 li
29.7896 94.9961 29.1997 96.748 28.6309 98.5107 cv
28.5649 98.5728 li
cp
f
35.1992 94.6357 mo
34.9805 94.0688 34.4995 93.832 34.0073 93.832 cv
33.395 93.832 32.6733 94.2236 32.5645 95.2539 cv
33.8872 95.2642 34.3027 95.2539 35.3086 95.2441 cv
35.2979 95.0991 35.2866 94.873 35.1992 94.6357 cv
cp
36.2168 97.3257 mo
36.1616 97.7373 36.1509 97.8413 36.1289 98.2432 cv
36.0635 98.3149 li
35.8774 98.4077 35.2866 98.7065 34.314 98.7065 cv
32.52 98.7065 31.3945 97.7373 31.3945 95.9443 cv
31.3945 94.0278 32.6191 93.0894 34.0513 93.0894 cv
34.915 93.0894 35.5166 93.4302 35.8442 93.8008 cv
36.4683 94.5015 36.4458 95.522 36.4351 95.9756 cv
36.3584 96.0376 li
34.6528 96.0264 34.3569 96.0264 32.5645 96.0376 cv
32.5752 96.3979 32.6074 96.9028 32.98 97.3257 cv
33.4282 97.8301 34.0513 97.8823 34.3906 97.8823 cv
34.707 97.8823 35.0352 97.8301 35.3418 97.7275 cv
35.7461 97.5723 35.9868 97.3877 36.1289 97.2734 cv
36.2168 97.3257 li
cp
f
40.6606 94.2959 mo
40.5518 94.2544 40.4092 94.2026 40.2236 94.2026 cv
40.0151 94.2026 39.8628 94.2749 39.7642 94.3369 cv
39.3154 94.6357 39.3154 95.0889 39.3154 96.1611 cv
39.3154 97.3257 39.3486 97.9331 39.3921 98.5107 cv
39.3379 98.583 li
38.8237 98.583 38.7036 98.5928 38.1787 98.6138 cv
38.124 98.5518 li
38.1348 97.7686 38.1455 97.0576 38.1455 96.0996 cv
38.1455 94.4502 38.1133 94.0278 38.0474 93.4302 cv
38.1133 93.3584 li
38.5288 93.2852 38.7905 93.2344 39.2505 93.1514 cv
39.3154 93.2134 li
39.2612 94.0898 li
39.3921 93.7598 39.665 93.1006 40.5952 93.1006 cv
40.7373 93.1006 40.814 93.1104 40.9014 93.1313 cv
40.9448 93.1934 li
40.8359 93.688 40.814 93.791 40.7373 94.2437 cv
40.6606 94.2959 li
cp
f
44.5669 95.4497 mo
45.0044 95.584 46 95.9033 46 96.9956 cv
46 97.4077 45.8359 97.8711 45.3867 98.2119 cv
44.8076 98.6758 44.0313 98.7065 43.6372 98.7065 cv
43.0474 98.7065 42.5552 98.6035 42.1396 98.4487 cv
42.085 98.4277 42.0303 98.4077 41.9761 98.3867 cv
41.9209 98.2939 li
41.9644 97.8921 41.9644 97.8413 41.9868 97.4287 cv
42.0962 97.3975 li
42.2925 97.5415 42.7744 97.8921 43.6157 97.8921 cv
44.4795 97.8921 44.7969 97.4385 44.7969 97.1196 cv
44.7969 96.645 44.3262 96.4912 43.6597 96.2842 cv
43.3101 96.1714 li
42.8618 96.0376 41.877 95.7388 41.877 94.6772 cv
41.877 93.6152 42.8618 93.0894 44.0864 93.0894 cv
44.8955 93.0894 45.4634 93.3062 45.6611 93.3784 cv
45.7148 93.4502 li
45.6719 93.832 45.6611 93.873 45.6274 94.2646 cv
45.5293 94.3057 li
45.2559 94.1406 44.8296 93.894 44.1187 93.894 cv
43.9658 93.894 43.8125 93.9038 43.6489 93.9448 cv
43.3208 94.0278 43.0474 94.2437 43.0474 94.5635 cv
43.0474 95.0068 43.4956 95.1411 44.1738 95.3369 cv
44.5669 95.4497 li
cp
f
48.7559 91.7192 mo
48.1978 91.7393 48.0776 91.7505 47.542 91.8013 cv
47.4761 91.7393 li
47.4873 91.6055 47.4873 91.4614 47.4873 91.3276 cv
47.4873 91.1416 47.4761 90.9771 47.4653 90.771 cv
47.542 90.709 li
48.1104 90.668 48.2085 90.6582 48.7559 90.606 cv
48.8208 90.668 li
48.8101 91.0908 48.8101 91.1938 48.8208 91.6475 cv
48.7559 91.7192 li
cp
48.7451 98.5728 mo
48.1763 98.583 48.0884 98.583 47.5527 98.6138 cv
47.498 98.5415 li
47.5313 97.9951 47.5635 97.5215 47.5635 96.3774 cv
47.5635 94.4087 47.5313 94.0381 47.4546 93.4302 cv
47.5088 93.3584 li
47.9795 93.2852 48.1436 93.2651 48.6899 93.1514 cv
48.7993 93.2134 li
48.7666 93.749 48.7334 94.3057 48.7334 95.6357 cv
48.7334 97.5522 48.7559 97.8101 48.7993 98.5107 cv
48.7451 98.5728 li
cp
f
53.2832 97.7686 mo
53.2505 98.1089 53.2505 98.1812 53.2397 98.48 cv
53.1846 98.5415 li
52.9556 98.5928 52.769 98.6348 52.3647 98.6348 cv
52.1025 98.6348 51.4136 98.6348 51.0742 98.0981 cv
50.8779 97.7993 50.8779 97.5522 50.8779 96.3364 cv
50.8994 94.0688 li
50.5171 94.0688 50.5063 94.0791 50.1123 94.0898 cv
50.0688 94.0278 li
50.0903 93.6982 50.0903 93.6152 50.0903 93.2852 cv
50.1563 93.2241 li
50.3965 93.2241 50.5386 93.2344 50.8994 93.2241 cv
50.8887 93.0073 50.8887 92.7808 50.8887 92.5645 cv
50.8779 92.3687 50.8667 92.1729 50.856 91.9771 cv
50.9102 91.9053 li
51.4028 91.7915 51.5225 91.7603 52.0259 91.6162 cv
52.1025 91.6675 li
52.0693 92.3477 52.0581 92.4819 52.0581 93.2344 cv
52.5181 93.2241 52.6489 93.2241 53.272 93.2031 cv
53.3271 93.2651 li
53.3057 93.5332 53.2939 93.646 53.2939 93.9971 cv
53.2397 94.0586 li
52.6929 94.0479 52.6274 94.0381 52.0474 94.0381 cv
52.0259 95.9546 li
52.0366 96.0786 52.0366 96.666 52.0366 96.8101 cv
52.0366 97.5625 52.1348 97.7993 52.6821 97.7993 cv
52.9111 97.7993 53.0864 97.748 53.207 97.7065 cv
53.2832 97.7686 li
cp
f
58.999 93.2852 mo
58.376 94.7383 57.3262 97.4595 57.0527 98.1812 cv
56.7139 99.1187 56.3857 100.057 56.1567 101.015 cv
56.0576 101.097 li
55.5107 101.108 55.4126 101.108 54.8984 101.128 cv
54.8555 101.056 li
54.8984 100.984 li
55.0962 100.603 55.2593 100.201 55.4458 99.7988 cv
55.5986 99.459 55.7842 99.1294 55.9048 98.7686 cv
55.916 98.7476 55.9268 98.7168 55.9375 98.6855 cv
55.9375 98.562 54.3081 94.4087 53.8379 93.3584 cv
53.8823 93.2651 li
54.4287 93.2241 54.5376 93.2241 55.0962 93.1621 cv
55.1611 93.2241 li
55.4565 94.1519 55.5986 94.5845 55.8394 95.2539 cv
56.5283 97.2227 li
57.1514 95.4087 li
57.3813 94.6973 57.6543 93.853 57.8296 93.2651 cv
57.9063 93.2031 li
58.1792 93.2031 58.4741 93.2031 58.9668 93.1934 cv
58.999 93.2852 li
cp
f
67.5415 94.4604 mo
67.334 94.1406 66.9844 93.873 66.3721 93.873 cv
66.1636 93.873 65.5513 93.894 65.1689 94.4707 cv
64.874 94.8931 64.8408 95.4907 64.8408 95.9238 cv
64.8408 96.3364 64.8516 97.3765 65.7153 97.7891 cv
65.9131 97.8823 66.1421 97.9233 66.3608 97.9233 cv
66.7651 97.9233 67.29 97.7993 67.6074 97.2324 cv
67.8589 96.769 67.8696 96.0786 67.8589 95.8623 cv
67.8589 95.6045 67.8149 94.9141 67.5415 94.4604 cv
cp
68.9521 96.8208 mo
68.832 97.3257 68.6021 97.7275 68.2412 98.0674 cv
67.7607 98.521 67.1152 98.6958 66.3496 98.6958 cv
65.3657 98.6958 64.7422 98.3457 64.3926 98.0054 cv
63.6494 97.2944 63.6387 96.2432 63.6387 95.9033 cv
63.6387 95.5117 63.6602 94.5015 64.3926 93.811 cv
64.6992 93.5122 65.333 93.0894 66.4263 93.0894 cv
67.1699 93.0894 67.9023 93.3164 68.3838 93.832 cv
68.8872 94.3779 69.0288 95.0991 69.0503 95.8208 cv
69.0503 96.1714 69.0288 96.5112 68.9521 96.8208 cv
cp
f
72.1064 98.583 mo
71.6035 98.583 71.5049 98.583 70.9253 98.6138 cv
70.8701 98.5415 li
70.9253 97.4595 70.9253 96.3462 70.9253 95.2539 cv
70.9253 94.7075 70.9253 94.5225 70.9146 94.0688 cv
70.6411 94.0791 70.3682 94.0791 70.1489 94.0791 cv
70.084 94.0176 li
70.1055 93.729 70.1162 93.626 70.127 93.2754 cv
70.1929 93.2134 li
70.5205 93.2241 70.7397 93.2344 70.8926 93.2344 cv
70.8818 92.5537 li
70.8818 92.0391 70.8818 91.915 70.9146 91.7295 cv
71.166 90.5342 72.5215 90.5342 72.8281 90.5342 cv
72.9922 90.5342 73.1016 90.5439 73.2437 90.5552 cv
73.2979 90.627 li
73.2549 90.916 73.2437 91.0498 73.2212 91.3687 cv
73.1445 91.4204 li
73.0464 91.3994 72.9697 91.3794 72.8496 91.3794 cv
72.6201 91.3794 72.3691 91.4204 72.1943 91.6885 cv
72.019 91.9463 72.019 92.2349 72.0298 92.9248 cv
72.0298 93.2344 li
72.0518 93.2344 73.0029 93.2134 73.1123 93.2134 cv
73.167 93.2754 li
73.1445 93.605 73.1338 93.688 73.123 94.0068 cv
73.0581 94.0688 li
72.5874 94.0586 72.4893 94.0586 72.0518 94.0586 cv
72.0518 95.4287 72.0625 96.8101 72.1392 98.1812 cv
72.1392 98.2842 72.1499 98.397 72.1606 98.5107 cv
72.1064 98.583 li
cp
f
79.5908 95.5327 mo
79.9409 95.5327 80.2905 95.543 80.6406 95.543 cv
81.0122 95.543 81.4053 95.5327 81.7886 95.5327 cv
80.7388 92.0493 li
79.5908 95.5327 li
cp
81.7554 91.5234 mo
82.1167 92.6567 82.5317 93.9351 82.8599 94.9141 cv
83.1992 95.9033 83.7456 97.4902 84.0737 98.48 cv
84.0298 98.562 li
83.4614 98.5728 83.2207 98.583 82.7617 98.6035 cv
82.6851 98.5308 li
82.4116 97.5625 82.3242 97.2847 82.04 96.3564 cv
81.603 96.3564 81.1763 96.3462 80.7388 96.3462 cv
80.2573 96.3462 79.7544 96.3564 79.3174 96.3564 cv
79 97.3257 78.9346 97.5723 78.6719 98.4897 cv
78.5952 98.562 li
78.1255 98.562 78.0161 98.562 77.4692 98.5928 cv
77.4258 98.521 li
77.458 98.4077 77.5024 98.3047 77.5459 98.2012 cv
77.9614 97.0889 78.3662 95.9756 78.7593 94.8623 cv
79.416 93.0386 79.6558 92.3687 79.9731 91.3794 cv
80.0605 91.3066 li
80.8262 91.2969 80.9248 91.2969 81.6245 91.2656 cv
81.7012 91.3379 li
81.7554 91.5234 li
cp
f
86.9722 97.8203 mo
88.415 97.8203 89.2466 96.9546 89.2466 95.6865 cv
89.2466 94.6152 88.645 93.9561 87.7705 93.9561 cv
87.1797 93.9561 86.7642 94.2236 86.5122 94.3887 cv
86.5015 94.9243 86.4907 95.4497 86.4907 95.9756 cv
86.4907 96.583 86.5015 97.1914 86.5122 97.7891 cv
86.6548 97.7993 86.7866 97.8203 86.9722 97.8203 cv
cp
86.4907 93.646 mo
86.71 93.4814 87.2344 93.0894 88.0869 93.0894 cv
89.4756 93.0894 90.4487 94.1616 90.4487 95.6147 cv
90.4487 97.2119 89.3223 98.583 87.0156 98.583 cv
86.8081 98.583 86.6763 98.5728 86.5234 98.562 cv
86.5347 99.7988 86.5566 100.067 86.6113 101.035 cv
86.5459 101.097 li
86.1626 101.108 85.7803 101.118 85.3975 101.128 cv
85.3428 101.066 li
85.3643 100.438 85.3867 99.7891 85.3867 98.7373 cv
85.3867 98.1289 85.375 97.5215 85.375 96.9131 cv
85.3643 95.3159 85.3643 94.5942 85.2334 93.4194 cv
85.2876 93.3584 li
85.8232 93.2754 85.9443 93.2441 86.4365 93.1514 cv
86.5122 93.2134 li
86.4907 93.646 li
cp
f
93.8633 97.8203 mo
95.3066 97.8203 96.1377 96.9546 96.1377 95.6865 cv
96.1377 94.6152 95.5361 93.9561 94.6616 93.9561 cv
94.0708 93.9561 93.6553 94.2236 93.4038 94.3887 cv
93.3926 94.9243 93.3818 95.4497 93.3818 95.9756 cv
93.3818 96.583 93.3926 97.1914 93.4038 97.7891 cv
93.5459 97.7993 93.6777 97.8203 93.8633 97.8203 cv
cp
93.3818 93.646 mo
93.6011 93.4814 94.126 93.0894 94.978 93.0894 cv
96.3672 93.0894 97.3398 94.1616 97.3398 95.6147 cv
97.3398 97.2119 96.2139 98.583 93.9067 98.583 cv
93.6992 98.583 93.5679 98.5728 93.4146 98.562 cv
93.4263 99.7988 93.4478 100.067 93.5029 101.035 cv
93.437 101.097 li
93.0537 101.108 92.6714 101.118 92.2891 101.128 cv
92.2339 101.066 li
92.2559 100.438 92.2783 99.7891 92.2783 98.7373 cv
92.2783 98.1289 92.2666 97.5215 92.2666 96.9131 cv
92.2559 95.3159 92.2559 94.5942 92.125 93.4194 cv
92.1792 93.3584 li
92.7148 93.2754 92.8354 93.2441 93.3276 93.1514 cv
93.4038 93.2134 li
93.3818 93.646 li
cp
f
100.27 98.5728 mo
99.7446 98.583 99.6353 98.5928 99.1211 98.6138 cv
99.0674 98.5415 li
99.0889 97.8101 99.1211 96.8818 99.1211 94.9033 cv
99.1211 93.4814 99.1211 91.9561 99.0122 90.6372 cv
99.0674 90.5752 li
99.603 90.4932 99.7119 90.4722 100.259 90.3594 cv
100.324 90.4312 li
100.248 91.7813 100.248 93.1416 100.248 94.4912 cv
100.248 96.748 100.28 97.5313 100.335 98.5107 cv
100.27 98.5728 li
cp
f
103.538 91.7192 mo
102.979 91.7393 102.859 91.7505 102.324 91.8013 cv
102.258 91.7393 li
102.269 91.6055 102.269 91.4614 102.269 91.3276 cv
102.269 91.1416 102.258 90.9771 102.247 90.771 cv
102.324 90.709 li
102.892 90.668 102.99 90.6582 103.538 90.606 cv
103.603 90.668 li
103.592 91.0908 103.592 91.1938 103.603 91.6475 cv
103.538 91.7192 li
cp
103.526 98.5728 mo
102.958 98.583 102.871 98.583 102.335 98.6138 cv
102.28 98.5415 li
102.313 97.9951 102.346 97.5215 102.346 96.3774 cv
102.346 94.4087 102.313 94.0381 102.236 93.4302 cv
102.291 93.3584 li
102.761 93.2852 102.925 93.2651 103.472 93.1514 cv
103.581 93.2134 li
103.549 93.749 103.515 94.3057 103.515 95.6357 cv
103.515 97.5522 103.538 97.8101 103.581 98.5107 cv
103.526 98.5728 li
cp
f
109.083 94.6357 mo
108.865 94.0688 108.384 93.832 107.892 93.832 cv
107.28 93.832 106.559 94.2236 106.449 95.2539 cv
107.772 95.2642 108.187 95.2539 109.193 95.2441 cv
109.183 95.0991 109.172 94.873 109.083 94.6357 cv
cp
110.101 97.3257 mo
110.046 97.7373 110.036 97.8413 110.014 98.2432 cv
109.947 98.3149 li
109.762 98.4077 109.172 98.7065 108.198 98.7065 cv
106.405 98.7065 105.279 97.7373 105.279 95.9443 cv
105.279 94.0278 106.504 93.0894 107.937 93.0894 cv
108.8 93.0894 109.401 93.4302 109.729 93.8008 cv
110.353 94.5015 110.332 95.522 110.321 95.9756 cv
110.243 96.0376 li
108.537 96.0264 108.243 96.0264 106.449 96.0376 cv
106.46 96.3979 106.493 96.9028 106.865 97.3257 cv
107.313 97.8301 107.937 97.8823 108.275 97.8823 cv
108.593 97.8823 108.921 97.8301 109.226 97.7275 cv
109.632 97.5723 109.872 97.3877 110.014 97.2734 cv
110.101 97.3257 li
cp
f
115.676 93.9658 mo
115.49 93.9561 115.36 93.9351 115.129 93.9351 cv
114.791 93.9351 114.069 93.9561 113.544 94.4194 cv
113.304 94.6357 112.911 95.1201 112.911 96.0376 cv
112.911 96.625 113.086 97.0469 113.315 97.3047 cv
113.512 97.5215 113.873 97.7686 114.44 97.7686 cv
115.108 97.7686 115.512 97.4385 115.665 97.3154 cv
115.687 95.9653 115.687 95.6558 115.676 93.9658 cv
cp
115.665 90.5752 mo
116.224 90.4824 116.333 90.4619 116.825 90.3594 cv
116.901 90.4204 li
116.825 91.8535 116.814 94.4087 116.814 95.4399 cv
116.814 97.0366 116.857 97.7993 116.901 98.5107 cv
116.847 98.583 li
116.365 98.583 116.235 98.5928 115.732 98.6138 cv
115.654 98.5518 li
115.676 98.1709 li
115.415 98.356 114.965 98.6855 114.168 98.6855 cv
112.713 98.6855 111.708 97.6035 111.708 96.0376 cv
111.708 94.9141 112.211 94.2026 112.669 93.8218 cv
113.468 93.1416 114.507 93.1104 115.075 93.1104 cv
115.305 93.1104 115.415 93.1104 115.71 93.1313 cv
115.721 91.8535 115.665 91.2349 115.611 90.6372 cv
115.665 90.5752 li
cp
f
125.452 94.4604 mo
126.248 94.79 127.31 95.2231 127.31 96.542 cv
127.31 97.6963 126.402 98.7373 124.498 98.7373 cv
123.34 98.7373 122.597 98.4077 122.333 98.2842 cv
122.29 98.2119 li
122.333 97.8511 122.346 97.6553 122.377 97.2637 cv
122.488 97.2227 li
122.761 97.3975 123.396 97.8301 124.411 97.8301 cv
125.539 97.8301 126.009 97.2847 126.009 96.666 cv
126.009 95.9443 125.375 95.6665 124.662 95.4087 cv
124.117 95.1821 li
123.34 94.8423 122.303 94.3984 122.303 93.1416 cv
122.303 92.7598 122.411 92.3687 122.64 92.0591 cv
123.145 91.3794 124.052 91.1528 124.938 91.1528 cv
125.802 91.1528 126.325 91.3066 126.904 91.4824 cv
126.96 91.5645 li
126.917 91.9561 126.904 92.1001 126.873 92.4717 cv
126.783 92.5127 li
126.315 92.2861 125.802 92.0391 124.981 92.0391 cv
124.074 92.0391 123.504 92.4409 123.504 93.0483 cv
123.504 93.5122 123.832 93.729 124.062 93.8628 cv
124.204 93.9448 124.247 93.9658 124.904 94.2339 cv
125.452 94.4604 li
cp
f
133.134 97.3564 mo
133.091 97.7993 133.08 97.8511 133.046 98.2739 cv
132.97 98.3457 li
132.653 98.4897 132.227 98.6958 131.46 98.6958 cv
129.81 98.6958 128.739 97.5723 128.739 95.9653 cv
128.739 94.3267 129.789 93.0894 131.482 93.0894 cv
132.193 93.0894 132.696 93.3062 132.981 93.4194 cv
133.024 93.4922 li
132.981 93.8628 132.97 93.9971 132.948 94.3057 cv
132.86 94.3477 li
132.5 94.0996 132.084 93.9448 131.646 93.9448 cv
130.739 93.9448 129.941 94.6045 129.941 95.9238 cv
129.941 97.3257 130.782 97.8301 131.635 97.8301 cv
132.38 97.8301 132.838 97.4697 133.046 97.3154 cv
133.134 97.3564 li
cp
f
135.748 91.7192 mo
135.19 91.7393 135.069 91.7505 134.534 91.8013 cv
134.469 91.7393 li
134.478 91.6055 134.478 91.4614 134.478 91.3276 cv
134.478 91.1416 134.469 90.9771 134.457 90.771 cv
134.534 90.709 li
135.104 90.668 135.2 90.6582 135.748 90.606 cv
135.813 90.668 li
135.803 91.0908 135.803 91.1938 135.813 91.6475 cv
135.748 91.7192 li
cp
135.735 98.5728 mo
135.168 98.583 135.079 98.583 134.543 98.6138 cv
134.49 98.5415 li
134.521 97.9951 134.556 97.5215 134.556 96.3774 cv
134.556 94.4087 134.521 94.0381 134.447 93.4302 cv
134.5 93.3584 li
134.97 93.2852 135.135 93.2651 135.683 93.1514 cv
135.791 93.2134 li
135.757 93.749 135.726 94.3057 135.726 95.6357 cv
135.726 97.5522 135.748 97.8101 135.791 98.5107 cv
135.735 98.5728 li
cp
f
141.296 94.6357 mo
141.077 94.0688 140.597 93.832 140.104 93.832 cv
139.491 93.832 138.77 94.2236 138.662 95.2539 cv
139.983 95.2642 140.398 95.2539 141.405 95.2441 cv
141.396 95.0991 141.383 94.873 141.296 94.6357 cv
cp
142.312 97.3257 mo
142.26 97.7373 142.247 97.8413 142.226 98.2432 cv
142.161 98.3149 li
141.975 98.4077 141.383 98.7065 140.411 98.7065 cv
138.618 98.7065 137.491 97.7373 137.491 95.9443 cv
137.491 94.0278 138.717 93.0894 140.148 93.0894 cv
141.012 93.0894 141.612 93.4302 141.94 93.8008 cv
142.566 94.5015 142.544 95.522 142.532 95.9756 cv
142.455 96.0376 li
140.749 96.0264 140.454 96.0264 138.662 96.0376 cv
138.674 96.3979 138.705 96.9028 139.076 97.3257 cv
139.525 97.8301 140.148 97.8823 140.488 97.8823 cv
140.804 97.8823 141.132 97.8301 141.439 97.7275 cv
141.845 97.5723 142.083 97.3877 142.226 97.2734 cv
142.312 97.3257 li
cp
f
149.058 98.5728 mo
148.533 98.583 148.468 98.583 147.965 98.6138 cv
147.888 98.5415 li
147.888 98.4277 147.898 98.3149 147.898 98.2012 cv
147.909 97.6963 147.909 97.1914 147.909 96.686 cv
147.909 95.0991 147.898 94.9961 147.844 94.7803 cv
147.637 93.9971 147.013 93.9971 146.859 93.9971 cv
146.205 93.9971 145.701 94.3574 145.406 94.5737 cv
145.395 96.3672 145.417 97.3047 145.494 98.5107 cv
145.427 98.5728 li
144.892 98.583 144.805 98.583 144.28 98.6138 cv
144.224 98.5415 li
144.237 97.9644 144.258 97.4077 144.258 96.645 cv
144.258 94.9961 144.181 94.1206 144.127 93.4302 cv
144.192 93.3584 li
144.738 93.2651 144.837 93.2441 145.352 93.1514 cv
145.427 93.2241 li
145.417 93.7598 li
145.701 93.5742 146.379 93.1206 147.341 93.1206 cv
147.615 93.1206 147.954 93.1621 148.248 93.3164 cv
148.533 93.4712 148.762 93.708 148.883 93.9868 cv
149.025 94.2959 149.036 94.6045 149.047 95.2441 cv
149.047 96.4492 li
149.08 97.6553 149.09 98.1191 149.123 98.5107 cv
149.058 98.5728 li
cp
f
155.209 97.3564 mo
155.166 97.7993 155.156 97.8511 155.122 98.2739 cv
155.045 98.3457 li
154.729 98.4897 154.302 98.6958 153.537 98.6958 cv
151.887 98.6958 150.815 97.5723 150.815 95.9653 cv
150.815 94.3267 151.865 93.0894 153.559 93.0894 cv
154.268 93.0894 154.772 93.3062 155.058 93.4194 cv
155.101 93.4922 li
155.058 93.8628 155.045 93.9971 155.023 94.3057 cv
154.937 94.3477 li
154.574 94.0996 154.159 93.9448 153.723 93.9448 cv
152.815 93.9448 152.017 94.6045 152.017 95.9238 cv
152.017 97.3257 152.859 97.8301 153.71 97.8301 cv
154.457 97.8301 154.915 97.4697 155.122 97.3154 cv
155.209 97.3564 li
cp
f
160.136 94.6357 mo
159.919 94.0688 159.436 93.832 158.946 93.832 cv
158.334 93.832 157.612 94.2236 157.501 95.2539 cv
158.826 95.2642 159.241 95.2539 160.247 95.2441 cv
160.234 95.0991 160.226 94.873 160.136 94.6357 cv
cp
161.154 97.3257 mo
161.099 97.7373 161.09 97.8413 161.067 98.2432 cv
161 98.3149 li
160.813 98.4077 160.226 98.7065 159.25 98.7065 cv
157.457 98.7065 156.333 97.7373 156.333 95.9443 cv
156.333 94.0278 157.557 93.0894 158.99 93.0894 cv
159.854 93.0894 160.455 93.4302 160.783 93.8008 cv
161.405 94.5015 161.384 95.522 161.374 95.9756 cv
161.297 96.0376 li
159.591 96.0264 159.297 96.0264 157.501 96.0376 cv
157.513 96.3979 157.547 96.9028 157.919 97.3257 cv
158.364 97.8301 158.99 97.8823 159.327 97.8823 cv
159.646 97.8823 159.975 97.8301 160.278 97.7275 cv
160.684 97.5723 160.926 97.3877 161.067 97.2734 cv
161.154 97.3257 li
cp
f
165.361 95.4497 mo
165.798 95.584 166.793 95.9033 166.793 96.9956 cv
166.793 97.4077 166.629 97.8711 166.18 98.2119 cv
165.601 98.6758 164.825 98.7065 164.431 98.7065 cv
163.841 98.7065 163.349 98.6035 162.934 98.4487 cv
162.878 98.4277 162.823 98.4077 162.77 98.3867 cv
162.714 98.2939 li
162.759 97.8921 162.759 97.8413 162.78 97.4287 cv
162.889 97.3975 li
163.087 97.5415 163.566 97.8921 164.409 97.8921 cv
165.272 97.8921 165.59 97.4385 165.59 97.1196 cv
165.59 96.645 165.119 96.4912 164.452 96.2842 cv
164.103 96.1714 li
163.655 96.0376 162.67 95.7388 162.67 94.6772 cv
162.67 93.6152 163.655 93.0894 164.88 93.0894 cv
165.688 93.0894 166.258 93.3062 166.454 93.3784 cv
166.509 93.4502 li
166.465 93.832 166.454 93.873 166.422 94.2646 cv
166.322 94.3057 li
166.049 94.1406 165.623 93.894 164.912 93.894 cv
164.759 93.894 164.605 93.9038 164.441 93.9448 cv
164.113 94.0278 163.841 94.2437 163.841 94.5635 cv
163.841 95.0068 164.288 95.1411 164.966 95.3369 cv
165.361 95.4497 li
cp
f
115.08 110.881 mo
114.337 110.881 114.227 110.881 113.505 110.912 cv
113.43 110.84 li
113.254 109.81 113.188 109.511 113.035 108.759 cv
112.138 104.317 li
111.231 108.521 li
111.177 108.8 111.123 109.089 111.056 109.366 cv
110.969 109.81 110.805 110.562 110.762 110.81 cv
110.695 110.881 li
109.909 110.881 109.864 110.892 109.11 110.912 cv
109.034 110.84 li
108.836 109.913 107.929 106.007 107.339 103.678 cv
107.393 103.605 li
108.006 103.605 108.104 103.595 108.639 103.574 cv
108.706 103.647 li
108.771 104.008 108.836 104.337 108.935 104.853 cv
109.023 105.316 109.11 105.77 109.198 106.224 cv
109.996 110.16 li
110.914 105.595 li
111.067 104.842 111.088 104.719 111.285 103.678 cv
111.352 103.605 li
112.183 103.595 112.324 103.595 113.09 103.574 cv
113.155 103.647 li
113.167 103.729 113.177 103.812 113.188 103.904 cv
113.233 104.173 113.484 105.492 113.549 105.842 cv
114.413 110.19 li
115.266 106.121 li
115.671 104.131 115.682 104.09 115.736 103.678 cv
115.801 103.605 li
116.305 103.605 116.415 103.595 116.873 103.574 cv
116.929 103.647 li
116.676 104.451 116.611 104.729 116.01 107.233 cv
115.736 108.356 115.441 109.47 115.201 110.593 cv
115.19 110.665 115.168 110.737 115.157 110.81 cv
115.08 110.881 li
cp
f
121.516 106.934 mo
121.299 106.367 120.816 106.13 120.327 106.13 cv
119.714 106.13 118.992 106.522 118.881 107.553 cv
120.206 107.563 120.621 107.553 121.627 107.542 cv
121.615 107.397 121.606 107.172 121.516 106.934 cv
cp
122.535 109.624 mo
122.479 110.036 122.47 110.14 122.448 110.541 cv
122.38 110.613 li
122.194 110.706 121.606 111.005 120.63 111.005 cv
118.837 111.005 117.713 110.036 117.713 108.243 cv
117.713 106.326 118.937 105.388 120.37 105.388 cv
121.234 105.388 121.835 105.729 122.163 106.1 cv
122.786 106.8 122.764 107.82 122.755 108.274 cv
122.677 108.336 li
120.971 108.325 120.677 108.325 118.881 108.336 cv
118.894 108.696 118.927 109.201 119.299 109.624 cv
119.745 110.129 120.37 110.181 120.708 110.181 cv
121.027 110.181 121.355 110.129 121.659 110.026 cv
122.064 109.871 122.306 109.687 122.448 109.572 cv
122.535 109.624 li
cp
f
126.74 107.749 mo
127.176 107.882 128.173 108.202 128.173 109.294 cv
128.173 109.706 128.009 110.17 127.561 110.511 cv
126.981 110.975 126.204 111.005 125.811 111.005 cv
125.22 111.005 124.727 110.902 124.312 110.747 cv
124.256 110.727 124.204 110.706 124.148 110.686 cv
124.092 110.593 li
124.139 110.19 124.139 110.14 124.161 109.728 cv
124.269 109.696 li
124.467 109.84 124.947 110.19 125.789 110.19 cv
126.653 110.19 126.969 109.737 126.969 109.418 cv
126.969 108.943 126.499 108.79 125.833 108.583 cv
125.483 108.47 li
125.034 108.336 124.049 108.037 124.049 106.976 cv
124.049 105.914 125.034 105.388 126.26 105.388 cv
127.068 105.388 127.638 105.605 127.833 105.677 cv
127.889 105.749 li
127.845 106.13 127.833 106.171 127.802 106.563 cv
127.703 106.604 li
127.43 106.439 127.003 106.192 126.291 106.192 cv
126.139 106.192 125.984 106.203 125.82 106.244 cv
125.492 106.326 125.22 106.542 125.22 106.862 cv
125.22 107.306 125.668 107.439 126.347 107.635 cv
126.74 107.749 li
cp
f
132.222 110.067 mo
132.188 110.407 132.188 110.479 132.177 110.778 cv
132.123 110.84 li
131.894 110.892 131.708 110.934 131.303 110.934 cv
131.041 110.934 130.352 110.934 130.013 110.396 cv
129.816 110.098 129.816 109.851 129.816 108.635 cv
129.838 106.367 li
129.456 106.367 129.445 106.377 129.051 106.388 cv
129.006 106.326 li
129.028 105.997 129.028 105.914 129.028 105.584 cv
129.095 105.523 li
129.335 105.523 129.477 105.533 129.838 105.523 cv
129.827 105.306 129.827 105.079 129.827 104.863 cv
129.816 104.667 129.806 104.472 129.794 104.276 cv
129.849 104.204 li
130.341 104.09 130.462 104.059 130.965 103.915 cv
131.041 103.966 li
131.008 104.646 130.998 104.78 130.998 105.533 cv
131.456 105.523 131.587 105.523 132.211 105.502 cv
132.266 105.564 li
132.244 105.832 132.233 105.945 132.233 106.295 cv
132.177 106.357 li
131.631 106.347 131.566 106.336 130.987 106.336 cv
130.965 108.253 li
130.976 108.377 130.976 108.965 130.976 109.108 cv
130.976 109.861 131.073 110.098 131.62 110.098 cv
131.851 110.098 132.025 110.047 132.145 110.005 cv
132.222 110.067 li
cp
f
137.169 106.934 mo
136.949 106.367 136.469 106.13 135.977 106.13 cv
135.364 106.13 134.642 106.522 134.531 107.553 cv
135.856 107.563 136.271 107.553 137.277 107.542 cv
137.265 107.397 137.256 107.172 137.169 106.934 cv
cp
138.185 109.624 mo
138.129 110.036 138.12 110.14 138.098 110.541 cv
138.03 110.613 li
137.844 110.706 137.256 111.005 136.28 111.005 cv
134.487 111.005 133.363 110.036 133.363 108.243 cv
133.363 106.326 134.586 105.388 136.02 105.388 cv
136.884 105.388 137.485 105.729 137.813 106.1 cv
138.436 106.8 138.414 107.82 138.404 108.274 cv
138.327 108.336 li
136.621 108.325 136.327 108.325 134.531 108.336 cv
134.543 108.696 134.577 109.201 134.949 109.624 cv
135.395 110.129 136.02 110.181 136.357 110.181 cv
136.677 110.181 137.005 110.129 137.308 110.026 cv
137.714 109.871 137.956 109.687 138.098 109.572 cv
138.185 109.624 li
cp
f
142.631 106.594 mo
142.52 106.553 142.377 106.501 142.191 106.501 cv
141.984 106.501 141.832 106.573 141.733 106.635 cv
141.284 106.934 141.284 107.388 141.284 108.46 cv
141.284 109.624 141.318 110.231 141.361 110.81 cv
141.306 110.881 li
140.792 110.881 140.674 110.892 140.148 110.912 cv
140.092 110.851 li
140.104 110.067 140.117 109.356 140.117 108.398 cv
140.117 106.749 140.083 106.326 140.018 105.729 cv
140.083 105.657 li
140.498 105.584 140.761 105.533 141.219 105.45 cv
141.284 105.512 li
141.231 106.388 li
141.361 106.059 141.634 105.399 142.566 105.399 cv
142.706 105.399 142.783 105.409 142.87 105.43 cv
142.916 105.492 li
142.805 105.986 142.783 106.089 142.706 106.542 cv
142.631 106.594 li
cp
f
149.075 110.871 mo
148.552 110.881 148.487 110.881 147.982 110.912 cv
147.904 110.84 li
147.904 110.727 147.917 110.613 147.917 110.5 cv
147.926 109.995 147.926 109.49 147.926 108.984 cv
147.926 107.397 147.917 107.295 147.861 107.079 cv
147.654 106.295 147.031 106.295 146.876 106.295 cv
146.223 106.295 145.718 106.656 145.424 106.872 cv
145.412 108.666 145.434 109.604 145.511 110.81 cv
145.446 110.871 li
144.91 110.881 144.823 110.881 144.297 110.912 cv
144.241 110.84 li
144.254 110.263 144.275 109.706 144.275 108.943 cv
144.275 107.295 144.198 106.419 144.146 105.729 cv
144.21 105.657 li
144.755 105.564 144.854 105.543 145.369 105.45 cv
145.446 105.523 li
145.434 106.059 li
145.718 105.873 146.396 105.419 147.359 105.419 cv
147.632 105.419 147.973 105.461 148.267 105.615 cv
148.552 105.77 148.781 106.007 148.901 106.285 cv
149.044 106.594 149.053 106.903 149.066 107.542 cv
149.066 108.748 li
149.097 109.954 149.109 110.418 149.14 110.81 cv
149.075 110.871 li
cp
f
157.681 106.759 mo
158.476 107.089 159.538 107.521 159.538 108.841 cv
159.538 109.995 158.631 111.036 156.727 111.036 cv
155.568 111.036 154.825 110.706 154.562 110.583 cv
154.519 110.511 li
154.562 110.149 154.574 109.954 154.605 109.563 cv
154.717 109.521 li
154.989 109.696 155.624 110.129 156.64 110.129 cv
157.767 110.129 158.237 109.583 158.237 108.965 cv
158.237 108.243 157.603 107.965 156.891 107.708 cv
156.346 107.48 li
155.568 107.141 154.531 106.697 154.531 105.44 cv
154.531 105.058 154.64 104.667 154.868 104.358 cv
155.373 103.678 156.28 103.451 157.166 103.451 cv
158.03 103.451 158.554 103.605 159.133 103.781 cv
159.188 103.863 li
159.145 104.255 159.133 104.399 159.102 104.771 cv
159.012 104.812 li
158.544 104.584 158.03 104.337 157.21 104.337 cv
156.302 104.337 155.732 104.739 155.732 105.347 cv
155.732 105.811 156.061 106.027 156.29 106.162 cv
156.433 106.244 156.476 106.265 157.132 106.532 cv
157.681 106.759 li
cp
f
167.509 110.871 mo
166.777 110.881 166.688 110.881 166.022 110.912 cv
165.944 110.84 li
165.814 110.212 165.607 109.376 165.422 108.645 cv
164.787 106.171 li
164.143 108.707 li
163.814 109.954 163.703 110.355 163.606 110.81 cv
163.539 110.871 li
162.774 110.881 162.722 110.881 162.03 110.912 cv
161.966 110.84 li
161.485 108.995 160.665 106.295 160.437 105.615 cv
160.479 105.543 li
161.003 105.512 161.146 105.512 161.672 105.461 cv
161.736 105.523 li
161.802 105.863 161.879 106.183 162.35 108.088 cv
162.873 110.212 li
163.585 107.439 li
163.913 106.068 163.936 105.935 164 105.605 cv
164.074 105.533 li
164.722 105.533 164.907 105.533 165.629 105.502 cv
165.694 105.574 li
165.849 106.285 166.108 107.274 166.307 108.057 cv
166.886 110.243 li
167.499 107.841 li
167.586 107.48 167.673 107.12 167.763 106.759 cv
167.948 106.059 167.97 105.976 168.035 105.584 cv
168.112 105.523 li
168.286 105.523 168.472 105.533 168.648 105.533 cv
168.813 105.533 168.974 105.523 169.138 105.523 cv
169.205 105.584 li
168.998 106.171 168.035 109.047 167.586 110.81 cv
167.509 110.871 li
cp
f
171.64 104.018 mo
171.082 104.038 170.961 104.049 170.426 104.1 cv
170.36 104.038 li
170.371 103.904 170.371 103.76 170.371 103.626 cv
170.371 103.44 170.36 103.275 170.35 103.069 cv
170.426 103.008 li
170.995 102.967 171.093 102.957 171.64 102.905 cv
171.706 102.967 li
171.695 103.389 171.695 103.492 171.706 103.946 cv
171.64 104.018 li
cp
171.628 110.871 mo
171.061 110.881 170.972 110.881 170.437 110.912 cv
170.382 110.84 li
170.415 110.294 170.448 109.82 170.448 108.676 cv
170.448 106.707 170.415 106.336 170.339 105.729 cv
170.393 105.657 li
170.863 105.584 171.027 105.564 171.574 105.45 cv
171.685 105.512 li
171.65 106.048 171.617 106.604 171.617 107.934 cv
171.617 109.851 171.64 110.108 171.685 110.81 cv
171.628 110.871 li
cp
f
176.166 110.067 mo
176.136 110.407 176.136 110.479 176.123 110.778 cv
176.067 110.84 li
175.838 110.892 175.652 110.934 175.247 110.934 cv
174.986 110.934 174.296 110.934 173.959 110.396 cv
173.761 110.098 173.761 109.851 173.761 108.635 cv
173.782 106.367 li
173.401 106.367 173.389 106.377 172.995 106.388 cv
172.952 106.326 li
172.974 105.997 172.974 105.914 172.974 105.584 cv
173.039 105.523 li
173.28 105.523 173.423 105.533 173.782 105.523 cv
173.772 105.306 173.772 105.079 173.772 104.863 cv
173.761 104.667 173.751 104.472 173.738 104.276 cv
173.794 104.204 li
174.287 104.09 174.407 104.059 174.909 103.915 cv
174.986 103.966 li
174.952 104.646 174.943 104.78 174.943 105.533 cv
175.401 105.523 175.531 105.523 176.157 105.502 cv
176.21 105.564 li
176.188 105.832 176.179 105.945 176.179 106.295 cv
176.123 106.357 li
175.575 106.347 175.51 106.336 174.931 106.336 cv
174.909 108.253 li
174.922 108.377 174.922 108.965 174.922 109.108 cv
174.922 109.861 175.018 110.098 175.565 110.098 cv
175.795 110.098 175.972 110.047 176.089 110.005 cv
176.166 110.067 li
cp
f
181.241 110.881 mo
180.938 110.881 179.439 110.892 179.099 110.892 cv
177.82 110.892 177.678 110.892 177.012 110.912 cv
176.969 110.819 li
177.798 109.521 179.12 107.315 179.678 106.326 cv
178.234 106.336 177.975 106.336 177.274 106.367 cv
177.219 106.306 li
177.263 105.966 177.274 105.883 177.297 105.595 cv
177.361 105.533 li
179.198 105.533 179.405 105.533 181.31 105.502 cv
181.362 105.584 li
180.39 107.089 179 109.541 178.705 110.067 cv
179.646 110.057 180.588 110.036 181.331 110.005 cv
181.384 110.067 li
181.341 110.387 181.331 110.521 181.31 110.829 cv
181.241 110.881 li
cp
f
186.398 106.934 mo
186.181 106.367 185.699 106.13 185.208 106.13 cv
184.595 106.13 183.874 106.522 183.764 107.553 cv
185.087 107.563 185.502 107.553 186.509 107.542 cv
186.498 107.397 186.487 107.172 186.398 106.934 cv
cp
187.416 109.624 mo
187.361 110.036 187.351 110.14 187.329 110.541 cv
187.263 110.613 li
187.077 110.706 186.487 111.005 185.513 111.005 cv
183.721 111.005 182.595 110.036 182.595 108.243 cv
182.595 106.326 183.819 105.388 185.251 105.388 cv
186.115 105.388 186.716 105.729 187.044 106.1 cv
187.668 106.8 187.646 107.82 187.636 108.274 cv
187.559 108.336 li
185.853 108.325 185.558 108.325 183.764 108.336 cv
183.776 108.696 183.809 109.201 184.18 109.624 cv
184.628 110.129 185.251 110.181 185.591 110.181 cv
185.908 110.181 186.236 110.129 186.541 110.026 cv
186.947 109.871 187.187 109.687 187.329 109.572 cv
187.416 109.624 li
cp
f
191.862 106.594 mo
191.751 106.553 191.611 106.501 191.423 106.501 cv
191.216 106.501 191.063 106.573 190.965 106.635 cv
190.516 106.934 190.516 107.388 190.516 108.46 cv
190.516 109.624 190.55 110.231 190.593 110.81 cv
190.537 110.881 li
190.023 110.881 189.905 110.892 189.379 110.912 cv
189.323 110.851 li
189.336 110.067 189.349 109.356 189.349 108.398 cv
189.349 106.749 189.314 106.326 189.249 105.729 cv
189.314 105.657 li
189.729 105.584 189.992 105.533 190.45 105.45 cv
190.516 105.512 li
190.463 106.388 li
190.593 106.059 190.865 105.399 191.798 105.399 cv
191.937 105.399 192.015 105.409 192.101 105.43 cv
192.147 105.492 li
192.036 105.986 192.015 106.089 191.937 106.542 cv
191.862 106.594 li
cp
f
194.637 110.871 mo
194.113 110.881 194.005 110.892 193.491 110.912 cv
193.436 110.84 li
193.457 110.108 193.491 109.181 193.491 107.202 cv
193.491 105.78 193.491 104.255 193.38 102.936 cv
193.436 102.874 li
193.972 102.792 194.08 102.771 194.628 102.658 cv
194.692 102.729 li
194.615 104.08 194.615 105.44 194.615 106.79 cv
194.615 109.047 194.649 109.83 194.705 110.81 cv
194.637 110.871 li
cp
f
199.648 108.006 mo
198.545 108.161 197.517 108.305 197.517 109.223 cv
197.517 109.273 197.517 110.16 198.556 110.16 cv
199.233 110.16 199.627 109.81 199.748 109.706 cv
199.748 107.985 li
199.648 108.006 li
cp
200.873 108.759 mo
200.873 110.036 200.884 110.149 200.94 110.819 cv
200.884 110.871 li
200.37 110.881 200.283 110.892 199.78 110.912 cv
199.737 110.851 li
199.748 110.479 li
199.54 110.634 199.048 111.005 198.217 111.005 cv
197.123 111.005 196.357 110.304 196.357 109.284 cv
196.357 107.903 197.582 107.459 199.551 107.244 cv
199.737 107.223 li
199.737 106.945 199.737 106.749 199.638 106.584 cv
199.529 106.398 199.277 106.203 198.73 106.203 cv
198.02 106.203 197.527 106.408 197.069 106.594 cv
196.981 106.542 li
197.003 106.068 197.003 106.007 197.014 105.791 cv
197.08 105.729 li
197.691 105.523 198.326 105.388 198.971 105.388 cv
199.78 105.388 200.568 105.646 200.798 106.45 cv
200.873 106.738 200.873 107.306 200.873 107.738 cv
200.873 108.759 li
cp
f
207.751 110.871 mo
207.226 110.881 207.161 110.881 206.657 110.912 cv
206.58 110.84 li
206.58 110.727 206.591 110.613 206.591 110.5 cv
206.604 109.995 206.604 109.49 206.604 108.984 cv
206.604 107.397 206.591 107.295 206.537 107.079 cv
206.329 106.295 205.705 106.295 205.554 106.295 cv
204.897 106.295 204.395 106.656 204.099 106.872 cv
204.088 108.666 204.109 109.604 204.187 110.81 cv
204.12 110.871 li
203.584 110.881 203.498 110.881 202.973 110.912 cv
202.917 110.84 li
202.928 110.263 202.951 109.706 202.951 108.943 cv
202.951 107.295 202.874 106.419 202.819 105.729 cv
202.885 105.657 li
203.431 105.564 203.53 105.543 204.044 105.45 cv
204.12 105.523 li
204.109 106.059 li
204.395 105.873 205.072 105.419 206.034 105.419 cv
206.308 105.419 206.646 105.461 206.941 105.615 cv
207.226 105.77 207.455 106.007 207.576 106.285 cv
207.718 106.594 207.729 106.903 207.74 107.542 cv
207.74 108.748 li
207.772 109.954 207.783 110.418 207.815 110.81 cv
207.751 110.871 li
cp
f
213.467 106.265 mo
213.281 106.254 213.151 106.233 212.919 106.233 cv
212.581 106.233 211.859 106.254 211.333 106.718 cv
211.095 106.934 210.702 107.418 210.702 108.336 cv
210.702 108.924 210.875 109.346 211.104 109.604 cv
211.303 109.82 211.661 110.067 212.231 110.067 cv
212.897 110.067 213.303 109.737 213.454 109.614 cv
213.477 108.264 213.477 107.954 213.467 106.265 cv
cp
213.454 102.874 mo
214.015 102.781 214.123 102.761 214.615 102.658 cv
214.69 102.719 li
214.615 104.152 214.604 106.707 214.604 107.738 cv
214.604 109.335 214.646 110.098 214.69 110.81 cv
214.638 110.881 li
214.154 110.881 214.024 110.892 213.522 110.912 cv
213.445 110.851 li
213.467 110.47 li
213.204 110.654 212.755 110.984 211.959 110.984 cv
210.504 110.984 209.497 109.902 209.497 108.336 cv
209.497 107.213 210.002 106.501 210.46 106.121 cv
211.259 105.44 212.296 105.409 212.866 105.409 cv
213.096 105.409 213.204 105.409 213.501 105.43 cv
213.511 104.152 213.454 103.533 213.401 102.936 cv
213.454 102.874 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (iMac_27) ()%%Title: (HESSO-instit-quadri+and Arts.eps)%%CreationDate: 07.02.12 16:42%%Canvassize: 16383%AI9_DataStream%Gb"-6l#L=XN@+E'nIGJ<VkotVRdZ09Xj)G`7WijM(98rs='A=f/;ojXZ:/B^a\AUWUNqlFZ,)47h+pH"h8cUGg^Hi=#N<]>2uj3A%E;15Vgq<U\k,[*Prd=>2hg]e1;nbl<?H!P[Ep1+g^A)WMs7tXPBpn9P?_ZJ$M5a?dJ).[doLc_Je`"3r\+^u:*o;;>h7L/j&+ABt%hEJZ%p\n5qLVLTMF7nj#J#7-j?+kW1I!kh#X...2pOD"IZ2_lBa5cL+LZ@-5:TlreH$AWUo\kii+(%6]op_"<s7YsM=4C=U3<#&@%r53l]MlObR!rg5!pQ$E2HMAL\qXE$"51/!NnO<C$s8D&sLCZ3QlA;E6*e+(YT+2t#IsCk/'bKlW?&*[dka-3h^\HXa2o#C[Dsjd&%oD.\@iX`f"GQ)gcQ3KuN:cpAlrl;'`:KRScma^3uWYJ#;.h9p\I"(Uhs8;BZs82i/UL*oF?g<a0^&@fle[rRopR_2]i;IeuTjHiP%Y!^IuW^JKDJ,f$1p#E(`%m2#/f5$h`i99@p\!A:uEiE^.Q"ui?8/(3jCFo"Ue3XgNlW&(f+nEdG\qa(b+9(saR]lV?Da(g^rtiNI%mp=npD!g,.q""+Xr;`!OcH/lXk+=k%5.pd1S(A`q,RL+rYQ"Cc<tCAAj73-=nJ*Cgn]/tJ;W.;QhYm9/!tjJGa,_<K^O>^SX(Epp%3BVfapP3rJPA&m`?U)4!rS&.Dj(G?u/+7Pnm_.d6&'Xf6Ig"Z46K'hs$WeLldC-NVdK$:7A_%2ch&!i$\bb^*f7/8Jk#XAkc[>=N%>6"*[oiI?_C:J$LK84L'QN,e?9:oqn+$Mg"d4l33++?B=Th5(QQdW\<s$G68k1+7aSIb+F#1oe82\4E%gK,J'&RJp?=9%[Hhlgqs%rW*/jk[0;D=UKWONh;)Z6"@k%)"DI%pbkV;p3=O1nl@1f<=5<i6)daYWg)PklKfO&H:Ji>G/r@NUK$\1Ktm*jV%*`p3ZRYOiIGhV%#F%4ina5jK$Jmrfnbqu+mmrM9^X=3<;81#=p3e4_`D;`8R.(cc0I@a<I"r<m-d#gbpk`u0-KJHk#s[s5&`G*P&j/b1(_M4+h"V=,%`e65RS'jJm@9iSa1<1VI2F$E9i)m33=MdjZ;arCQQbH,MUil=bk/^095Es%[n.R\$%*GO14..i$7Oa;BAlu8]mp^\>M'n6WjrZga%kCDJ<8n!,B.C1F%,']CHdA#"gH>`@bF!gi!XJ;$<c0uo%QenM#dP#<9C:<r$'(uiI0KPt&N"0dLW9%6B%mNo`kSrOqSB/>;M)#q(%mL,e+iuPt+Zlmk81i0O.e:sP&V$JXi?eCkUhPGFJF_OqHL7[.Yf\!"g-tTMRmIIu=0E7j2_O3a81?X6.WStquKRP;Xb<*<hN*@ZB%)4i2B$[!EE:\qu`PD5%Fk:@R<k<,D-L.T$@Z!i'gr`Zp3YIs,5j+$hU;UOgF&EK>V>Q/%C_nZ"Orp@G@=Wm=Fr2WhhkAU1JRQS&k%D)_F&hodtM\,<kKOluOErp@G0]bSWd/cY8,jE^`jIr>/tH&fGQ:RP:0[O:lFisY+5o'nX)$(&WeqLnmR*,ckV<1`ToV;lF'P;32t%,e'Ta+9JlI6j>"rc+:"caj08@jBX9)Ik.=+.Fn"NRV7(PQ`J0e^:0X,/bAQC]p7r0htN[L1tI*8s85$"K0X<!I?jQ^.fI\?*Hso@%J=mu:c[OfYqZ;9/4kErcgAF]\Wcun:^?o.<`FnZ(J)0uH]o@49hcKcZm46GsmAu/omJS?D\HHf;319da48JGkL6Xpd%qpr,o[3he%MuWJZDq6`0d=H;4UB8^c@5ShsT+rt<8jZ6(c1s_pmJ#i?I\#GN&"^=]Hg(\t;B,?6rC`pKIf3$6Do9i];6U!SA(F;@>LJ<"R1'rb%AYU)ebL67TMh+16Rf"a>PZ\WhJY'YIJfCI-Tp?FfF(-!HkC(sEFXm]CQ+#kF/MkZ-fo.XKGJbCbEGmO\GhRRsrbSk",=Xf[8nmV$%QG`ITDj7V,d_gLji\hS4!mJbp5N\m7N);eLqq3X?&pRG*EF<V0NKaTr0='NGQ9"t>r2+NapuJol"SK!%Y6L:*\*k-iCf[PKeqC>2%Z8CNFl0$!HolE_d_kBVubQ!Qro)9j519DGg$""%KgAa/CmdD#78Y5C1<i3MLe<:Y1df8<[#>'74Ii>de95_;2;!i_j]E:X\<^&Y4%_;F%;qAJ'?1inPdXD]'N$\#cr\PXWFGCtq@^]g51',u(fWnUHWCh8c+1X4S.TKU@mC0belmfrC2h?8S7(Vm`XI)CM);l<T9^)CJ#%Pj[rT*_jW8I<!,P;_AXlYbhm+&R(q:<!jW=M`e2,U6U%(QJ*!DLRV:Iq6XU&ei7r1+Epb-9cinaj?JoMmZ-2]O5>+P"dVh'4=34V%q3#kjpeg/:M,`Bl%5QI7]Q7Cgl8b!glZ_.Xbt>\)LWZYl2(:2,0i#Vi#[Y@%prT%2%)ru;jC%"J11nU(R]SJ.MH>:ZP8jfA1J9<g%'Lt1]I=uX857dB5rGh.uXFeGp2WMu%hYc6Gia1N>\es;d]9(@65/TWaWN@o]o>p6A6htT4g?\95Yc@$`,#dT?i"L6s`3;+jFV.h8%ef'3^UutXBI;>tPld-<H4n/;fY@HKOWjTOk?p-RkB?eKW8\'`IKYQ\Snt4d>K"7^R-`n@j,-PRfIsEV!UDKHaDjFjks.d\8_[_a>%O1t)GZbEP!JeFpC;NnJ#[*0A%qYp#hT7%Tb)Qfk3^&5<=If4VA>GUh5gkXqD_L26RDd&'pnHULs[Qu%"^6K%jmX/;QCp$6*K%_P4%:164;eq:k;Bt2I!ZM*tYKbfn_c7!(L^V],J5Zk`V$6#9RdWhJF1q9C9N6SXp)u.+nRc2.[:([dshpsiD/>M&ANi1nSgb#jA>dEbO%SDV59JJC,@Vf'72D")MugY7T%Y<8l\0s'%6N?aH^WqZ`JRrU&#`a!CmO25BYdc)62.-,?SQ,lG+dY?#C=8485GoV`aYVkNI1Afi%%4_b:MI;T_]g9,k1hq$_E(TaH;j3Z.@5+L&t;3>:SAmjS-UR!KMSBA?1eleDUXhfTq3-UM@Z]2MaX>Fq$Se!ikcIU^)osaU$kPM'Y%X!D"_eC9&6R[MG%ht#7=PFJ$=iAdWJZhYC%$!AQ1b?Elk"`*dM>Z[gHf8_?"PB)FcYZb[X-H;m!^r:VloSbi9NfNd@)3++nhDQG*%2,s*p*-389e>Qktp/ZL>L7PbTg2d#[QH5A,F)(%8.P8t\c/,ms[blZoBL/unkJ%i4h8#pN5FfBoE7cTMIs*\/YQ(uL<CW(QG^E?'%Bkb%L47$*PYcADTB$:]H:>%MJqR\adCE"hV``i98521!uW2`Nu1sP&sOY+>SpCCp0c1sQfgUCU0cIgKR2l5dD9+*UP+,"X4:qp`M%AR-*O;L'-U?"^)G:".GFO#R%6HfE&Z?Y/N$`Um,mp1ns$K1BYF.4!AEq$_&c#E@24=r7F-[22<3.rT=9CC?Q%2#3!;N<5u!3fsc-%L;2"a>;[bR<!I2gq\)"-\4-@Oj!)f.gc.#OIb%(.HaOf'`hn^OXT+CWa/KMB:!7i<k.<6oS(b_WcUMN'<jh-CF!VCda,(kck32X<%AE+`FS1/=@CdW2]lh;@3K`)FFa2FkHIc?BqN2'L8+WShB(]N:K8]fbiFiDhV\PG37Gg$]?1i1FMBeB=_hGM_)gkHmE7SdJr(ku&5%f.E;s]#@QC*@pVG^$!_*L8Z2#qit9%fc+O7L.je4FFR9%8o8)*2gYaaFP+t,6Kt8a1MZ!Z(YrO<RD.j]:6AR=b:Mj/mk%T#b+ID!%XQc_i.=\PrR1a^-Y8[@?[]I,k2CB<4G@,`;pZ=!E.EGkO[nd8_H#F9'^O,_Kna2t1]C@h0oB!lFO'bO>#!`.X2fG\flSf*2f_pQ>%Bn-':j%&t2+5X^0q"6kcq:"*S0D8bdrO7Q_hnMP.b+GkdqeuN#iVp_JYC?"nI_C1(qY_p4P0gNNq"!J2%hI9q?@VpsDliANO0@EQ%H?[>IHMQ02^\[a#E:r_h+!0:PTl2$O;]jm[>^c;>2m8fZs'Hl4YQ)No;VC6:5>d8=<8uZ%\UF8%gNQFpo'L]a;X!PnVh`=%?[n'X%p$[[:=)Yf>r6a-RhT#*Ue[pUi"@(W/msp3q+9$;'oD%h;X7tfU]DXsH07SHFl7;eHqWd#HUNq*6[A$"ErUtu[]LQe^];qEF+5d+[%lM#5S5(3t`L_q@i^])]S5/'N;qBit5p\n[1ofIW]c#;JF-GO>S%p)PF5J6t/Q.j"Mn/o,".fCBVP"&ckqsaI\#NcdHOT3+U*F:lm%^*_S5qCf&@^I*ABZhW7OeFJ#YoC#KTp@e%Lq^2rErB9KD*QE7%q!dD&hg]lqqPNP.Va%kDo+dBJb<3#Ao^qP"f5KQ!A(PH[r8l"R%^DqCY5E^P'7I[Wrh]SE;e]jTFl[L%Nn=$0PYCQ?DB+JpPh7nD`r8hhfFQK[Je]h1-J)1'i*A'?sCcgGmpW%`!a*K;WHq_S*$qGeh%GK7>-]A's8h9FdTY2?Y!H<9P*?+Pr<iQg=hS)E`.p@`HPF1]3S[r$=nDp*"39t0XNgj8`m%X3]__r5Q%b@<cD6TpZ$5,:P.KS)LN%k&PNeF*hu<\[gDNoUC#&Doteg8N6/dh"VhtgE606qcd6-Dta'VB3hh0o02R%5*0):L0MFY\,FZlqS)^\HL7QlSpKasqsN1Ch6l!\%BK*:lp==Dh[Xq5E(0bIdOlf[4l>8]6S%>f:[T[IG\Y^9\W4nE!<pn+I3L$#=0>4_j9.@EI&kaXe\6V;\]6p(Yq'PQOcRmaREm?,S%*4!n$1o7g+Rh"[0m8He4ePoFA.E*"*>nW4g0&FT8]SZO<A)"uFRi*Zp(o!'D*5c'l%>Sm9p7[6WC+(6\'Oh?a#Nq0IcJSJN^[Z[.%IIku*T<[qQKD46igl_>d#ht@Nk%MuA39lm+\fG7'rp.kuW7]C&IIY@IGP(B3G#Y>9ffd#ii;KLI7oW:"DE_',W0'Q/mA\J821F_L%_,4hHFXg8O$?`XOBD9p?"*OT\(QQnjBEF/CnQ&ADNJ>'C@391XGO_%?Td(+P&tu37RMql8:M;g$qX2cd4$mR&ZmJ+Xfb'epiHn@F%57mh_o!(0CO?aJCBS$Rc<20cSe&38?!q4::3h"D\':WZe$\F.I_Y5nW#9n]1>s1)9'G6-VYjGMJ;At\ASk/$0,]qXuh%<3^,-=6Y%<f#6DOkcO!mm&.Cf8k8K,T2Cp'9Qt]Z";;pE^]OmgAh.sj+sW9&U,EC01>/dLji.<Iip)J]/^oP0h!5I8Ald-R&(DDm"out`'eg]%"8j"-3%GVsA`C(CgPG7j`-qs0.GZ'6*3j&tp.WE%L"NdFg[9oH&&cJ3A:Mrg&o//dM9X5(pmjlC]MD7c*'fb8Im'Q[n++eSpWr7H%^CK0$Zb$L'5Q%kB4Jj5#g$u9D'7G\\GPL\Q5BZqk[ZBSnU5PY1Mk?=D>qUk^@.E0Ch%Gq6O'X_fgNDPs0,qOj](+gINSSd6q!lPI%DS'fapgmsE>rR61ZE`/e)kU7kr1j_pZaBL1>-,lCd`&uhjp<;/G"AJpSATPXm_8JV`U@^$n,+WINE7`\`G`8%(M_iV=-hH%o=_du%c7(J-Xfn:D7;o\7E*.j:rY<3,\)7]*:;3Fm2n-[a1aDIph08Y;]=1QHAFet,e(Oms&oeU4ON^*:s.XrDJ%U50G9I#K1(hXkQ9PWQ%h!Bj"DO@m+9OI@)qPjBAqT8Srf'Hc%O4THIM9\OhH">'^c`MX+r415$?9auF9g=n-76c&f`136g',.d$m%<I%C5bRGo"!f,XaUcX%\^A`P7sqOR?KfTDnu;I7r5ndiABO,C2*DkOqQ;o3K9"/EG9am=r$7mRrp9=,p!`\Gb*hI7VB2bGR8eSTUU(/m-%D6+5>,XScMqH7%8:LNmSpV"qT:<15hEG-ZR@eZrW@+<Ynkhm1%??l>[H4Od$"omZIl-TLC2tg(Xe34hcgAj;E;J6:UX%3bjO;F=mGr>#OIb-BVl&CO%V0Qt&Sls15#5@nJL"_bMLSN44rI9k$IjjRM5"GM-TCg_FX./+uMm0VI(B\ugIg,X+.5kHj18?bD2Xs*D8gXXsHItqV6AJ%&7^lsL%'Q'(P*$Cb[X<W[7/7tt2%&p;VQr(QXk3S]lD6hN"rRa.ZX.l_YZ=;PaC$Y"la31M8[^Pu%;EP6-pe4ktJ$Ps+$?%GDh6@#hl@>i=%U+G*`7l6',rKs1m>0!:O6Y>!@kY,EiJ"k5mC;]W/B9Vt#PE\ei74N,M_3>%+$)"r7N'CHo0`,bHFQ7E'De8@YerupX1Clqj('YFJ%p77/SA_G2,bbg"_\(mrf\Por,/BOtQ3-!,mPP_dna4r#c[Mt`K>ZU[LR&W5H2J=&ZI:*BeN>%T;_h]':"X\I<q&T'BB$(AG=/LId%5\D\L++P"7bRNJ8I#cDc:,R[>g_%MqfqBHMNF/)V^b20\##'(o<sg]Oc#NE_!rTA+X9pY*n\EtniNC<nW*@R6<W.=%J6pI_S_;?H%?p3CP0V'j7cHJ)V'>$8@m,lW`b_M2"]U6mS@54tZEkYp4?SI`u)9TQ)_dI6\XP3YS\)/\*Mo*1i;9pn`a-VbFc^Mkc'.s$C=mT0b%Q$?`i#LgTA"(X[erBONJX@>BI[nZ:K$g;XX:>Se4\*h]A-RFMV8t8cW68)8%/`eXNo&_ff>F4!^@s7S%p[LrUpK&Ho4C%i'=201X%lHPqCY40C\`$S`D;]B0AXi;Q&3o*i;44WXLCNbVR\%Ak=rEZhCMu)8tS$o=Ml?D-[iU+@)Zhg.J4EKu4^UqbRG53,Dccu%60;!-S%*A<QH;jU9_5'ct"nVPFZ"kAW_%8jF9^=P!`J%*Va0KqGhg$qCGT>#^,nu:YJk%EMtqU\Ya/ob.rN&R*<;BF+dZ;,hfZ2M37hhQi5%oChjhrr\\EhV8e%XA;f2pc557B>%oh8\6;4$T*.;c/L@4rU2*$^JEK#B>B_8A-nbOikB^2k,X:3=!))jGlRH;G?"%KH_U(hi2_$\%*/`@%QA)C%n:3':oL(kA\83G$X+0q,5Q5m'o7%AADcc2gf2r"K5Majk%0)ZDVI++U:\Lk)?9JP/?&#-YE:Wp]X8cheC9$'_J"ju.%?*=1H08(kRJ!/M85N'd>oudo4*he)bej?WJe(V=]@Xtj_p=F#Ei2?86P-<W;+Tng"HsZ-sVbLh$8KA";$`14jQ_-1lCaT<C^fm\V%P5uW<$N4CW-hN*XGG21_o_&b<UJ,.n(Xl$R-Gg:f,*[H6hc5!?<S:`>s)@g=W8kA^$)QpuAc6WAfC)kkT,'Kb#HdH5$nF`/Y#hc_%?F.[B`=j!Uf>7.M]f\G"?fuNjA6S]?4jF,.ckP)@"mg4EM#A5@:TT(0/d2=LWJ488+(p.dWDd:4qD>t\NV\m[&F=Bc5Zi/S<+(b[%&#`-4p/%@ICS6WNc4)**N6i=;6mnb-[nYNVe$<"-,GM)1f`=/`M_Y*'8VN\!_pH'>S!!ks;V&jLj)q9]E&0,8`S/DU3$$USemMPP%FBiTaK:S<n;62&IEa$c.Ya.,uBiuAW[@)BpNf.VPT9!b>4()7cFBiV7!BV_\UKC/=jJ8<*@4aKI-Y7-'W%"7\(MH!=R'3p!_6!"f%\CRqi4"VtX=A'"^[%*+a/SVH<Z==;<k&E1aJsOkoX[U9P8^Z!aX[U9HD2[ZjQ@_/#gL?rX9>N>agS2W$^=R&VVZl-N+j_fTZtgfe%bsFf$Z'W*=1=.T5lZFS`=:6![WCag//!<-Q5d0k.An^Qj7[fVd>$'=]"*RSnHG#OaY`lBDn[7_6S^o:nfMnmo/U9B4j/I037\aVf%ZBR6!C"\(5V6%L.bM!(M729>Z:O?l?D=+GsMUUFbA]G'Oar8RWZ@fqfb1\8pZ=C8>ouc<l=rhG:19cbTetR:t@-!^#8%+^@fP+J-%`ELi#Ve']ZCKZ:\eLTJ5<%B(AGri7rYIj'DA$@6&l3.5nMN4s5'X]YH7E85#MV8W-U1:!s[E9'38p-Y-nF<=M%F$BhPe=c3`dN+/%k"j(1%@qkF9h&'6PUf]X=]k<?c$7n>&06.tlcC3E3mjPB76hj=C&9m?FFWuHT>(0$]=X'j:,8nU'e6<E]&L+1pt7!m?^'S5HG]'6%9nD$$H2ap:ji0sL(?--OR8'OD8:Z*T(Lj>MHGXJ<<L*Bme3ksQ:$8Vi%,I.Dqc'_-Sun]\854!66kV?%1(b7VZL&5.kJLJZ`o5sT%9/Lm>e#/&!1>c9(UFs&:[Q'mL7=h_n`n6.nrh1d8?cfK6K498Y'd3bgB$Rkg/C>/RO83oeN8<!eCEh<$7)>V><N=?.Ect_]\$#Bh%ReV"7IJ/X[SW'^j?"0&4<M%%mmeSE-W+VfaSl$ji!#fKR#!b4mFp[6fZ;d.'NdO8c7[HY]]<5-p7Y!sV8-C>^R$j`Rajo_@Fd2P[%cmU'*jriWc.+%Zsc%7b2Sk*>i3lTbpOX"BK;/d(n1tV'[)k7qJci+0tcT2moQo5bbiBhJW=W,Thlm(e3dM3nBYU*n5Cn'ckA"b&h%o*@@Xas?^nOm%'3o6%4`j<L(b<)Kg):IK(GR2qL$[T:20>@*?&=;`tP]<r*aH_rAOC%X0TL6GMq)C)&:`W@rmh\77knlk!"Q*tLl%@ME;.=\;O;h!^M.0e[=1bV,6qBeD2)Q97fO#5AW7$4j&!dIk@I3U'Q:M^2P"D$Lon_Luq[`6Tf_0<g8'P/pi\fC9"VR=96-E7[m_%L4CkZFbQu.=hF*QofU3g2p$D%bE,h)dLr4gfiGP88;d(=8dO1S6e(c\$:m:^7>MG0BBu>qe=3l`-tkh>W[#&?]hTpiH'.CCl+lUb%/DEL&&`Z[8490(gFs=uU8t7`jPH*n[C_9Y1cY+;`:E#mP-=DWX?m(fHSd1[Y9c4P@P6Oog!)$$-BX-\42j^rdQZsgO+o9mKfijRV%"(>%^J:WeX3t=<nCX3%6C&fCP&?cq):VpW%H-ck:8M`TnY"P,8G(/2m$$>IdR?HLuAm2\SaGa>++@Nu+MXLp\iD"6R9ksf&qPI2Z%WHEBSVCf3o$:o#LW>%p8V]&L=EXcn5&lji@-b@U_j7KpAk-!1GO_)&-Lb2\pA\"N]1W2]2Lm<6"UUM.'a]gE!%#Y2<T";:d:'B_@%2HigH-8I.<?^+,#'%G#K`@X:-?mer($Ku)saRDms=V8#3^R]3RWH"[jPuDQQ<Ksjf#!<a><\DgZ6oI%7=[['g7sT`hOCaIM^_R%Y%S:b^3/WiJ#?9q\O__<a?KVB7P8CSodYoti!Lo+PnaWA<")V+/ZXu<QiDF]P;P,=+*a-/VAP<m[RU,7W?V2\cL/)l!*`GI.<:i\jW%)c`S>`'_WN'5[>S?J-**h4l>?gf;El%>iVu2O1W*'/ie;U7J"<UuDqeB2qrG"bmYV7)rJm:oHQ%3E,XG%JaP27'iP(/LG82mp!.T%_+h<.65?s2[qq%nE5AtS-`0VJAD(d=Q-SccZF*f_\\V1PVMMupM5785iQoKW.f3b*SS7o.?;gNsgfE=1@]RAL.QZ+"U8*p_ZRY4>%IZqm"U46*iMZU&=2&4k\el6BaX[Qqna&fC2RU"BTekoMrTk_B_"sid1m+r,Y^Z:g-_Ii15<Wc.]g6Jon5SMs#.Td2#8Lb$f*p\Oh%aH/dVD#6APW8ZpF19m)6gEL>\nQl)9a+o_Z+!2T]?[_U>?@Db@p?<$HlWjLrf)oVo-0p[E?JO;BqiNt(;@@gn:28Y$5/1=dYYuFL%q7g77jQX"9I!ao?%_6IS@r2,o;d+8(45IJcqSHj($+?8j`%gmd"$adnm.*JL$9<=!)je[d,DE0ZCp1lM5R<QMBao/lOFpAW5^4;H%;g-CO1"CS=FQmME6M]&,=`6-?I3Es==P)D<W?_sr&O,t.16Ylk`/;o(MS;>&@E@)L_"Dpt9jQ(Y^m1)PfPt>+\OQ2sQU_?u0j_?M%G__0':':!!%e_2g+^kR#I1ThV;'Tj"Q##^i.^C9=K-+"-ATlSZ+<;Y&LU\Mg4(<83-SlHh<`Np0m.Vmd?fZo/,G<>FRa'<IhuiWa%cRlY_o`1[?OF*[a7*nD:/I@MueWWOtDFJBUdW7$trQZ[G'$JR:m1=,sn=XNB8_itY7;p=2'WSm/7%i_-Z^4bQ[DQg*GT)*.LgkI[%,ZoVk:Z#Xo$b0!\`_Y)^)fK07<*2k3KR:?EkS6FhYHdUR1c([iSfb/b7^LCPh:.]d*62?\LbK>`"*F&U$X'78ipM0-n<<,cOh1r4%L%!uHJFSK!.riPX$=NcPXEEuWB-ntY6pPQBYF.!lI2RtlYt!T6oVJ4]Usu]e+*_j]#T[eiI3iOj4q@aM=*0CHXqo>,#FR./)Gs3t%*%E;"Acq]aR<1c)B3+A=1H?$s>iHsc6'Bk4=.$kMmDN61qZbToZOS<iK`a\hRetBb5f7e6NZ">`o\:BC6Yt+`NjKO)QbX5#=JTX'%bQR8_VN\E*rjiEZ6UF1=@t<mhYq!u6e-dtoM9n8]B_&COjD4%m`!jGW%`Al[H@4Z(pCYU[&]DNl7N*$pO@N+d*2B6N`)S,_ba)s<%;<EU@_%X^!N6.-U(.^<[75KUo)e\@m.1;gTWDT!FW<iU;j=KX;]o!H*qf\fXLK,,d^k"?bkF9uChFO`/!Sns45dWB[jOu+4D,!8)%;--.p,SjP1B&'9;Gb:%C/@,DK&3_r9$YH5+PuuKYY=Y<HQSpK6#eiG,%ipQH6D+lIbqYrjM3fnAH,41(^oka6M_$sl"DTQLWO552%0,9o]^Aq[Y1,b@?m@k.b@:'Dkcp9OS(:^l0ca)fL13"+Z;`>X=PN]C%ZOYYUJjN'VaBq?9F;^(h:MB3r>4jH-85'9QVoLs8"@cM!%H><S/2F,MV)*EEl'ZtfU/eQ\>a>8GB`e3iTY(MgL:*N$@aS9':ITi,M%DOE@^tcR4K*2E4@0B5p71h1+BFVmGF7-hi\2i0,/6Edp%#m7uuj6%]<44`IRA--Lh70cc!.-ZLU;4gbL1=.p^C1_@tQR4NVQ"+5@0oM5NVp3Tjb5tu+Xg"n%Ffi3kKG^8%^H0\Q2btE8b#Fc4%'37JLVi/23,oq^Led9b::p_">2'e]s()-EffLo^6,hkjGFtkbG2XE.[@<bIYot1]%DZg9PHa9J2<Y<fYo#B`%/RF6>L[\j-Wg7@R%6Q?0X_'l1@![%&nWa<aZmW7;\Ds-)]a-8Cra[C'Oh-,io)J^^USaK-=%dmgm"4`f!6Ms3t)mXF!OQD[5+gm/l(.)co&gT\d3H=&L%#mnEge<cgYIMTm065hltFUMPb)2(GDRd`3ePo^XbYL%sN%&+.s@bFP=""S\W"=<s-@dRnsb3ZpDCXS=\&^CO<T"#8<JR&_EIHN.<%oG([B+p=9C@l=Kq`(c'RfN+[1Yoa";7Gjau7cdL4g71P[ND3pm)4q*'!Ne<rWu7?@G5$o.Uf9iYfP)]^k(;rZoCo9)n2oQ[cAQkI%]O0,"\q_aX)D_[;88T2(9dLmtkUS9L4E"-fV:Q<K8`Fl3UhSdJ5oDha_3;hQ'GI`5p5HRN;FTebVus[P<Is7D0[eOj=slqY<`88]%S,t.iCjtP=5rooPD$.fC"Efu25?O+OUH>U;<>K;i;gu\n:t.7EXX*BWNu\%;X>0p\H+`,sNh[mh;AF@_h)AgcL[\*`aK(*TR9+Tq%:n>:P$&f/a<$POYdnRO620=o[(Qn5sHbHa-N`D3=Kkc;;8dUMpi_K%YFN&hr5kW"d@M]C!?Wd#K1"m&<M9E".rMBRjO[&t,&W?-6%L,sr=YMeQg"0@2^6<R8AAq\B-*7T41cBK`F,\oK+n_b:cK_p":.Yg\]dF`_a,-%jAr^fe+2VONSLiu)uX,Rg3aFtH$RTOE56WcI/%@(6a+Z%,^gplS*NFkA*s)a&YDHa!T'2]*pQaX_2="d.[<%bkm*'!RHc<>qf9d]OP\#7uui418m=4I^9Ug]m:,&Wq%_@q!3H^]9J#%/JU&X@)B`tC)j(p-62nL',q!h_kfd56sX@IA1P1#M%tdGOjr$"A2=^"lH,pQM&f)t$N.oV%7%kUK">t5fp%+c,t^)%N(l<';;^'H%@T+mFHhP*VaJKr>)!`L%%\%J]ZRe!eRrVY+3gd]:jZla3.;s%FAP?UrSH1Y1Lq3[!a,;AO(Ek'.RUp<X&P"f/G)#LFTKL8j_(m^^%2N#EGAQ+U79kos&KWu:Yd"'rWDSVK('bGIJT<,N;s2qcGQJX^lS3[@rP,"U]Vg8U:G^pU0pGoGoJMh37[!$U!ZF*0HE6jg!fTLkt%8KiuoT+K7&Z&6)Foc>'JYjBl&&K"a]M7nSh)R5BK?>%rQ6`X'!s6)iWVOllpP*ZV<XBo]rH84K*Wp4ha%67*piED^E319?SRltX9%-8].N*$%Qq`e`a0Ne:Or6G+VLj7lcB#8.\da!F^Rq&L6n7!HTFK`r"R3+r^T>;L*9@F'qTb)%8Hk;4i25n#c$+*@K*2PPGl>sk-R%H=Pl#!NVb`UW&\F*^3<kEp.BkbJM](4]A9C\WEt4p7)sn<RqbC\Y),p"iZG:@"u:W6UXnj_b1&*J_-aB#$c`c0#X>Y@MX5H^b,tY%AhiKnF;aG'K=kn4T"^o=e2rU<&#5s$n%#BF<lgHb3dZL'.3Kh<5S4DE:B@n+HNf/G!WqD4Db*82S2I,ZBXpg)'a7e;Z<B2L,I'+*%X@ST^%Y5dcFL>:Y0TbN?ibZH&2q/I,[VNOUFpprK@,'&<.#[@!lE<Tm7Dq?T=K%U%PkMojd1Ok/6&a?U3".;Pe5DSR]rLkrZ@lg0%e>[Dd"Vt<!B2FGi![77?N2j0*>M1G9_JcO)'1qeGV#FAM,B=/m'U<'%&n[`s!l6%?Qs,0*LA(m`GRtHa/o1g!LPb%"$WC#VSS0cE%NB.V!`m)416<rlY/7ti)E5?LD5Q#/rQr+)!"gljBfRsPbA[#)5!eH3G3iX!s6S0Yto=AW+F&4G@nM>P3fOOGcR#\QYhKPZmB1k(s%0nD+,R:(3TVT.2"X_%_s:d:TGM/9d-Y(E6<@(VDQSO#_&HL"\M<Wa(F[tjE=.E0EQ5uiN!"buV,R*L$u"Wkn'Z1,#4E#-bn(!W_n%lDenZ=JMfg8n`t,McqWSBm;D64I^eN_'D5^diKZs&po*d6Kcjo"+)t,REVJea;H(T8]NP8`&F_k8"CuL1RLml5dCZL7;]WQ'Ugp<%?%GUE_Q`8q`\H&hVCO-S=/1euA6'GpWiKIU!]0-laA"NXZg0+=i5qHoLE3?HAff]L22PM@g3$ALN%dK_3iXAtWt%4QKSYUfLD#7Y%1[5Oi=@sE2?-Vj]`/RbuU$2/'XL_TSQ"!c765@aNBSo!r,dGJDY/C68WPbf)1Gi)NZ`^=FDe<:/O4!c3ecCImar@[I@'t\BloO'<%(j4>!mOiC9]#oRE@9@Xe^7?0s<JTeZW#[[pY(H+P)HIl@A1]tRWt&@Kcm)SlY&r(hc)N9*J0bZ*c=gn!lEEk7@kt(pA='#4<ZRcG%U"WUk7)#($bD\J+plqajB%7V%4%#E>Fb##Ce>Om:_MdVjUTVC/%b#[bNkmO5VH$]*jOH)g3eTY<CIYBd`-CfseZ,BZ8M*K>M?$!d%D6,eb'BX#Y@C<5j&#0WXAY,^>7U:!hI^SDOZp>rtCc^&_j(d"NGYRBB-63Z[@T8O$Ym*Y!;`!YLe'K3je>+UVb1U-marusET@qoq%hM6QLI)?bA=?XFoc,8H*rfer5bFQ9!e,Opng[=+I?gYVbD72JYDfkP.kHdcmd5CXf5fQUCF66DZo\;)aU\s_IpRgp2:^<M4i3te$%IoCo-"e7EbJd'It,Sbl6''#_6=se]nV;Vo&PD;spiq7\&*V+hJ/L_[88kKhK>uV)U439Oi<X<Uf$cD"B"4dfr^tajqH[\SnEIGHi%]T'u6E"1[%7=hBSIAZ[hS`)C^iq=;B\f@uV=MVtbq,&:eBaN=P?q^&;RsLmk:a#mL;-BqmZAl+Xf;L;@\oR*=?#U?CBr0"Q[1L1]%]%RJiRglmC2m3>On,[/N7S<dlIA*0p!MbFSFgra!1=FL/-'e@a0SC'T1,_R..*>br8W1G9X_9gM>-W:>MA0VT[#X@_-t.^5.U82Y%%m#C8U'$:HnZJ'p$<pt6OMFA7"C5i($G,..Poe:%h5(0Rn.4;Y.dNKSY\TnC&T(L#=1#%OTc&)(>Ln*>_GFPeDI'8C(0/F4SFhBU%,4JpS*ml5gLbo>&(Gqp&3NVP&J5B#Q'3E%W4+OOF^!9b^i#*g\G(86)X9VLHG`lO-U_nsSX1p6F1'pep"oU8IBtECkA"ku"Gsd:<%:VQa@V::hr[?UOY7nK[5IqgG*j\ID'<pWU2-.iHB)"p6M9aZ/ha0-]P,4^3rRJ5f=/b?^3rF+<]IdtU^J,(2Y(U*;'&8YDAn$;/t%+1:<n!U6=so^Q3'rO+n"d6D"3_(C\DT0o+VLI0.Qlo?5.&GPlrSO9%q.Jt^;?/9EI(a`?BIO%q>$\>Q'![.3G;A>_f8;n[p_s(UZ%dpWI(N3Q"#Pd9DU_e.D9@"B=4%$>05:U,^Lplke)2:;5s5gg@C"4S(mAM;sK>>3Tb,i0+UDtj][n`DS-a]*g\Bd7$@&@dOG77QT&%YQ-5tTiW$bJ,`5`F<ba>P%j2V2NAV]!=,`+SAOMW5f<n\EZ*i6&keYAl6Rsrb="ftc*cDuU(RGf,VP1pR.1SL:V'm(flFn>*3Ela%q]\01Ib;k.>lisKmb,69m;.fpc<DgDC.QbI]#"u*b3Btbp+>)`TDB3F8Y7.SX8+seLM\Dd8BDsp0&M8i+2J.^o@X,8I[GrDMXmB+%W2GVSruM64qSeQsXT#_+'O(iCc7(=&k8SB[#*red==a1UGcAVlrbm!#XJT.S#b)mMBKlHr!_3l8rR2s6*#s&OH/Q"?@=ZIc'B9.S%1c7UWChc>rnBaOdW,`l;n7a9.`+B)DN>3TJ;:"h28N![OQNbhMqaR@uqgKFHM,C'"RIK$"fnId^0RsGsDF&Tj0"XoG49)hf[r30b%P:05,>BEdkqf5Aa!O4MSPc8NhM<'IK4uB5FLU=C]_%5UaW*L:'C!YFFi1;a/,0KJ?$=9j$oOR$<ieb?8P.']A]9]04$i4o*1f@o>%3rFJ(jJ6p7So@%&<d/;LGel+95Wfht=k,@bL4BHR(dQ8q.junP`_:$r_&]]`'77CRlLLl4H=fqm;,S\M*[`jKE\>em-ae77>iMj:%#r*$2`@R$&9"c>q/PELV\">2/ePYVN.Z"8Z6&*A(5djo$6Zl@rZ]N-o!IS_cPe#<+0ue#H2q5]Q/1@Gs@Wo7tCt>YEP9`J"?uQm;%gF5e?7a"i!%Vn`kbidC2*5DqR(45K<U[$:oN@-F6&?a3fTMK+90dnPBCZ6;Ia;LVaR:W*i,PX,F4-$V^kbJ@Jr&9kbK>&uNNL1[<%Gf7s=4pM2e+Y*%j$'S$FPpd#s@?ukU9B1GZcVXJ)]8Q:QUiU9L4kXe37:Y]!D^6GBRs,siZG?Y]<PWuj6@br4/0o<i"jGn%R:fDg%`YMMkK%ZOAgAFXZGUpF^+n&0>jJQ?Ho+,1iA[rBHB7Q$."nI$Cah2\^c+=WB60,.,@r9/uU)qMiG,H'1a`M1^ap[$*M%-@IoU(8g%9^FdFCe9<pR?oDnCA1lH3P$VU@m7Lu\/Qr"7BgCPjpGQ-?E!j%&HB\4bIQM@3T=m)k_#US]bkpA:j5ouU7,S-hjL=a^_b/4cFYL_%:n@H4ps=>'$Wo+A6Pf?Y#g=)&*B&`f'6?ZO=%HC/Z1a@IR?'_G@+8YD7Via-'D"kA?`L12#qR5b%e(ZM]g`c8mCu_V&R[fr+S?r=%[T(%tB.c(H:R*\"FEsi'OTHjC)WFkq(JtrjhNVIq%$_B]"9eqjr?tg^&=4j]j;,+/=(AbOfGJohR0i\1$PI0:;.g#f6SGji@_jd'%:PugQ(a1k3f<['>*-/j3JofPV<'fh+@h`=VFHcd3*8TR'=qZCIK6,.MF*nhdKmN#hN)c/ZhSp<<Nbetda([N3pHh;D9!*sdO+bhO%JE?r6TFi=>,:aW1[-,#Zn2C+G$RRi05am>]qbfF23h@$&!BASQ&Sj^`icVe$RPGl\"0.31:,QDC5m^4<,a`j%<mVo;4ZU:ZoU2\_%H.ccc!qfg9rU'f9[Aa_K!$Z8<N>q@nFkma7XK?&B8@:W3>b9Pj-[=n9W,Nd%fuWW)a[`-jP8lP&BpT5SZlkY</<&g+b<2/R_4:Yl%SYU_+"mVtJ2_0$g^T_fFJVKJB(nPTt/De!UXV83f?p^3oc:XF#SRK<1'+g.i`L=c-L+!G@bFi8%>Xt*=!'/\Y$V[:\hX@o2.'Z_*%>/RSBQQ@R%E5PnWgTju&[]+BN2a*PdV73e^AR&k-:ulS!*LB1ljC.6r]!8WRJ-?c^<UHg^HjZZl"X<8]G7*J'fPR`^_IU,=:uK$E%<fRdEQA%?Ae?IN8!gas%nC$&olS>V!*#N^Xa#LBMNYp_7ERR=]2MlF93d_S5T&XX("2Mn7ZV,b?`Z4eGf&+`H%$ucMRR(@s]Xh\W%9+i#\d%kPH`0&3>>t9E1<(eKj(o:"/`uj^I?<MXCH@G6!)e5U-@&OCjd?hi`]R84?7*!Xs1OBrGD*u[n"H1QhR84s]Z9*b#M9WQf%D8=fI;);ic9#,s5+I`iXn6WMHNpPSfKpqGi8Z`*)mD/qOcAkNK;4V,\M2%d@ZKb\2+km3bq&C)".Yl[\a<7$KJP`G2/hdYM627Ec%D/*oAXF%Y7oY?!3)ijgMP_D9W`Kln!0#4k"$[Cq'W-'-4)%J!6396Xl&;QXB65P!n$WpB$P/ZCI-*D@uK^!,3[=Ds/ki-D`C;o/]%(9b/0:uEId*`'s?M6#I`3e<bA9^pKb=mIiG1E76PTI09E)DWDE_,T'0om$R&@p`7,6"P'#m1bAt-X.o50X3gM>dq*bQ>$?$#7A+F%f+ak'g6RF)Ska'l^eG=dGj4UsFW&dK%Lb@7=BW_.<nfl7m4A[TW.)Nk>eJ8lI'"i<pi)Eh85i>]Y@pmsVID&VN\OI4_CC8,&EOK"%"ZgV+b'-n_:ND%jJB^N"Meu;lL0V)e%LFeb!f&"NlCL^M__'fOb!@:keA^_n"i/A/]3dK-=*kFh&A2ZgEbHG4GYnXgVC05\+*U4U%`Pn-5aB3(TYGc^t9-=;lR<Vi=.-AisilZj;&!kd>dfb8R&ZI[S5^)'.i_<.TV1L&aV#jWgTW^arZdpbS6NtXWbQjO>k`bfQ3Kd5Z%894Q5Zo9Z0NZbs^b`XQR7ff!rOqks!I;%taWhio'?@r%,EG"eH/0Tn?J2i@V9X>H_+@(>qQ;P,SC6nu=K9dKS3]J-,N`MZW#o_&d%E6>R+\9??maN.g8=Q:]7WX>8$C'#HR3)8]/gqmK/MW1$UIk]%oGqEed5m9!Jljr'ZBU_KV(l&c"Y\9l5T>7)RP79JDU,\6UFTPQ=%.;,@f_8=l_(l'pLNc9Edc5RN]'56]r/%ofCZ@$7>aEgTdJ>DK6m6F;[.---SZP3?dQ.iaE77WWVY.ga13+3%tl,dB@MCYLpH?RE@%@/_:/:mDq%<ER_>%<XWXp`PXLM(MHbKlnW3/eAG2R&N!Ln&,?=@7gO[CpSY]:cs9)C>"ce:mf2:1YT3e.;b_o+*d%_G74-,%;u7O%AQkl^EJ@OX2p^h*CXH.41iDDB%Yb^kl@JFbk7PGI@EJWSo:&D^=u'^CWiWiN*#>2HJ/o#+q'JDg;Luii;#;]N&_P*Cs#^;T5B#G?%U6:E2-&="r?l_L"(/qD=@I6sMiY9/r;Jj^uG5P&O7QFV#=uOQd,AAZa]@&0RTd/StFnSKE(6dQWo_]N:hK6e-)#,BLG(MH%o/\+a%C<@RFFK'tO$qqjAU&0D$?KgHb]l9\BA<+)t7%r3H"\M9fP]SSA5S'l+AAJ@ilQhAqX79Z<KsAVFS013N^0Hmdg[Hf3Q'R)Ci#KpH%pN%0bPK'#(`$Pb8`!naK)/ng)ZE<:m#`-\X?DUWEOtMFDoLUV<qU67;o^QrO6lN,+M":O4dX?TJpP[Q.C2A?`9k'[`^6ZbS<-'HG%cfl":BX'E+;.nao2N*ob#qg$=4JGO&WB^lD(Yp1YVUi,`C`sa4<.$T7@acA$0f?MDUhp:*Y@1Y7$E5&QX[Jp?E)jY1&=.0WeH@RV%U'%j,=TT:sWft89/b*6H^0'%?#7P1J$*Qk#.H+;Y`Kq*8Xmll+Z'9)Lj<[u!K.jKPf9erfQ9guFZ@$*pF/t,nr(K$u&C;$;.-7l0%3ijEVCSmuR!*@`rY>$6.CpOAYH%#<+#7kWDJ]X@sXO7C$bB.mO*+`&AD.pV!jf@m,:>Gr02FEeufn.F)A->jbS$NAK7J*/$l[@6]%8]H%si79a-O#<J*2LDk+bU(Xf'STg:L2G0CV'?p9"5Q&=o.Q!u!rUcQ\n*)2g:gOS`%FEC#cs33JtiucTb_opCTF35gFb5F1'"R\%73X9h1FrW.2ar$j([RR<//;8,0e2,!TaH`]IK$loO%gV!3i]3BU6:Ct&-C4;DJWl0Oe5d"JI\^DWes^))_Df30LVa,.R5"q:2ArI%3Mr\iO\+2ZNTuo)@_+=V1Qjkac2/X<ml7%UX#>_lMl#WlT"(`\?-]pl1uAonoth?rR[@%+Q.NuOO#<E<D[Tei)K6`-%JVYdE_BOg%\cIFXV9<a-h)+B`@Tg%kcOH;/*5nb12N!0$MnBnCC,hRBWgRHne?dZc>RposqUJaY&dlr#S'DZtlrA]E)u[2sa*%U?N8BK:6<V\I%3Egcs:Mq^JHGEiVPJg[]=?ifjbJrN"!BBD"9qDcR6pohJM>9+R96i_N-e#!P=]cc(OV#fNH<.>eVn22L!K3'K"U6l=NQiGV32%Xl%(0*`cfVo'R7>`uKqFIpAfb2FFg4_K>@R[#-Nsb%@P_qt.%^:K61,,#?eV0lForfPW12e$s?K+N)9-%0<<GV)0B-Q(%5gaPF+X%uJ%-WM!]#_j7&#8T-]a"49MPKm=m7MpkWc:41W:8l"]?8q?20hLZYrerBVHDU[McLn#!?\^HV<c\fr7BL'6jobBESTS`iDL1'LCn/.7%P>="g6kX+d\LA;nD86tM)(\3D&c!QdF&`N0.jG-I.tC`BfW'*s#@@tK1lblVo=8t=3"Y#tr[ofHS@5(^]r$:2YV`X"<B9ArW/h5A%A07#'2j33?`kM7\Z#;;F16jG'N`/FrW9q[LH9]230@b3)&`o6WKA\"A"^4/+9c_)"3qYdY@O,Nr>1AJRnH$Xf]Fr<nCqBpCdpbs0%gN+^*SG+KDb\DoXPQ3(/%5JR\>0#:N(Yu%4WgMK;;k_2C6R/ZTB!5.3b>7+C/g^S'!W(54X,gF;-`7)$ld66_!hu9^CpN(h&?SN7%dYo"$BU:X#P/L1>ck(ITa'W_mn:-nJR.>kS@tG^!f>C3l`lMtHcPI]d&=cPSq5/biJ<q`tbRD]8jL[jt#J&[<]R..H@@/1n`Ak:U%3&QAB26!ZgiSmiV9@J_;X)4c>Dnpb#Aokd!=3N\,S$qfVl_,*HSKTJ%WLunOQ3^]jTFtYqph'SP,=6WX.tE*bScJB)njS\H\nR67%]d<b;*19l>9+bd:DNZ/Mn^pBQ\m``3GE0*jX$,[8W)_nh$Z'!tjq(WO@gTf9("ra">-tS,j)M<DY1r2PXh]qP6V]-F<CPqRIrSrl%A2,r:U02f.XGsXhWkM"0q_U4@c*UAmOK++rVZu[Ca=LdfcmTc6R^U>@iDO,u7R`5if>.q&[Q.WQ\Cg<l/C_cl($Q%9Me%&c!D1pl%"RSP+_-0^A"l:@/ff'AsjNJNPs%rnJ4;SduS;6cC,`CPKb!#)T9B?uciBjH=@mr`\5h\5XIAAdBffY^/:MBg-kun7-XZ+31T:CD6%NdB16S#"/j.TDAX2Ged])Et<E%1O:J]]'W<L</uKSoto3B>&8tW,mQ3.uI*;N^If4'N`&#-?)p,.U*,;.46T#TA#NrP8m8/(aiQ'%eA-3hF`3R5R\#ur]o$=9NHc__q8DEhC3]7D@(-_S9QH7?mW7>PY8M*-m'n%jKL8_U_-G63=YuZ9Hj3pF4uZ]4kOh/+7AWO=R7"/]%X<KLB@ceDPH(IUo5r.V1<"HkA+I"_.<eu[94adul,%#r$a)(H"&a5Wi2\'Q\SA.i\M[7V8=;WFS"58WL)E8=qn4@oQ*=?G]:`G+R%KV@*HV].r7H*X$2q1OP6fb01JpRg8t+%Gs]ACb:P#%Tmq?M,LJ1bch`Co7i8@_CHHh_TXc+>,<@R$\9[A4+dW=E,%/+0gp)).YT7%Jn1ko?rXJAMn(/LG_lnq:lsas&4J*ko5:lra-$k8jiURK<OST78MiM,hs9.LH,mWjRcMk'CbbR`dKE^s1u*+O>;GZ>X#@l[*/0h]%KVPWn%I`[>DIM=e)+h`62e;e4=#8?*#=J_6*.$JHK2R/2deChibTZB216RQ\?gPeo/n;")S"uR#<e)[9^bNod,g1D^WPa"q`?3#)%7:c]H%D+b`S,EbmHngQhgBcf/:sUeUm5Z?M5@`=>(-"lNL*s<`O3`4nM3d,D.O/m62quD;-B?ENR_Z!A/UTV3DBEMfZ>b"5=amM]%Zb_Q%1uA9qWPGk_h)O>VN6)3qKg$ZS^Kf?]bj4r^[3oUB\2ei6kYJbl#$5Wi"n_[DGKJj#!B(ZH8U`-$T-:Z3/8=F7Zt2e^\k(Og%P'./r>Qo*2(SpUji4"O-2"h!.-JEnIs.]ksc[R)/Lrhf9-u4oUaXtBr9PQ_=NdG;5)Q:e5np^EB1BW9jIXK-V0(FhgAf\b9mZino%l&d[.DU6bhX+iXq&QO4=Oi-VH'(B/Bl7bKu6:b^=7r`aZ7N^0*[QVDK7uZoe$*$[S;d<H`YE1n46;\l;ZsVu%1El&e_iQ8Y/eo$K%B*3G5I<NsRdIS5T?:+P.$+dJrI"U?>'=6h.%:5R]God(Zk4:G.p`"=6cfcSi24#!-3IFWR3E8W`+#]+[mfpLeqleo8Wo/kfWj7Y%%WTWP;d&dOr1^T.@0E*C$l69'<*Ze]s*ko*LH[IlWgTDoZ,]TVcb/3-tJr[?9p*o8i+4=L?$p.Rd\jVV1J(Y2n+-[<b$NR8M,Z7YG%8At-)!?Jd$:93:uT7Rg7j6*h)B!pr"eHE>n9Bu-P4^ad<q'&iMQfhb&H\N>7,p*48OD?ss].\IL#3h$U=%@Rkd?0[R%/Uk(l#Una%oV=1EMfs1q:gIN]<_3r$;I*&_ltDU8Z&)>AL0rXhJP5V7e%>D?%sIJgff>8F=\+oqMS,Hg*8p!!E9@&IZCMQ98j3>`.N*-<&aZti%/`Yo*3&RMDP?+H$MhjA"3/BK0p[VG6d%Y)"MN,;[!.sS+FV.BN-lAu5UI$j;LnW+/@&$8Cl?ks:BSjS+YkKiOe[R5BIDh$ABIf3]%6Qpr_*ijmR>?hfn%`J%N,*@-g9&aM(@IHX:`ACZj1C\]?=K?%?mqOtB*DtJ7pM0#@%5m_.-KUML7E_mNir7JP=S+ofZW<6B:U=eL%gSir;Cp7ZFb/L)*rA`-=-@=31c0On.Nh4ZVg\.qZ-:;F=X0P+<q.P'KAPiZ:X/06I?05.;ZLPbuo$K"e'Vh8Io=/DMQ7fRnGTns\%:mDp\M<Z#GLQ(F0Pae[p`TB4=4bEms0SiE9e'L@1iFt'%;.V$;WqpC:ED$@Lb#bf7nsl4Up7_T+V&TQ$>?4K:JZTUe7Yt9$ntFI(%\7AG\_Z0g/mZ!EAT-%H@^lrZ]$Q[9"q\bU\_[&L43"Q#8]eVDk.NO&B)=W<Gmk;$Bj#H$3Jjhl/hqVI<,$b63*:a/A&%"_g@Ubsd%.?uG(1,bVJcA<tTH(tqe1NB)1!eE2i2-PY>B;]2k@p@%VKm[bVXD0r1%8\D]mh_`s2^YY@DH77=*"hC@0(Y4NC7o=*Rol%$30ra#%hTV(8-1lL=!NIGGJrEKV/h<$e:pC@Lc2b:$MC,<dKdA<36ru5Hk+Z#e<2<tAZdY:@\FZ^ieHXdue0%8;VI[F+3d;IAZFCPBPR)3B%@p<#;%l#-bZf<mIG)ut1QZA[cdo5R0Z_1qs1LDlmc2SF<^b'IioJe+j73fC+.fljHWhr(L0XX3:UsVDo7!2hr9Nb1A:u'/]O&TA[%@6<7G/c6"-$+=csJ'Fm@`.TO&%Q)6TAnhPjYE^N4W[qtaD>7Qc#*X4K-ZaBfPE4+7MsT!3a9WB$[T_VMDj80!5s4?4bV!Vr;QZ]!%)VU)V5T@.q?s@+p9o>KNk9pM]kS7S-C9X_)\<*rrZNWQ3=@po`V+8i_H:_0C^6;-=Z1+Iu@'J-b7<=FrfN_NY@Z(BAX81LG-KkC!%S6;j.U`/kd3qbn!6`_`8gR<O4!b<Ip^t?$75pA/)_*)genbH@dJ\P''=n+)@ZLi=FnHA+CQ/T5$7aj=X-&c0Nda*-_HS)6e.NaE9%>)q,RRnC,e,mm[s-t!ABCn\+'$])I`>%o"4Mb97N(/,)j`0$$W:+'P\`]R+uTbP''j^-?W2fkr9W-]]E[UU3,HITcqCURcs3;DUs%'YAnYWIG@_"OJ@Tc=ZSFo#/fk09Yt&YU22ek,'E(No#L=5gJ*-^kT5\!]14b\%A#oeTP?[8A3*$fd1CCnH!-FIie";1h5+o'C_cK%fc@oeDJOk`lQ:IW.@Hs8-emkEQ%//bMIM5eU_q>WWKF%tM)k,Pka<#h4DS:LY&.B`IPq5l9Rpec[J;\BN=-6V4O@q_PSn?LTU^5Y%SqU$[NbrVB@OfLbeJ"5KG&qi63/DQ1[J(Ibg^(a<NA$5o%TXZaD.Vfq1pj^2MqH+HODX_\(W399B2A/("$\8;"31s*WY,K5D+,V"%*"J92W5uLc8GkXk2T:iai2!-feJ((U"PKr,2SO4I_EXB@Z`:Kd;fLql"L^S.DHS_:$XRokT]&N%iP[k]5:TcrSfh?$B;7mQ8"*bo%q/#(`%s#U*&?$!Gi%iTmCVBuQZZ>oqK\^",8"F%tW-!,aY$\F#K.>Zo&Jnmk-+t+W=l#?\Y.>fX$2iL;`Yk6_%*XR["j"L`!fXsI%UboriaD#C9^Gka7>"B[:Et+FB.#]aR?4FuT29,OQ]A`W&<*p!0=^aZf%nsil8m0u=4R)!8<K>"T;FIJ!!q&h04BINok:7+<L0""a%kDdmq0ui1&ln+0:*lO#_R=ggo>@;!.C3,]]5qo63V4.cs;pZ1$Q?[u0Gr4'EfNbd+8.O(1ZE;FqaJdjXFrH!udUF]Y3/#Bc_Nl8p%Gr9*<OKbg)AqiXCZ_lBu@'ecieU0O1L>_,R-4\--k5"GRrP9;*Ve$Wkei9D(;B3X>=Ih^aMZtQEHI[EaZCl:HE%us\/@&qMVi`O5%Mj-J[>.+:$Hp<M5U$d51Y%MOaCK]CX8g@%M_M!8nUOjf<L5!pl&X`ZF;/JtbKFofj_/SPP#3_@^1^?,+P33-UR/O1gkn$8.!/6CW%nmM;g_mW`f,::MYgB/&N,2<A<-]SPPm=cCr+iA</NVJY3`Z!7]O@S&F3[`U':meO4hY21[QS7`FlFD^*$smJ2--Y:XU$&lC.RO)_%G7",E:^t2nH8CQsX]@8_G)A8>Ad+$Y[;(UB&4\Y'beiVlUAG_7^Ni!ppQoO9"Dnn4_B)aL,`?6+3T6JL4bJu<k'2'\G?a132gHJg%:.F7.5&5:%6b7tEnSsY&RiImA#o&7>']X3+']G^,*uhN0fm9II=cdV=B;s?aoBt.!bgMKsc!)foWZ!JPZ-:[(?n"p0b``/5((G`o%fVrSBPh=BEPd]k15Rn21E(r^J,$U%s5X^XS/s0\s?5<cH=%2GCjuJ\a(KHmBh49t=&1D9>Fk'E-]l)m*B%D+O]H'RacloT!C)4s.%?FdL6:$\YlJ<Ec1^dSYrBGqe`_h*G>HN<`33C:)ACZ,B&(1<+]gSRIhWY]kNGNMrEP+mnkZW#^k/>jN#f8U/%cmIJMqHMn-Q=71u%+^r%(;Y52:?VYdJmdFE73'T(UYQs!3kOc['r*pP^99)mZb*Vp"8sm1[Jj`?"%tHl-gOV_F9?FV4(Ji;h3YX-5HQE(cCts)L0f70^%UM&pF'/beKZ%;pKAIPjlalg]4$>Mi4N*U?YJ/#*)J%Vgpr$Nc3Bi?m2InEDpeVaLe+HiE-(F*/pc=0srnt@njOg>uZ-XHR.s-WAB%dgX0Be,Z)0HR14c1a&V^Y4E'>f;QkHOrF+gTd"jb[.&4)'ES\\I3_(F5Vog:)S]/N`/V1^>grEB>/O:3-.Kd$PG*12Z3YV9#&,R0%4PQg^b00S+&8907YfH/h5:#"#,HXPZH>(:+*3dtiH!ZtJ6"QOsS+N_+'7"ajeIHHIEE3')Fg//k&hPin81h[WUniicCh&pI<*kgk%b=l3(d%R>5UpWudU%OEt]P-Ot@$B8(ltA:jA'm6*@(L2S<D!VFZ9U"Z3lBnSaCVAaYSn@k>P>3TEqMolUBj)!WnWijgf^'Gd"(9V%<&a-OCm:_D/Pk8+`bfgdV3=n_X$BIFiD`hGQ;*XRbbV=c0'3_N*9"111n'rMXc*fkosl7.g6*i5OY'.?*I]gS4A%tr==RF'\E>X3%!A;+Dli&YW0*;0VikrqOOBK\hEW7FO&uI^H=CRqd#cL0dc4uCVlpa(UCak=3m>LKPXuc,l"q1Ijo]aBpU+QF^IW34`M4oJ-FE7LK%fiLSU<?/Q`f7DWSFcrt2!U=EVdAhqINWKjoflf<Z+@.0U>>NbbNFT)j_9X\GS2`5!7i:lqJeJ>TJ:ic'INGQ[;H?Bo]jW$S:5SkM%A4"S='ZV,i(T#'Tf7]*HU>U0R28.Tb'MT"5oa9%[TagJo#Esk,eTqe9Up7-VF>u]p]5aK]kMf[.)9A\C+0bX77P&,X3$Df@<(Y6Q%0h)=&/IS1YQ@r;qgc4d*GY=R;jEIt7[B,UOj/Rj%(^UO71H\c'#>SDMAfG4/Wl]c)*8D(-;Y':fEFauJ'ho:_Nb*\WCDn:5W`uXC%qa8"j?En5Kkf2Sf"j#8?)qfnH!o7b6g"2?4,%[f3%Be:$^["=U@nd^>!6%.GKEDjOO43NCQLu3upHr66S\P\1nRc/`3j%F+#5*n+%+>jfgU+'Yt%3_7ZRGQp_g4MWo2$9#<re,#.]j5oVc7GGVdj*sX#t\kM`r-gld^+o@8Wrjd);'^=M0.)WZJ,85fO'B+6nUHlQ(]d(%RED7]Qr2<J]3uOYk=@_[)>1n"AD0hB+Zf*Ej_;gJ4WkAgdOaf8?@pB0d3$\$@72)Gfct+\<3e)%BBH['po*V'\T;GKI_8q-UZNrD%g)!c2jm\>/d8M#l-IbZtZQQ>'35?Uh^TSAn/;s>;q$P\)XsB-T20\aBc*r6nIgWVV[!'O3EPi`n5oFBpUY/.l%m.;'"WoD4Dr!&8%&$g6@j=YfL4nt-aaNI<2O6TljOu!rU'R$Dr03;Vj#89['r;q/[U/u5a>o;:o7Wj.?)o5;Ej5ilA.;^>ZNtSm0$0M"tBush8D5Tmh%r,Ug$8"Fjpcgs3!nhedR41X\M8VO6k?G.>;ZYD;sL_EeOdH!k>W19%uD^_%V$]AkpjKUeC?mQ6;&^\L7"2t#ZZ&?8FUVo'.C;p"F%?on_Xd1Y).ZX%F;P1[\%:"EJ/!aM4ei2*K\dUc8<#e9nN@,Og'rK9C-Ic'V6Y`/p!Vj9n=hC!J^<d]*G+oXoMa3b<3E<`@((:.>f%elI<>-&br$fnp0Aj(@FA[PS&uGd\\$UJr4""L^kPDSF""`!<)';'r5i%OrCNM"hZO)B1`=pp5)]o%5q(]GI1CaQhNrN!'H?,-ZB]%!0d(.A5OKYB^aQXiPr#*5sU^iG@X\>XWV!jOmS\<`@K;?"I2d*G6*$'ab$]rk!_7o@D>h8=D@ejmkTaY-X\kA@Ca_t=>AZ'"05##%Q\2t)>FksU:D(al2HbjrB`0ppgkuGIMjF*",;PcY;`(i"Zm99S@^'*._Ns7.#3_8.6I*_E2=tnTT+?!!^>d7?3kFtqd7[DFiLL$$%ZMO@<geSQ%(%"[CT-InsMEqZL:Sn[-k4#<2P,dS7N*QQ$=1uTW3D!a[$t+4ZSmgQ@/hB!B.QHp\n`i^7;XL4p^!tC]2R.fUfI:!u%GmtdNOE@mkCl"Nm(#[[0\;hp,5R#NW?E15G;$Mh\/\M=Cds@jX[&oMVlm+nk'&J)i)43uNl5^/VeW&$>lg5:5]4@%5m,?kojsXJ-%j2S\;N/Q?$RB1_q&3%DBgor>TC3ua13M9M7'5lHB1SLCHW+")1_J=JA+'W#i*EX+Mj\9D6K?;*<5c`;%P'G'DX;A")^eh&CL#?MO%`XHlfVVUL*/"?0&_`,U2@7`#9_Upn:g-/*(M)1MYDXp\,=nMsWC.jQOZKoZD/2(:pU6O,k0nRY=F\Yde<L&6bc/s3U&rAa!7a"Af%i$Fn"J=;&8pR*cpfKj6_Mp"eJWd!P[30nQ'S912F'j/mf-ngaL00!t&h(.'Nj>R?nF.3O"8jRBDYn/VNg(9QlE.$*1kW3-thr))/%.1UEsMdshc!_\qf/hbUF]VI@lhTE,kO7bc%J0F"g?WdYcbW[JnJ0mkt73#o32fa[&!UWY33fKns`"Qs)<8T\+.&<9*;WG0q>BYr8%^gIdX:I#5rBE`B$%'+-A1=2)`jsNQi_E0[aI1KK+S_A'_4cTQ"ehk[g[P]013'ZXT<SH!eN-`cHaBT19W,\f/<+tMs:NRi]*2e.K%-'8)i<ibQQoYDG\q87iUc,49X959n=9\DNiWH&D?+AO>5;DrT:@2J&gAd]#1_83%5dnE^hEgVn6GB7s-Ajhl/Z^\oj\;,Uj=g4Mm%$R;Q`3!Q\ndm,IIHC'ocXs$#L"T!3+W!Kdj1KC,%[eUZC"5n:%Y:Ip3:b46`D&C&Lc7=q9:V>gj"^@!M!4?%"bX[6DpL*0T`K!BC%WM\E'/P'2<>^+aN!D@1Q`hgBXLi)`e`*uTrFbYakZt=H;`IN:&+)*]No/!NcY47oF!BNeoN?+EJJJ.IopU07Z4A;*;$fe=\ZDM-G%-3#p.U/qSl'7mG$es#B@#jbU#$]R#KW7@Ta,#4knNCb,JQ93uUq9T+B57`:M29AE.P:A+c/2]j7aOj^1O%&S`fq&);<ifV7`#!?Q%!03J(N)N3)ZEbm_PG).aJ3)'#4"+"8fTn>C2`na!L'Q7^8/UVU'K39*?_GE-:rkQj\E%]6LBJSZA5*>tdPY>>P!HAnp*<_iD?BO4%Xu9VTd-Ull^*C"!0!K#UBCQb9-JuY8MS=]+-h[AUACk_g:"bi+E=3ghVagkY<S\@n4]GmK)T@-_A>`4@?[$\i)Lc3Y?gK?RG1Xf`%.1=9.lFQ#gHNGIP?*V1r@4u^dS4$-t$pm+B3#be!Ma>)PC7/2Q3%W*OIS1Yalk\$*e=KL`?Dr7._=Gt-7Qc?lHBGO%4@iV*Gs)5]%mNmj!c;.$NHM\n`U>!:U/9P:!,Kao]6j/9=#)GdU[8ep`V(?%&B?erF[`Lsa;EY<!LmH>HA($tXln+=JK&!;G]Z@C[[QLgGmj?Q6%QL'7<f,f:\e\-W?#96]8.[82?!,Jaleo)Y8)aWr5'qqA,)ke*G@dCW5LBAr@cO+RA#TA4Ni4FqQaBX:m:M<LTgbpJ3eSID,]*"Jg%m2hEec*Ck!\JS],$IC*bke6Ld)qgSMaA;H*VSZq\_13:D>:!tCIV7SR)4!.L.=dit\r>:La@L3'(c>eXM^&&VHr*1`JO)`7aO>2S%:]VW-SZ"l"Bedr1Dg('?]:i!*;-`d/'@ma[.2Gq(C@_Yp:umoGQ43,"Z*Mc:m9GWQ$-DTH_U["@M,-b+QL#`S@)3EAO;2$o?8'n=%,@rO:8]6F8';_+P30LDG71krNeVEIC`&=,qiR;FE?030_\=5BOV2`*$j+pmp9g=W\/Gpo_)>4FanSaWd>o?>)JEI-Pc-",^s*XFp%Aa"O;NVV$oL@aeR5)<8LNXL$;+<ZZOa/:NAWsE8Pj=@de+nk3mb;DKHFL7h-W%G2S3&Nc/_g0D:$=uD',qZ)ZZ!:fp/m(s&^"U\V%&7UqVeaeHi8ltB-Kj63^F0fBZB@,hRD$>>UBo\MSU3$i0*M"+a&I,&?%F26rWNKua-I"_CMOX\HiH4n5Y<#[-pGf]-`2@\F<(:2E%fLsOdCY;qr^3Xsr4j0nYVOd%IJN9U4g0,Q7.'5S5_V]6]K@k]%V;WVNWq(PlUg604!cE>*b0gnn;G]RW0^;+iO_c1`02[MNcOb4_%2W4in>^5K?a>aF7;%pf37pOFra'BI&\2Hh)=*0DL/Ze.Q:"HtO@j3S/k\u7dgo)pS;(R9.l_9DX9,Gc/E^%;%T=O=O7o90q-%*#$%,QNV_n7_ueV"_PU[!`.`RGZT%-8">T@`[AG`<XW=[&#W)IrEfK(l=JiklJSiZ]O9r;l.7GEn>)KK;<UPG"9+PnYLZ^mVqMWK/JWN%J9"nW;grtOo`e7$kQ#-0n:<*gRKa:1c#6`nD07@u.kB0e"sLNJ;W;dLJ^^mV7C+DE/k4q$%ri(>N`]6Rk44TG(>:'4g<%HPl'eL+%m)/#,_iR!AaJE-^cs^J,D8K\o5RTi:e4$0'8V3IA3S\TRQ5rGulksd]WPZ2j/e6m;UgH]VK<9*UTXp*XA8k>2BA^^VNoZ,In[YXB%R]mM=^/`Ge<k-OE[WPcTkKb@>&qVc3`VIU#;[)/7MW9UAOHh.2;YZ-mWq"@SrlI^IY"pu1T-7gBE$gC63O*jr`P?3nE)0IR<YfI*%apQAX^OT`CF+=JRJFBs*YhWT;dS80V=$BOr%2ea&Tk\`^<tXMH,(O^\)mWX+eLlgL@(B[7A/p7jE7kkFen,52&F2K8"?mM`Z3I76%]27H;8Wo7KaW\ZjgpsR,(*"p/!eRV+o6OH1a]WT``PIM>!m/<)"C1TI=?U<(/\BT6SP<S>*cqg2_ZIW=c$Y7cVDs<%S1fD5Or(or%]n4$\-A_mga2o^kZcHjj!_XB?3/s^frhN.)qu*-$/3totQD:;W-Fiq!g`Bd;6"/5=540ss5oPU$/cd?h8XeE&_AleE$hSD#EmCVB%d=>%&/aG"MEb,bn;RKC)#VHP]jJqZa:"79V&7+PX`dXNtk\&8ja1[^p6j$N(/.tq//ecG:X]UV.J@IF=4(Etg)>K6L`7l!iY[k]4%6Sl.q_;N\AXCOj8@+#-83@M&:8oef!B[H`^DphHML/l'>P"Z.RAS@TF_)fX&4#k5jIMldG2#]aNIa^tAQnM12<Y=StVgPL5d=&oW%jm8n0%8CP0:3eYUGA"]P7"cV#AC>9mEp1eWc&-.7(YE4RUi&!k-X"%0D\0poK(<BD'Rl&IARS>8)L8<XZ3q&4#UX'?MaHc^\2t@`%2XV#0`d2Ta[YkFjb[as(e;GT#=^HPP[XO,K<f)71dYc1?$pV*/c):cqa-h7Cq#1@QW&Q<Lo?3sp$i\UgMKiM?qfWj+qBe6p,A=Fp%gTfmS8QED!Ym'L7<M<^$h"di8IV*O!bL&fim:G`&J=<ZU_uKmO]*>;"+$QT7/6E18"U(o_e4I=+o;&Ia9;;.n>$tX!K@Rkk5d!W%%#<+cm-mgrPq-Xtu^q@20eFO?Q08ZnR$[lr-.a`pF&)sWPRKi4\5"HW8A^RRr'j6nl,e.6mcYDfm*AU\m1rL;?P.W7lpb[O'fg')@%DomNWE__!,HAGP9c+p>jF(<(/aLfcFV[O8da+.CqpGQ]'3O+a,b8`7SL1s1tA=f<kLO01^AUm4d,`A^dhKjf/g$l5c1;[FG?Oo]K%qpkf$C:u;+pQqdI!\PuFW0TV4nM.]gE@+!4S/Y@\1Q9Ef:hMePWoX7k@+Gtn5aXs5!%MVEJQlKUC@dn6$9!K@Vo#>3MoM>E3/86M%5X(aS5[E1_kdCAOTOA5REn3s"[H":Prg"UiZ2g_QM(pA4AJc3V[@EdjPd=$uRo6mt`>(csm5UYSe9\Y/Tc(t1brAO^SnoL%=#TR&%^!2*8F\N'OoB"+T0FshI\mTLI<j,C\QgKYI]f5H_(#3.C%\oIH=?6`$$Iq+1:B:&_K8^Y0/uUI\MKAPf"cjS&Fg!D'\^[(aP,"+i%W?s-rDM>&NB]bIT!G>l-F\p_L.qkr72+d>R5X'k=8n9#b/npGMm\u^I:(MF8THs5]&YSH$R/'>kS>(>7q+.e7/!$uR<5;@M$s_Xb%DOAg8NM8QRZGd?&@0Z-Q:Q3O8mWZ#GWVBT-a_'T)/uOj4N#J5h_r!ldZJ8>#93u>ZCC1[Y2\gpNYHhc5jCpgZ6CNoA30&[.9$^hq%=nXsKRL&.CkR15DNuHu1&a5&e*`dA@/6.(J!ZuLflr-m6iDOKTIS,0fWb&,!<u>%V$0?8gUOnpD[6BYkMTg"*ZRlt@iVrE'bXn"?%<bRT..UtaJ)/slW@0I_5#T\+a%MF>9]*mpYmZgRPF]Pq!cCAIn"]2WT)43ocf>=U3#K9iHUSs>^ZWJU[.da[4,.)AgE`(X2Ful+p%V^cQ[YZ$&RQ2,_DLnRN1#T7"Rl<;U_qc6Fp_SDiXCquo3E!7C%^>5_q3skYJk@Ulq&t+\en6+[(BeAW#D\<,*-,Q]uW8#/bb*b2h%;M1MoB#[lV]cb@9!cZO`%&hp*!;^i`]60$gk&HL"36!VV>mr:8=$7u^EuqHZ-,j;3S9Y*^)RP`n.5`Q7e69^E";:d@#L=ZMi.OT&%CJs2)0aeD+3>mf')mC<9*'gQK<'!Jf,To]LX.A@s4WT(pJ]2^gaanufU*KCnMrs3hX!61d"d5F>@4FP=N3PJG,<N!?5C00;0S$/e%!8W8;ll'7!XD&f#Z3NY>3J-e1k,k[T_EQ?&#<8-bJAd."M[mj9T'PJ2ctjbmR97Q@9Z_g3)jSJjehZBN`_9.tB)\fArG*$YTVSc7%E0i7C)`-4q1;#A1HlVc`FB(fCLiUt?0+F=MYZMD9(*h18"DTY<EXcN;Z[rKADCFYq?nO+-Jh?<G?^:sr^<7!@0=85hj[mLnR5(r1%,&+G%M^$<sD_I#(<,.H=jYa;WU'^$<S7"c%jXs'7(b>ai\Ee#94;n=#qB1=)(1<H(UL)-gS^K&L?M>Y"\^"UM]3m\1*NS;\6;]T9%W+sFs3B\oQYhV.s?7OgD:d5D>H*6)&@03M[D:KUCX;ACOR[@"1L"&QqhWV,m?kig)Qt2k4Mh%Z""ZX#tg'+'8/d4D<c=AG>GC]k<%ZG8F:EeVD()$`'0cOJ*dG@_0%]G=B?81N#.DaGUMWC\bf@p0ciGabkDNm&m+h3t2^_O!+c=HYNrYhABE^i#mZ05+m7VKBulPV9i=%`qruW^V@u'`[FE>MF.V]Ab\jI#h+_EU?n$tMQZ;:lW%ckP$A&n6!>$WPGZ_;[PO#+-8A>V#R32h+P>d5%+Z.Ug(=_tW]2&$iW(B2%K`Z'X)Y`*q"$$kigUt&DEXa`1AkQ'`8K*j@rDM?Fk5F8E_W]*^3V'BcA8;q$!I=r_'r4F-%5LasY4G5p^H=G5BmCQ==i?\%>#7_R%-3+T>fHgmD!kd2(U]-5si@QBGU:T6E/_o"$6pS$4T^;C"NInGQC!k^Y$s"TiEBP&K$AF&2OXb=;/D\H08Oh%DdX,ftj;h_QfU`(M%mrUc*'*^FWZ7831Q?`k8".2khN;"]%c0StT_\h-W/<VAZE.<.Fk*2:^;'h^E9j-bYl]),cl<Mc>6e3nY@$t`W,fS,LVKfEVS9\Vu%R%BFOi<1"XP`I_8R_?OPc+4SEHO-AO,,#`2/JabsWlOjY=O!<E?rW_Q`DYf,RAoth?spCQTX]+p)qBS-j_>D/:>*XUT7OUmUOo52%/Ln$Ok2?70eC^97[BD%%c-jjeFud-:D2VpQQc)S1,Y81V%fD-[$ZY[5q,6;5?i^eQMrZMGXD&WH+3T'M-<@TldSfC5ln)&,kQ1DY%Zq5Jueg&Xr0Wro)aj_78(^K>XC\'e(K;0=NeZ;/'S4n;t]kLOd/-0-/ITFgsCiaaO)mq)RZP%7t(@EhONm4"3NoiG7]!K?>-5n]W%-Ld+=lM1c_;7tP3<IX,2/>0p$VrLN##"HcABIau'X]BV+Ns[5dgu<H9:,U,8H;N>tZrs`9`5a0P19LZE[N_0AaC9`?VqUF&Ve,:^%pQpS[!S06f+&J_PXu%"MjRN4m%dkuGNQt\VBQ@GDLp5C7O*+S*bpF^//I0[DmXWUYk!&li5<4^IN>+JpPa8Na[C.oB,qhEc$7oUq%'Lo<1!=H`Y!_@E]"58tE?1!7bd?@Fa5:P5N0#>=O$293L\Lg?\pmrV6h#OH^%6u#a=V$tR%Pe$,U%+OZ;aP`5(['`Uo$f3@>'7Z;%1eeci<["RoF`"\78gNQ5:3LT72du=-RYnRjR!P)PgFV.d8$@/J?o&grg837,<r[647O9Mi>!\9DOeo#s(8.c7jpK4r*fl)qBA\C9%#I(6:%I8IK(*rS3A]o#45YciQ$LGn,Q0F/S6g/,Dh(<2jiELMmcR7]No%ZpN=Di&-d:*^SXH^`#d'3]YZdLsfY.P)\h)OqnVr.,1%h.ACG!cp)h9;@)T-.sM".[XUdA8n[,J<ED4^aA?F!QR*-+.K[gVK\&X_t4WDU<MRsZ<F/SV"$PU<_jB<V=V4qb`,HA;(LPZBGE)V%1lU^-I<F\?4Iq'#Mt?KfEJ\]p/74AAe]bISEN_jZn39*`1T""Z4^r?C'XO'9j+FhV;`4$OhLpQTp1@oKltS<_\D"r>fCN&LJ1p.,%3-OF$4=]j#!B:MiBH`ATI9qGFLSe3bJ7S26+^*LW^r,YgZGuds/I3tn"h`-3o\RiL[Fk,63F9K:KOBhDC3fLjeR\`ipqOR+/M`6H%YE0872[G2+c!mr*WYh4:(PD/2KAg7k0]&sU#')7OFJL>O9fDZ<@V`!.hX#Ph#*u%cmVTTiDI\Dq7Al,e_JT'l\C,7deloO/UMEc>%2Xd3%cF,HA]#>[Af-H..WpO.mULBh=;uYHP)5s2?al,o]c2;uqmcbdr:Tt]>7=EPcgD?dGrpn:S7*7*ULo]X,E>E_fbeV%#[aVFh%e:8Nr/VKQO#deNn8@8#O]s"kT[.F6E.d:bP<K1BmG,W?:'SMhK^4OQjL$cps9g4TgF0pQ<@BO$bkr9Tjh8a!8o3"8EOL%?6)Q5g.%mVEA&kM'0Se4kNA*_Vc%_jfNLRd.9_FV.GCJFa*Dmk<#02!af+*2jWSo\((mhAXq6V5e+IWa%dt?LU;aD;>g70%.)[m25oUB#]L?%o._rbdTB"7]d@CS7g3q>5];qm=W0re>8*]m/StTMrDN8gZ3+TI('EMb:jBU\p_\[q)!?tG\/8K<]Ys)#OrS?ZK/N@bocubP1!Ddr%PMn;_T<l%0A*dF63!o>GkN87&BH']V0*s\!o6N*%g:+>*`.8\/<ce"cptH)HiHnUaFkR,d0ms0ion6%fA-:%mm_ZCEX-AP=)(f>_%"4_>**O&'\"rd@BNUlU[l\c1P[@f5cm-e!iW/9PGB@YW^W'Q*[#J,UH8[]TfX1fLa6;:p[dWf+3ZnbSs&]keP_FeUW\i9rhQ`"GP%M]/a0NZ^:BV5T_4=UlG)bNe@q/\VXF*rakuL;[O9W>aEYGM;]jN5IbaJ?DZ5e3[g?Aci3+Y81Xu_[UGf2<*WIiSI$]68^3PGaGOK%DpJ'dm%e&0V]l:#Fb(G[[q\Vp>K\Rl3A-G&)e^'-GIFWRErP&4gg?Y@`=\u`5C/s=E2dMUK+lS$LaM_,H;2o/kEh^X.K4h`^%Zum%8?sXk?\!>#gDDV9&g3@RA?_%&2U7_$)\Xf2AnV.RcZ@ERm#-94V3Xq%bW"_?hqajnfM\c]]=PSbWk&8lI2J`G'(do((uo2E9dJhU%1_N(DU/F-$R4p<ofh[]sVU,TZLHsPi&/eYrni4d-]bd@_QD62c::#k1BN/'I*;(tKM3aK<.F\lbI1SgX0kN+:DQ>`=-kAn+4e4Io%l7^D<7&rS-RD>N/?mTf`AR]UKmNs2_'^)2`5hfp.6-DQ%3?O[?d+pMgY2i%:MN*jo+p,R'r[LK"P9R"b,N!d1CaQC17=psEOkU]S%^cWAee"u#Z4Ll1>jm;_\$tP9SE[!9hUl%-&+3oD37L2DM@ng;aqCYC?V_aC/plMDmNcAA-*+2$a#6ilcS&S"0W7Cn8d':Qk6%h^J%X2Z:/3loF!lsUQ+i]#fU38rL6[-o83Dq(!oauQ)*1dJKSFD.qEjMZjq"g?Q6Y?:t;&[b8!L0E3SMGR=neP,(\bsY-="&$GK&nGOK%a:1bo)Q0,pC%`,#0d.'2f:AX?()[du5\a6VC]Cma!i1YqTKt0Z#pk>>;![s&?C;e://]HHToZJ@0ge[65JhE8ne6=%OF//reH%WI%@Pl^H)X6P`^"$ipR>?7.;.M"Q/<kr*NOQXg`316b6LT7t`$=eB0aQYm$C!<%ZdB6'0o4Z5NUtPW#gs%;d#G\pd/lU15,.I7X(X`u%MumYaSc3cep*&m1naWN<Olm2ie#3i]qDqK7@:]AQ%lI2p7K!D/U^>Ss\<CPlDA^6Fes`jureS@`,qF6sYO"_=Ug1TQ74%S$h;P+p%dLX5TL'TZY_95;]";n=+VO!PS8[a@l2Q8bRFZ.%]A64=A]ksQ[/\EVX3^?sDEe>FtI#M;\,%p9eOX%(gK*#tb;\&I4TqMWd[?H%+%OB!206+N^*'2a'5$Meq/cATd+6lDhbNR<O'KMr[?7<1+,8#OguNKjO.OeI$i]%K2T,jJN]9HQ`)+)8ASTlN!N5"SA46)$W0&ZF]J%WsYRW.OhEB&UG^"kYXX[%>eTL7?Q;AUD.tT7m4J(@;PRpC9gI5#g",7Ins=4iur/>Jq^BWJg)11J`7Y4\=k*ud8^rrrC8[lEj$kM%GTnnmEm`)Fs$8RhneNFKNT#SQ&rfBLG[dJM()"&bU^/q`M'uXN3?\Kh9f\(2\iauc0gI#W6$3s>]3R%P(q5F!qJfWD-6C2CD*0!;%$*;teRB2QY>5LS,0muI=0dNG<&$)>=T00JI+YPJmftp@c8XbeN?Gt7f*XQ)R.2c'I'>Q/iZka)Z-&^d4SOp@uXsbYnMK<g@N0rUo%KMmE^W_0:--*[AN1.F%),BX(r0QADp##6EKo.Q!k#W"(A(+./B(+VM(]'e'ecLhhH!Z$$V^/IT`gHA6*`@&cfMW+Fq>\f;p3QF];%-KTRkd7:P7aA:d.LDX+`W/q'k]TRdXVLM37LUe\0>SX$c]]9r^RQtc(8QEqZ\Sb;r9LbD@].us>&Q7!rH,6e-JT]n,6U4o%^kM'u%ij<kK2Q:iL/&bC-bhai/nuU'a=Br"95sV*`d3L1@Lq;V;#/l2]#pt]@=`"dk%??^O.NCql,YL+TO;LKhI157In<R"3CN']_qVm#F%V'X>X0.*H/OKcY3-\tqo/!!hL_\B'V?B&f(MGi@GlKQ447@O)X5qVA#.4!lI>J.KY+iE)F3%6S^&0k9=:`dMV1-?^+q\`)a:TEp#%jE`dA2gpK/">`52BGk^A2Sp%b'3#U4O3r`M'[afH/_-RXL'=&SZq6h(-$LVkR(UsXB,iNA`B6i8-)8OK4KpfjV6"PR,NqWh49[cM%/6^u[:beD4O?.'lS3J`+?W]T1b[6sW7?LQJ7CaY$qA<l?$M)K9[EXffbZOgG,WYnS&"uol!iMUmK>RF_@JSll>_uI+*5rsIR-FjD%D&!ho:pOP"G^NaanJtjG-c*cuGMkiN<],Xm?t6RJ1=%7[$9s+d<+QB6D&/;A9Wo:1mXGm0VgjYNN)<!+SAOhmfX1lo^>kr`'"oE#%B]`fh.,gkPY?;P&/t!q5HP>$6P^Sq7Kig#/q(XEV6&HEK&Y.)bV]j%I7Big08(.^c0"sR_JQFT]bbp8OOl57VBk<GsMo&GIcn+EL%q62(8`^fte.T/INMfO&$aib/97WH'^9!1MaG*pG[Q_QndFd1J7J?ffQlnQIEooPNjGO3S:i$+-7^ToQ9A"")C!Z1)7e1Kfle<g:8%\HU.E&i<?"C>4jf/[[%:NDSpUL;h3;HT1ej@T=\YEBHN8Y%iq5B,&t0j:gUO%nH+dN5@0da(R"NTa@)HRZq\^a>qos<V#pDJLX#4%.<@.g"%XKnLSVpDo2&jo.KI\&&RV9_<KC]e9`0uuQbd,6A@j,JZkMf+.$)dGOc7Ig;3Z\[-upL5%&K]]%joIjN"mX`R[uN*D;@fW%(i,<L2#()q'5@1rGEDtCd9u:)CW0sl%\9!2[9++kX:-0C8QoMMPoFJaY;iVO*><.a:ZuLL<]rnb5De]<*[\.U4F@thAK0a9,MbV1%9P94a'&^c0U^)jD3&K7+U&p6:0QrTsPsmOR9dC)2,sg3;6s4US+QFXTn#,!:;(7Rj?q80++CHiDqNsB=:p4;j+'a(>UT<TT4cY`+%JCrSoj+q4,1$T7+nbCZs0%UYnUI(5;;V;:F,XI0Do>8=`6]PFtl3PO\XZRY=*^_iA?.BeB"]]9g4Gtu/>>R87iYod5SDXHQYt4O*%;6K9j=+S8'K'>WZXopRk7RcJ0Len/`VIr.>'3&I<3_LS=Mq8GtI2o.Kg#sSNs";W`IE3N^!W<@,&XG]@cnSFr(DZh$%logIKj>X"%1(^KgoO1V1G>ubt\u"\:fBjjPTVtb/q6aucKlHV<KP\?Bl1q8X:&jZ![;%)B^F(iKD$,aWMf#'HLo!+(6L*MCr&:V\MN<'-fq<ZJ%<)5f"d9,cKZ)J3r(.a:R7"Q0o7VNr9"iDV1q$`0a6>+=kdC%=Q)EM&8M<Ug$97\Ic1l"F"PpjS]>so[98@1<Z.3f_Nf89t@P-Xtp%N'r\i^Pe:;_ZZs*!81e6?D`mA_aIC1]U`Wk?`4KE)$SdEij:=^'T4"p`["h<Na-iXR)bV(@+*@N=I1g/#sU+(Y4GG4JPk2H:Qsdq%,l^#&q%f`-V)OHT>_#asa@/Tl"ZM>-5U]lB\VA3h"lW?6+FtgGh%cT%=4S-S#%B]84%*jWjQ8jh(>acY+%\IE,6gTtb$\:aNm_]r%,Qa8b0G+nT<"u01=UMl_P`j")'3GN@PH?HgY7-@T?H(:dDkYRW'of40I+tc@Njil60ZDeh"NHpJZIW&]>FWBSXZX]^;f%'>#uDrV%Cuh:(/IW]DS=Ih<M`E].U-XY4a<_&n$PjM.2YOEP0ruB)lRjXNBigqR:[@igl_GqincC.)'B@fLOtb"1TZVr"qLj6rm7Mi?PrW!+%r6JP%%QeB=nX.7T8CUCj<m0^3P'UEJ"Ah5n,>:VmL8L$rS_`RE=3(D_8t'c-'hu^$b3@rtlEMP1E-TJ^:Jb0rGZ7(aKQ[JfO6)D1%,G++B_ujM"P8XK8'"S4QqNu_<f>=j_88q3lBFV?P:]/l+a*#pB<EF0D5?sm#V4tI7>L4D..^pP2?SHc@$rg=H,EM/ja7:q&,Ul-n%q?1ktQp)22Gq=0H*I5T3P2]>-FC`@BVH&aWA-$/pU6"W?a3*c5pT%)W:CV)#Lbo2nb"rP,_$Zma-RpaNDuf$!K?*QWT/a`aVQ'_J%Mo:g;/`[QtHQhq3#T:[,Q+/Dd!^h].U<B7bS4&m;<'lNZ2NPtZp>\!%+M<?CU''s9`\AHpZ&k-(8Qa:q7`r'=5,PCgqb*[Mq:ID>%Q0gu2Pu-+in`9*ENlHoLUJY@#[iVFlJ3*f;5!ks!_]g0Z[Zc"NX*?(VWYj+?-5:*Y:Mu&bK6T\76C`LYGgoS)+u^?:VG]l,8lR-A%Or56+BDs<__-n<2$dp4LJo_4`5$$\TV4>Fp'bq]4N<;8K&JWBZ2/3ibHl9HPLQ"P6@7<?'<q*DX>'u#DiQXbq^2]BW)-:o-"dcG+%7"U0b;d@0`4c-,1`?hOR(lPA5$&`bcjQR"(@7cS`>h%b2,S"u9>f(nAHh1'=MK.;i<lQF:LDm"T<X"tsVC!`+TO9Q.#IZD?>fDXF%6-;pPHWil_];K3cZ?obEU2!I[3)oT.K0s3GX)P$(Bb_,C4Y>]Uh:"+hff^o3;8'#A,dP$c7O#IF=#!Y'3%f&s"NCCJ7A9`_;<Yc%%73OCrWT:-),"=&>Xp@Em[H'[];Z"C+(0W!jP]T`W,Z%Yj/P.33OVO$Md!C$gOru>V,XJ0(fYp>af<l<D*j-+YETg=7KNn\P,m]Xq%oMZD+D6"idfs+#)Ot?taT%Mi#Mr(c_dYu7f%Xonj_1lRE.'$,n:["-f?$K&n*Oaf=1c\!<Z8Rp\G"h!M%a,Y#\XY\Pb*On,MFiA`%Y=.M(lJ%(HY@UR;N"J-%+,u*Ij![J:7I!TDB;;:#(psj:HK70pKg]clJStr7"m-C]JlkqJ&ENtKN%.Fe>&a^]crl2$Au!QPVue'P%RAJ;[0ll"iM;Z5[$(OPW,P?\P[%]73?AW.3BP9!ZB_#Dm1_Nm`K1T)VUcX`d"BBm0WE2-t.>A3n->DVD(id&\7S(p0S/Ean-Z*;M%5"7.RK9JQ/E,p@=kdlUT_MffJ+r;KE%t(2V6_33^K`d3ja,e%k02_g$!I[=)"A"L3#nU"0'\tX/\.lIDELq7hK`u)0Le/LpkdZ0@%`=f\4=[\A;m.)@F/kjlFPpg(:L\j6)QPQD`G;5I[g<s?R'R8\mq&goeK]$p+>75.!q/UchKm^AA*+)JXD:mA$%"O(Hn1R^I$sk]Z%',TpujUICrP']OP#gd<PlGLc$*hcpX%BbcPO;KejSu;!G:^0SPCNSW*b0+e+M56(Tm&#[C54K(1g<,XM`M(W-+-+oik0;IVj)J1^%`h!LmP"FhVgj'ICW,i8Ci!F[o4VFnN`ab7ri!l?3_8kAj*fh2877lF18m2c?VC!\)fLg$rG[3RTf*F@UGc+Z^PS6I!;lCBc-?E9,%$'-N-!qWZu1mX;4=@A+F^Hqr<3uZRCjQjbHk%!)H1lA1a6A$Z+-(2eroj_+s#F_t55NL?Bb,5oD,E$;_&Qsj>g+Z6:9-RXSW0dsp%kE[53RIC9M-3f`Vm3Z:7&oXB.6bJQCAq.W[/+>A0"ZM&ORFTR?eeXqq&5P*1j,QR(;oN4G&[FBQ/!28sgLpk*d:$ELA<B!p9)fTX%?1fmKl6YetY=se]rC]:pV(I<Gg(pqP"ej'U=Obg9WY``]U5HdBn!DKp'+k!Ad!@C%+!ZYS?T9ZN$nXD.9CT:8q<<)>%WB'?mIZqT%[e$4VBn,e%B1(tW-(jup-[o37O%+aTWBL,"F@jZFl#[V_`gjAhF#Ibd_Kme^cCi(u2Wm*QIelQ]eCXXaeQ.3;&IA#[e+*l4JaWH2%/^a7tK^hQG$>iA':3m#;/eA;"d[YL3XY*d2'k"D'F(_]Fm!]KA'*Q1RI77l]k'aQO#XkN(*/qZ9H_0qO0ca%`^F1b4K+Zi>JQQbI%"6;6nKiFRc]7WZsoW4Je@*X`<R-D)[nO6[Y?1sVJ;(Dd$b^);<\!Q78.\i=9(O6U%>kbk6C5N"nZu6F$>t^hLrI6CA0E_Hb,F_H+%D11n2JP/"/G"1E)J0RnCkSjXks24P.)Y>=UCYa`47]0YGKmh7.bR@I?GfS%D?q5`Acg4R)(T]fiF95k\rY+8;^B-Uubf74sf7L;^%;;Z@@+*U1an/p<ChpnobFeGnR1].d0EDDla$4h[e41]'m&B6`q'(ub6AcBI9^1A(?qM"m1J!0#f^C0'/'1MkO5@\qmd4"q5`b]k0%)>&.V(ft;@TDo"<%U:/rr2<8"LRn);<#4Q2mg*:5;\fp'`1,/!&@^.,:*O.$*$3^lrd0Aeq7P"'iX&!Mr/Ce&S6onklK-IT%KOE+%<6L$KnW(YE%NN0EEU'76#X_Q)15QY3TI<1kI?3Csn]6k"]XG7?D3oUgkS3WN'23&!4J!Vk.&-]>%&6Ce=lDC/J4`L)8kruhZ&19\%:)>bUj6Tal=L"]l&@u=L?>kZYSB$M#U,OCc'XYrB;Y#GB7oN;*9)^h;>EqPfM91>tR])+@@X&8H5m7]UN!>9.-,E$55V%O3Rp8Vi%%tg7p?n`mKQ^*%$Dr?UG/AaJWr[W4Da`"G/]!ELl\'>[U49_7b!:ct39J_k\a,=pLrJ@B_7#?3i++m.0U&o]`j994I''Z.XFR2Pt%cl%-rc0BS5;B\A-"/(g0Qb@'[KZmn](\9EZh<@1+<$e(i7gZceW:W+XmH/X-gRUSh7ujF5.ZiQn`Z2j.C68E"aG&j8SIZekKK<V'%X7=CH2k!F1Ma4n+$I>b0%a2L4!O&6th>-iR$Ll2+U:bXn<&C7D3Ns7g^YgQ0aH!f,'#+H;G&-Ua@%`PLq.0?b"T@:QJa#n%/MVY+%*qu3+8%:DncUN?ZQ<kbU3%loFq$Et.RD6CK>aCrTD/&@<9'sBD%TC$PomnRibI6@@[X73u_TatUXu#HaL.hJ@n6aH0SssT=g&'*F%I0'J"[2LFhs,aMT6Yj0e!V$?r69#*=="n<u$r*C*!<PN=BQb@XO\rg<fDXBPr_%!Uoj8lJ*p*s_,=f)`bedT.E6\j\mhtop1;biM%q:4)IjjODWStrM49mG:pl<"IV:e]\<Co&)f[+$[0.(h):i(!2VBGT'2QGe`RD3r3!PTH)7%C_4gOfo0V7(F.O(l_C+Cb+-dMF80,%/-\1q_IaBs]*'nre1@;a"8'&f$)*T<ES.BZ4(`SSh9dN&0Y(28,J]O5KoSN>H7u/u.Gub9g68[8Ag>N&!e(p!^hOSk%TQ^:6Le9K%Nr,+aP@hs]H)VbL:P.CgIq8@0gQk*tA6ena^s:ZW8`+gWCe3s8=5PI7H\8aa=T,F2#Mt%h!,C3BVZMDKs3*`TFj?5[kelD%nd2be%^ttt]C\0>AD<K,_CBoaBB6Y'V8ImphJEb<kD5fa&fU\/]LNK_nCrtm[Qhb_+?J<O1HM'#KnS<)h_m^1XZQQSFapHZ[U?[C,6Hf.*%\1h[)aa(sKpf6X`EG%=a@/^sf$iju_)?;/F/PWk#0gL2e]kG<!4Sh"J_$b$soU`8do3_+RBF,bAa4%g"P6j>T_RG^pGM;B3><X_R%hC1g,obYf>ZSI-l_urUQ9rUAG0:_MC`:nc?LPu!Tpft;S[+"oUnRqu1#6=g=crhP"$fF*:\7V`?+$f/m519iE>,.\=-eFtUgc>UP%P2F+uMn`j,3SqZqr;D\b1f#pZW,0pIg7os2$_P`Sg.c+*PEF'hJ,Kns%M8R72@q[5G)-$f*R)lr4!MmCkLCGDH=3DYNO])L!*]kM%-gUT5X`q/M>@N1C`ItAh&),C3@Uo8#X85%pUSn*q^"$Q?J!cthoX`4+O<+=':A4G0@;=YRqA_Ui_%s@MNdpr?!+YhC1mJ"ZG3Sqr%ci;"_nNXYqk+b6:Il]7FO[WDD3lBSJp;gcuD6<4jc$H-IWDmRdS%n=6k-'8\2?HZ0DHb9HcTuL>D.c>6iBKCSSgTPl(:3l*&&,dF%n8l/%5<LT3\1jJB9W0aQ!0Nr2s'.CV!Dl>S9PsHlrs$M.id7fl;X3r`e)dD"O.ZI1Pkq;50^^UJ4Wk5O4-&Bfj4Nf4@tYlf@N*-3%0^F1HoUe?B3nr)W1MocJB6QD*8l"7=-2"Zm6-fO/Dbn*5mB=713Lqa7\33?+#PruElPrZM&is;N!9bkKb,^sT)iF8X+8Nr;bIt`d%h&2.UMn_sE%d)5;HdR$=8IT="\8b2u$45`!$L@mIOWdTXR?)?PQbeCmrV<qo\ijEmV89p/n$ho":JFD=a!&@/*(<A(H:so';h8Y[%QmK@oJb]h&cM?DUUg8XPc)e0TbeR,Ec]&`Li^sQM;F[oSq4g)kacIAuj],!PY\FUET/.nq-:['';=n]F(+\slc^Y%F#EH\Ai!QS"%_CeI0=^LC&;(j\uTJ=Ql^rc(9?bQ8:dC)AP8a!0<lUq4Lj5l*em+3:91(hiFdtJ"K\31pK*jnK?_SG2REI+rWLo`.Q!_,Q^'G9T@%bhBb%]V"encMV];PugM'1-rOOo2@PCcKNiJrm@'Ect5ni!&$q)mEL)'+i(oYqV;;tWD4Dh?<D<t*=ZT\QV^uc(SL(IJ>;r*en)Sr%lsMZ;oUQAoiU+%C0;RioSq(-2)WF('_uGJee&l\fU9o0sQf_Zii3!",WK5D,IoL2:^piuN[lo>oUcCeB#&OD/qU0)7D99N+JJoa!%Q+d<XfnH"i^"!-D_jAi+lF!'FQCBI=&`U;kE.#piGdVC@i2iclg%4kEO>cb?hMe:8Dup(sZ#6TZ+`:S>f0GE@[jO>U))_=9*b.tY%3'p<PiB'_D"d[6rN>$q!)^p=R1e_B^ZGT%(9h)$iQXgeQM!M^,&V,lq/HXF/Tg#PBZ659pH[*fC79C-@_gneHq?WGq6"n\_]D5nM%lLb1nd/riq51r,+F7AZTdU&&!m!LVTNPXr.`:fj94kmcWF\_pfQPDuuiG9ip#%JdrKLS6+[b#OS,sk:!;;:_I8rCmq.i+S^`EIf9%$Wig@@G=#ET:b`S_Q):uVV);OJ#46:e+qp;_OPOr5sr#d*MN_)5su0[T?pHY\m9[>)(`epR<_`d7ac)^^"2#%'^AF@i0[`ao@RTP%Ybc^eG"1jO3N7_BDJQ3fRS&[X[4MR_)L_`7o0&B<XZk7BX_-&X5Qsen).B^VN2-(toPLqj+3%f[I>s"*TGW28akdLo+5e`HXJ_V-%^nNCb$^h'(q>`[iLJ>U^L;t!<YqR0o$uD'BjE#(`%*BVV:p=%M4?"\bFkY:!"M(HS5Zti,p(P=eCc%HGKT3DKS$:;/AJCkIo5RtQ%cIJ\ud9%HtNOI'0D7!nFXiKMQF'R#f5_LW&5>CkAk@>1iNFpW%FCM]7BCc\!9`YcmS!1fR"F)8X4=?dNF)\=ir7<JFBiu&]N:^;&%fjS3[*T::]7').jV&bkWN?LnWBs-=_\d&d]7]#MJgplP83(.nGmeEuZ#och^:)DeeK$ZS`5YEL]%&e$[>FYbC^?;RSWn2M>mX4Pr%[MhnI&>ScgO:jN*qVniCF(!nL!G!kr.!0-^/LsB.b`@^a"N7CXA,m<2TMc4g;](!sapPs.X@P2qkIJJ,@S(uCWGZ9p#Y8=pTWhhQ%n5qQ7\0/G0[l^"I$6#^=P>__(R>ne-RC?<-7^E!4OC?J/O-/t"0f)X,emO8W##LmLD)1)o]4d[):LFu6B>(,nCa3+u:F=RX!0`?Z%/2M)%ejU<iKPW[2ZAjG=ShjW_3RDmFFR^p:R8TZJZ,8KdNm^&m5T:p2>92SKe3n1Rc4\TKT(KeOMLES0J=/&PF;sH60M!kq5G1ND%l1"koilS2)WBG[DgV(>Nf4q-#b0sO)F?um%0gckNRqsKte,X2`<m#:Tb%UjS=J5X)\gB0Q5+IqcdoNo++`fA[#LCkB:;tAM[SC5t%gtFm,Z_kLZ<&'Xu#8:Y!K&X?s%g-=bc-!js<W.ZloOafL)lZ.:TJL<=T;!kCL<HIX=/-A8F'>MZoAO']e=aq1p@1EL,<'#:P8&u\%-?i9)=q025XO*-XVMh,pLpLgY'W;9G3H/.@OR?<:2c88RQk^p*Y$"Z"VcN\UrWQ\<KA!2q="f*3d;NUAE*1@_jh1rMPp-k>TG6.N%NX#,T2>E,cT@'-n4Q)Ttp7gFCX"TkHH*k%-(8=POh9f-TSHX:8&GRFM)G):a!q+L>D+G,2#ijAWg.ltpf&1UW7fF1ZX7-nRA]-Lq%GKd:?0qD"MaF1f[rH!ShW6PV]EZ@Mj2$N\Xjf;<n)p3B%oT[eS[-4CsAFujOIKA:'3L,>AF5>13]7PaBB#d;XL*,WL?;sn0X(>MG%ls"D(f8A(OYCP"RdJd#4Wa/=bcoZ(R51WjNo1tdb.V,d?6uSqYgZr9q*Fh9-\1GY+1ltr.?Q-(u,o&k90<BKHL,TVikVB^<dT?In%[^gP];-VrD'$)CT(BmMc7_j@u0uC0OkL1#NlHi'+AincC'nZ/?@=!PBqZ(N=4i>nK"3N-QXFq;=NAMJZ[&)`pKp"aV?h_<CEtbfK%$e_%a7:B,0O>6uscCWd9+%[_:N*:"O.Km1DQmbE=@oT,01,FFqIk5aX(du-X?5))K8I?K,iNEQ4`2T_A<]-7r\\2"&&D#WO#aQ%u%%HHD4[]\jsTRK+5I8!<H"5*eg3cDa!j3FG`(tg%5$=G@XrQa5ls//TbVh]T)e^YY6b"$&,a`=H<<OfKHj-oc:%rS3_`OF6Z3oTka%`+cZX^]Mho(7WY*_8+fA9C;8!rm(WgN9,E3Su4dr(C,BL=Ocpn-dL$=$m:n,/@XtA'^m90,bn<F3H(ViC>T!"Z\p!M]ms+Rs"=2o%5Gh*C6Mf#Xr;i;\^L;*XGhPN:/GsoO?2i5i0:elPgh@9qZ`<3Q;@T]4FMWGg#=(/3?jOF=;])>;n-*?.HksU@_$K!&TJdPcBRr/N%I[?YT8I8Z)#%/5fTI6f;!H>X!$)%)SSDUCWk0sU^k(&M&aIhB,R-e9Q#8"0gg4N_DdU8plPaeWTCOKDb`kAf1EfCCd0?_6D[;ISM%P9/*JXBRGi@W`@MNN&)g9uW@JZ3+[[l""cCqm"&!0NS:LVlXN`k?*lqb&RKoX^2,o%S.WP3V;.k_&pa)Y3Zdo]MHpqca=615]:j)%n1-DUZ7qqtEkYO94\`jeICMi;Ab;d<q!:5ZcZmn*LVR'RYRrGIV!@_:oeg`[<EoR.V`8@Fjp0m_XXrn<EjsTc7J%j*J+6e)Uh)KV%+&D3DTW0ZZrE4,i?6!K.k2l<W:S@&=l7P`-cViQWehjDhZJFPcqPdfCF'3Dt_A<+3]8%;B;@JdSd#^l_kH2eapN+>#5)HtNniQ<T%.n$"]!B%N$V%c)&GIS#F,L9B#h2ZVMToeGQAaoBL,FCd0<,p6eInH8F^U4F8^f)]\gqOX15@R`u;]$[ig+k8i%R(N-hsl!kk%s;.%V<]bUbt"Q+*&mmW/9M`=8RXIG"A>$/_LDFNlM1Jim^c;ApUS#c9Ih4Rc+VQgB:6q%]:W`/Q^b>#BhIUU^LB18-i]B+"D1TZF*TDL%1jJYd0:+jq+(\bNX[oF@r3hqV^FpX]7u_mBj)'6pJ/K&>o%0Z$(O*<$]Oq_.LB[J?3`oN9c>O_@N0oBDrrAd1;!u?+]Z'@'HWjZ\%LBmA,"+T.!D;NN)I-iNdHM7:O59l^bC@HDt.u`72Sri7lGpeJ^K.laAq"Q,!?,8l&)f/U`H$J:eQTk<.:@?Efc'CQ(8&utYMs>,^%PKt6Sj*RUY:U,i?;J7VQ^VQ#H?GN!Os5nc+\pZD^pbiJnp&@@_F+P"lEE`3T"bh%GoaPT9&:HO=j<X!e2O_4e5OfiQopui%JL$N`%aeOC$0MT9tB6=3UE/$por:rrG!&(k-hJ!Z_a]=GlDqTt/n:<j$rL'M6iNAD7I"=A;H.1POPoF*j=g9d-V/I,rE7L9:&G<YbOBh;.%:%UA$a?//WimBsB9%d9"lOU/RI?\3;lJc674$N1.+R[2GohBdb.J2ZMeLrbJ]cgMBfKDPI_!su1'4ca!]p.67l@#N(GrDagq9MUG%,pieNS)^E%>l8r`IjXpA76="Ee2'mS>&3c16?Ti*9?fiW_U'Y7$/^8sjBqX79&]L6@E%>XOu-)>F0U9&]]3E^iDDQ<I-#qNB=$\e%_0>Bl/<dkh](^:A<r@tBn_&/,qPM%Q]iZn(5Dl&O>_UW'$D-M_:Zho/"6d_U.9tu+Ns\tVf7cFn4njTJjoLJ+Tqh5poUXpj^P_qa%_%(iPOD2,HnrSW=%<2c+mDqIraZ<gj2ntTNO;.cm"g1.3fKYEOYT*81o1I-VCZp_N=r<*'cP9f.Pcg6[:P(h.pj-K-%T5&qR2QdW%mG.W0^IXn%6*D%O="`A<q"*d\0ZoA!gh5o$b09-<C^^?/qkK%<)a8n2(G=cDB7Ts\*'2lc]CUetV*&N'X7#7UPj:8h`tZJD9=_q\%a-<o`':-1KH#\)o6KeD;FW%.Q(?$=o^Ql*DOcV[""n5i^BUFlcf"\p42i!u_lAN+c;RPj"+f_`a?gckjn@"A[L-*Rs9>/aEF&(G=%=SPMipTie\p-''D!)&ih&OmaX>m:g)/BcnomsT=UqKZ@0:lZ#YTDA&%ktF/7J86i>GAm\Fh<M?e\ERT4U\NA&SBLZEJNoV9,NsQi%(!'+,K>CQkFP=pJ@&"Z[0%PW>j)W@6hL6J>E9!FGS@^I9j$KTgi:F:l#idkXMchl\f*TKe[>Sh)pAmQm\:,fJ_?[`m'DPd4S:%.t%,)<=R$K$-@/YEo!#8[,MZ$m+raJqHtUH`2IAgDjGX9bYdY9J:N5'+6mX,Pg^,J67c9(5h(*Xe9;EX)d?!eRAfY4ClG$ZK?Pb\([`%%QF<s/AJqfYL$+mTHM/mS5gGf&P\&k5)l.jXh)l45Ha)311NQ__K3gdm+j'gf5rK$Bd"%bK23_V1LIr#^g',tKOoi*1jjcSkAhd@%EfA$E5?%h?j"?,D`dWE'B6Zu<1M%.W?2Y2s8k))V9i><cJirZV6GC?s>3ZYq(4L[gL5]<1G08euK85YT_.F6.0s]ln",t>PX^52u%f+<Mbb)jt_B\`.eZH=GX5KR038I>-H:l/8Bc?W&$PD>Z6IgpL#+@CHP,Cr-A*\BYM[F.5+9)_L%S0"uW\nm,&XLqQ9'sMA#$NH5;%T([ab=f)Kn,+;f:Td'/Yam*\SV<9Dl0Sj^[@Gc3$`"[#R?<RLG=bWg4[fnlH!5$?\&KqG=#(d*W"njNlTNue1-Sd.hY-\)0b\6L*%7ODX8)Z;pg?s*%NY@5uhY7&6)i7!p:23]\SQa(UK^6/hKTuMVD+i^@U6+!W`8CESBj5O>M*l^DVEhk)SPPk+:f/XC"cY#L@;X%rS%OM*`J<,t)37@Ns-=*_nV^d0&)3;1Zj_qb4im8n;sp7<dYLVJUHelc<,q\ASYbZF_&/XhQiXf/0t(LpX+rqkL@Yk"eA2)'Vjo+]8Z%qT:@u&%/QNnU#Q["D!8E!gj??)AV-+q<LVOO__X%*?a=#H$(e>;CLttV_5O-qf2,#1=a)Jn+iQ+pi8;DG69e_Jf#&N82-4gj?i%1%e3>G7(l8kr:It^EnT=O!3ZiiC1mj[\L&`o["([?]N[iLR%01u7!9,./4q(3((Y:<c33jZ+AtR"gnS5AD_P0n/TJ#ps-nH9]=F[TL%YQP^4L3O8*IR78U9E(g`2?YZq#6hARH^,G%U`*Be>PF6#V%73Houk0:-`P*!!OeALY5BYkm9cm@-JBDRZt/i@SJD9BJYd2t(ZhQd%q[7'L%iN#oTO`BHEEjrpYG/AhJsGtln+dSpKOTnFf'.;G<3PHAcZhi#%Q>a4XEYd9Sc6R^)RL+Kk9m\4h5GddDqpod@L'MD4-4&k%FJmjIHW@Eg]JjmP6i+NA,]<]>FcI>Q^JV!@h0iEjlcOsIAC@*1?E/S-Tk8;lo2e-4ZcQ+=r]$^4le$hNc*p/&5PY*@Qg\7Q1kaYd%.gb'E5N;4&UHUro0FA]LZgkaBSq]Mf07L[G;IIR!06Hko6X[d)o>:"6%htMqB2m_1.;2+q.h%,j96hZo4.#5l7iYd21R4Oa69]Qt%IL4,8ig%")U]!f1ZKs90'fZI`-fWtY=lHBK""2%IplZ&-q<6+2?+00o6;:f8llTD"L<E=*S1jP<BN1N]qNB;$Y'YnMJ$j4M1F5Vp%>q=0jUd#3]aW3?/$h4Q+].khc$INF9ircc3Qa-[3?,Yp8Hnp*kP[@j?'=9.lEmifIX`EJ16ijp2s2Z2cH4u8=2>JIC/![TiZDWl#%3X+<LHKE,@(<$+o3eFRNY+TA_OjYV$B#J<P4DdSc+9U*Z7<#i85:YO9F-o.Y42,u,]Ts1M/LYDe()@eM/8;a3/tc2q_=?]Z?DZ9n%5GI1m=KYUjdI+FKf3_KTX$a>#/"*YWGNJ]\S^?&q'Y<]9F/d?TTmV+?LjPCY0jei>rh;7\c@2[D;YVE+UBKiGLVN_)+,lai3:XOf%0?*,qO9RgW$ES_0T>S$I[?Mh>ofa#kMte_8`f4e.,u\&<$]S`Y$)%$=?M5ItT?8;a-s9\V8>bC_rbj!I])NeH5AQgn>jA$"?3T7s%"C"E[*H_&u#9Li&K$B)PU`JVMG@M"o+8b,jd\ZrE;9sK>J\JX$O7'nu6L"F1@Sc50nRSl<-O8aWDXq!-]IA8p"4N0>5*jAVQb1M)%:LhWmo"gZ>#klGLT%o7M_j>TCRsGQ"WFTsjnAjCU'ML.Nc0Ok7C@IPa6j>AH;SqU"-<rT[Xrd[IkN0/CT)K5+OqQH_g#"M,L+a?Y%pr6ZfQMEp]p4^c\p_b3/`6H,:Yi;3#I@:t"Vg^*D!$#n0N"(Pi)(^`dgaAbriKKX'2'-i'=d!-_)VZm9\=+J,2fZ?+]jBlG[F%pW%`$M$<Q"")?k&3k/^+`1G-TE:=3ri0peHdfF4ha?:%II0\A&+;<0>N'"%nIUO\<>9RK$FWV;jlG+T\kro[gp`W.IO1jq0^Mi%Wd,e%O4@Q4o?Do*"45]di,O7SQO@`G'n*8(J2gfp>PlAq+:]Ci<fS\9jkDgNk`HU[UKoKVXm^QhWoZE)V'#E+/6u/S-T8__mn`@L_FOR7%FT-S"!H`;"Z]11E0r2bjg!WO]Ci7)_\lo:cJK%a>6\`L(Y]P0u).g<3_KSRQ8)ZP&#CZ%C\S[t":&Nr_SS@RY@EdM>.2N0$jM!A[%)FH(o$=p=$OtQm(d-W4EWo?r115#p4Eqgj7:Nl2_4>#.Xo8+UY8Y=;+T3s_j7(DuDXs"fE3AP8$U]$??S7hu<GoP,*P5&t_\rPk4%o]Q#=&G5N<k0G,R'2:QD4)o=dd&ObI+'t0qPN>X/3#M4SmHO7kg#);o$`!K$d&^Lg*]N7IVcd'Y.AkS'gb[=U7MR#GH>8#=*q1rL%YqR=Zr%26@P96Hal$)1/T:J1mAIoG1ToA`gpBUqebOAn("dJ]NDc(4HGoq`/J4agGMa)TSo82a[;$\Lt!5gf)!kI?74AY]MLLW%$%CYs;_9ROEdf)Uq.\b,'j0.Fp\53&M1V(hatmMB%%Jccb,?U!-Ek@^gs-nmU&\!As9Efhe/mJuE0>*_@Uk1?TjkHUh1L1FVD#BV$q%W9mmk1<T+j^_gQ\Vp40pKr<^3m_&^c%.0>*]KT1V5Om/B=%AI'+Zeu_`4OdU]0uRm==\hbp\)t!D=70Knck?Jj1ReOn`Cj-YM'N9%Q1eWHQ[ZUg5s)h'o#P_!?$R>hMYYR9\_\Pu8lr['m>'KPpTR^[5E!/Uel.s@>7YN\H!Tib@:k5'H0M7!jmN[%&rt/+nC('dd(o>U%LZu(9':\eeWdLC2(M9^p],1OK%u8q.9)'l79R9?EoB'9F=EH^(X,4oW#&T48T[5<@"M[Dk]f6OfhqG1Z[(c;lTTGI]liOu*!f<;/%^.04OiedG,/RB4]GeI#qS`)gFO.H@&'7VQ]IU3=Aq\/B&f;qqg%.=0<o:B$IN4NoDSb:[I%ZphLG'>^c*G9"25cNuNd);QfSL8U0%M#2Na;X/bniX>1gRfC*X<a<AtZYkuFGPV@-5_%q_8Pt_EPJ_eD-6H#iIfU"Sq?&_d]ouA[PWLi$cZ%hrODniNVQ+]n6MW%#AHX\'%/f$MQH;QIUUha9E_L'#u]&UsST1$]GWM$a1O)VVhdY0VWFdJ.5%/MdC&N=q1>WjDcAX`ci#I7TG%pKnXLm?#3jS-js$uD3T@4h'`%'inH!Q$33^epPcW5T[3VWjd5lQ+Pj'&6aO/o"gM]5]&NOD^<(1`J`)!OPdb?;'"%3!:Wqt!'L1d+j_Xk5&+uG>^1;0RGeUJrf`"[%YSVI1It$/(:egb9h?JBRfAKk1!qmk,Dqrnnq<MbW4Wca[GOgs#B<4,a0XlEnY*IiOa1_Y"([-e4+V;aW&\q+I^FI3d1s<b7!(N6)%k+P#'c,:OA.mn1M6Td:[51\OM+=EMZUC0L`"@?Mj7a0^YbPB4'ncUZHEE<t\q4$[0qs6\`\L=l-KI6.7]TK-;&=<jlZ!."re@<BA%E,kr*3A6pdZuV*k'+Hs/mK$pJPJ8c!7:1gHA&tYAQf_6Ek+`]pPa6T>#Q8^t*HMS\llEK<@Q4hCCH3f_#=,UTg-`f?\6]q(^i(S*%d,^Cg:,+:fE.$QX!ZHFaV=$>8:)j?V^g#4'W*`(q(VdZ/b'U+3V8D&6+eK%1AkHEm@SJSH+rh[0QDIp@IsH/B7%\j&]f88P-:irL%Hc]^aVk/h8NUKd^rlB0[k2t$%JU)N\YiYq/_-X\LfRHZ*n#&CHE;@O[.4;96TGM09?^!f8h`.gIiO44=jF/Vtmj#l0;K%u8b>7`%%U:,&_?bE.SBatDS#89scXY^6N`Rgp@K*Hjub'Q&H%.-A]C-ZE*o?&KkPeFqCM,#=^5d"Ge!<j5O@$jIYaWI^9!4[PlJY3"g^C'-e%oi[A=g;+<V!ae3VR3*R]ZZJ7Z>0[i_SQu$(YlHTpGUT,n4unTU*0tn6i/Fj>'91I]9Lj>=qFb+CV$B8>IGudQ;1"7m02s>j<f2T%%"C]Ms-7e[ZCpqI9q47f"OGZ(6mu>L0^E;5n@QM7a$pHug\%Qf)fam+d`T6'hFP?D6l.^P<ON,0K2d!<B,"Gr]>g&a;^Cp(:dI@M(%RL@*HXE%FFci!Tef=+R;NEcacKBEs#G;V02=7M(OB4YpT9i2FM+C.6B'P)`^BIY32F8Tg`^fjGb6g2t=cNia]RI'_IAWE-<csP5Y%5fOQP>^ql/E+bHJ:aCN.a`1t$DO,H'L@Wu6a5O0fbN_CSIqRkV8@:Zn$)O[jET]YfQ0*s@`T6Ai5=0?D)33j;&GQbP;S/6a2C3&g%lnqgT?o;jO[:`0dX<h9$>QN-(7,<B.p5<7,109(XFT$=7k+>QOGH!tV7!7NpfFQ]77%^Tt&*Blc*#<K`Msa-qf4ln=eN1!:lR6`p%0)jCm3.I:^Si#s$`t5T7.KSY^D.+2.-$\48E-V8UbH"4d$8.P-frF-pUs#s'DHo,nOSrW?dcK(,?/@d0o';Ai^D?))CQU6a(?tB.%d_0=D_5q$fWL$tEHMOtI=0PK6Jsq#1Bi8?;="g.;eT)\q'iq9"\"I&94mEd5V-^u%oa:"]YHSf8$>WMBYSQm=)X>;LghbEAYQjJ%%CXI%<54(hhZtiF!&VbJ2^oE5g04\/=RSCX2d`hj8I^'[Q7b/mALjd^2X@'R][7E6^(?n<>,2J'0FCAHD]9F7;K5r1Tb1-k@-`t#0%V4:H>@e<ObJsrl?F<10$b3g<l_Mp;i_RPc%"brae?o+h!-E:KfJLT,1UWSA#5)@k/eJc@J<>3-t*fR,m+=u8\$bB_;B6`Al*6/Dr%MVhN5S!s0#PWG_+TbA2IFK/5@C\9ui'X,+=+p<HI1;Z^HoUQ(Q(pZqZU\juBfLO_HEn:V=@K2&=J+C:/^u'h/nPq%_^UTGV6SHlM%PFG"7oU2cjC\u_O2N6A4b&7H5k$%\+q'*5*.i@tb45;H<G'NBE>s9Q?JaWVap$io?q3S(H.rb#TEWru]JI?*3]r6:NGPeP;F('Lu%#$2^4:Dt>.80JR:Lem%*$+X9Zmiu(5H-=apqaH9EP-UKN4tsT2bFL$DfgP6&5#dq67ISCIb7ds'W]]-;1AOV15K_"oUmK0=Q+n.u%\d&,`7AK,,$&'Srj8ngZcnqcK,q2!l!M'?g\T"p0VkK&cSu=4.KX^48OR!qXW98m:<dNli`rL9ll-EC9LM5[\>tW"2Gb1j''>NcR%n7QkH^4%W44+35t04(gR40?N[@]@hcOD^t7#FBRg>LT_&WAll@](J-JG'ToEn!<T-D=T@-4X"sDFR!fqh9J07MkEA6Z#=R8o2sT4%2#@!_<Oee3h+m\o4ji4PLgU$3p#aCsDXL.%SVm=4Ah0K4lL]_0mQ]MWSYBe"\_CjQk;hp_*cr"lo$\@GVbN4BKAK.F1$YH-!A/K;%l8<tmPl*#$?,CK-X/d.bNb0o$IaDeN\jB#-`tcKeA#%'#6KqICADD$+H966+)0B'HMA)$fdHu%IIuP:f=p#V25!Mg8kBaf(SU9@O%P$Y'7nq2/`]I2%/HC])AA3$]4$@5RQl9X`29'^[>I=1-+YI/0%RI4);C%j</f@'!7iT@.kje]du`I1P^/(ZJBW@KOEB?^P2l-Tia%Y:<$inXSnHF;gc3gtK<ij+U"Ol!r)@ku;KLLNg8Wo#n83Rd!b2X$;q\HC[+Po=`lH4?hQ8&lH-l:+qX'JRPIeiHm:td-7ltCSglK%e1%1J%>)oY0B^#t@%l=hlhr)Gf]hKjmAuu4.HLESk9>-5Gt@-CGd"irCjgGP$/JAFlMT/9e(\WI3^TAugcBL>kO)rES3a&#^:UlO%O1]A.pEuLV]hST(L>BSYk83js#_%VNYDjKnI]&NlYFgTunW@^eYD^aBl4fgCX)f:?rJ(nQSQ<8pX5@Fc:)c3coUMNi24]>*:q,PY%TP/l67*Tk(ajkC/mCbqg]kL6;jo'67G3WGf1l_I@mqk(6#J79cR$"asrA_AP+Is"+8",Y(OLr#]ThYbeelu's)Ns5iBD\p^T[G:Q%KeS=/aRuhl<^<Rnq$JX"R3lpO-f/l/K3hWnddZ0i?Pf[t'mb;;rcB`5#'p=+L0%O:/K]r'%t?jBQ)1ofBlN&VSYiPVlC$4@$gtoB%e7n")[U)Ip_Hu_:pRgWRc>sYBb,lf]13pD(Ydc^tSI-n&=itq8[siP^=T<4]!I41qD>iQip\hDb3p'1Er!S.dSh/cj2u!"%Jeb3e%>jfHp$,4sM0X]1oN)pL6pjRp5p1iJ@HBd[-SOi:jCFuE//$FD=Yt4B;Vmu`XVh_E[j1]nPn90pX5<[bnlb>UG?6/IFh]H&@]GKHY%F4mD1i9g>Q1DRY4lFott54S7j'`pE5X)eO:=pA'cMMJ\.kAo/3mBQDgG^Q.4]Tk3P0-&di8:uN1f<rD@;7q2%Is[<]r+(0eTDmTg%CN(KtbhpTmKD,m@j2a>6(q^mh:4pH56N?H5CK%l`#P#8a(jeDlQDo6(lhB9uaq&XO[NC1H?6EQ/_H?isZEi+uo_#uujBfSa5Grk>%Dr(.h]fWF`njMrK,\>i9*:?Acb3OcM6`][0_J/&10SXLIR#mP^+4"5rSs&Nrj[[I?j?@a8TXQEg"7J%[UYPfF>PU<Ao,Z.fNGjQ=%<&Rl@pd*\nX*lg_Z>(0,;pAFh_KBslk$<Pdot;kppBL94pYLnQqs7P(hjRCA/@pGrmm%Y7(rl)Yg!"OD7aoMRrfj"l(Q!tRW1skr%V!K3Ul18$FG!A+1FF6?jgFEAK-`lI"d[oC=1kS3L3LI*BE-=GIg&K_B.m';SlQLWCZe\*!0?0RN<Si=^ST:!IfJ)Mgg]q$2,a*UX%\lEnLph%rgeJ0n.Zs&_9j\DN$1>?Z?[f7j1?YH@fOW)'>Co>\3!K5g8gbmPpn*k:'knNcQ*o1-Ph.dK0WGSNiC%UrC\C8.6(T5uP%l>DaP@*g@L-@tU31$Z,_fI<')X'EedY"0`klkISe[moQj.%Oi369WrL6d;Y%!?c0Nma5r`+YK*E>O<@+IEgV-BXua9\88O9QL@1"%__'f:AT%<`G,![$i9PpF?^T+l1%g1VMGX:67>RY)Q$7V`E=Hl7&Kj;536$>ulpFUQN!?H<rR<q4m*YE0,i`cL(Vi:7e*P<5]?sfA%5kg!%GJE3n5PF1KN\k?#@dO3VGqSVWKqA]g'Ytn+[[57)h96DF)&7Fd(p]OKc,3oBKM5IU?%=)>B/-k7rIDhZ;DcJ9)Y+;/rbNr[%@h?`>]mAE9IicIjCO(U06i4iI:ijmS1dck4joP)VitL0_&/9gt5\$IF*TcT[CS[^If;q`M1VXV&]WO1XLRXhXqU'a?l)gVaIZ]i+%RgZ:i$X=6hJbfqRZ.0_DdADuKO_'%@WiZSpb?DtB!Hr*LljgK6E`\@AI<p>alr'-9=#.ctb*qng"&EbcbT#M(XAJK=R.&8Dna8(u%QA5&p"t!O);gp1@fFHuqX'(M$D7LR'A\S('YK@t3q?X0o*tk8@G?:);)@P$a+Pn/i5Fu#QlO*(&:kLs`A)##8dUtPIa?f[8^=Lf`%V\hnrbJ#j6&+L\r)@4r5^Y^NI@VJLn/)MM=Ps-.8%*[5AKZ/TQ3)'.E'N/ofGoNdISEi+$LMBt_?)DH2jVOUZ[O6!JR*V#kalnu'%P)1O$:pSs]=>BGa".28#Yj57HfPF'FCA2"\YPr<IhjNpo7*4hRgrNkT"6BO^6.Upck`\F_ZDY1%:f:1E./ZB@+>RElcpiBNJiBKb%nFtG)d>SH1EpD7aAAYNHGY4Rl:GPc9l:>@;,uNJEAVZ,1AkBei[ur2D[EElr:`aCu.L$-AQ-?2$`ElQh<LI@=iEgSRLPb-hdZa[e%#D;KTb`N(l(Ub;]EmNgJ<5rE8U]^RDmi)]b8+s[Q'f6Wh#a9[DH;%n!eI#K:FS=<^P)lUKV;uKDofVWIq7%D^]>1N?%^U/Sm_f\k%,FVthP)<5J",s3>m?SSfF0r>07P%bsd"K9R@o0;;f&0RXY:gnH@mtQi31`RiJo`UIXZdj(WYp]G%ekj2XY23S[$pb*]CN!L]IjTT%CFI@#2Ks9i(FO)(2ae<d+$92H5(FRr>HVA3g)Sj),8eWN4'.f$d=/@*9P,cGAft2RdN+2[(U,\,X_bN[:9:le*=12XJL'@+4e`8o%n'UfMEdX]4S%)H^,TeIW8UepQ[_8NVH6!h>2,<ZNDflN_@B`%J)Ra9<,_p`K6#F[CA/\sdgs>5F(]]r\iO\m"iVZGK<u:!IGM#<0%Bq`TT[d4k]8Y3?_$*Wr=IQ'Xu2WQ)mDSYFn\ZO=O-iZ3g55Dl^)t`C!?GY(,mM7`\H\dsjOVQUP=Yl@THt4"]%1`1NJ$u_XF^&(:%cEnPGa?j?J9)s#'Jb`sfjnBJt8`Uut%0]d)Ymlo`R3KCE8m^CK!^M"tRPuAPf0=r6<fZ8NbT#RuY!4#b45:#u$+gj3>M?=/3@q7R%Ob;_5e1P2=d=Q[iQe&Em(ti[)G)YcFC.`+5VTR>[(8[^?18bnacaBLS)YjlP%:P^,60`376ekOa%$/I(:<H0A<oIq>Y!*%7C0bYX%K.qGUKDfhn4TdX9o@0$5]uB`2Rp)R3-b&N"N<qVh.K*Lmk\\6<B'5g'c$?c9@a'gcNn'oM5aI,VM6D+5ag*I`a4*VMcg+[0Dh(tR%[*898q6!Xp117t'hbQMtHVcN]Q!7+tp*p>!ChLLj)Dek36=ATW4Lp:C=DkYqXeJfO3V&P!5&3,m7<4C8.!OYVcIP&g6$^l3lkuD-%%\,E&4\">\!N*RS>jDr$h%-4n\M_d7PjmA/DA^_`ZKAsUf^Js_C38]MI)fkF6p08W6mX(,3o#&X\]iH]F?&"AqAdc$63?l#%QN0i%W4f=A0>ZrS1VWLTB;Nil,R@)r?;`6S'qr%EmG>V.j(KCurS.!*R\&mJ_:bETh<sFn'u>/S]K45UrP`UjOcRE,ZIMc'=IM%qTN,'K%qD*pZ>EY\)J-)6(dPuC&FaUFPF7jKbW(>[XOpB10a(/`hr-E/p!*b6#U:kKdAfk[OHTu1&o;Cb1l>UYnTKnhG^HE':#tHMeXYh"N%(CFej(C1.4<t\cOH+/H:]Q4KMEo#IQ"Dgf5T@m?a+LV[NBm@CPI'4aBQX=hMDQ!"j%Em`2PPLU=BaB7B;'-7n6Bu-`J8K.E.=r<"%+)HFah61bFdQPS;[up,Z:rleLeL>[F-f=5UEO[UZfK'JdcU,c_g3XXQ2Q*82/;,Y7!TbjX]r_"CCugTZBE+WK(+NrClTD#R@2R,g%?sIW)lDP&TBNLX,/>0:V+]6sTF=Bui^hdjY)j2fR'sk1qR.=E<`[5T8.uCg5TgnZ^F.\rXSq='Em:5bH]`FJ/G,Ne!8Ulq59")"<%1^?rMk?*$e4I-ECabC%!B5XH>)0i;%lhc`H?[<qrg=TXq'/)HVc#k8C/oO/Yl;r>>0^H$qm0s3,YYE'%(pd^J2S'c&Y9]oSQ2@[4%0EVo^(^c`lhZA[c*ial?_DVU0Aem;X>k3_FCd<lnJ=XQ"qI=TQGcqY;Y/'d-$V&.d?,8qu>q^fTiSI9;STt@o9#T)20m)OiFBEnG%5).?FK$GoNE1Ih,o*@C"[,C($FQO0W%ejjMkfb:81spmoa3^5EcoKmnM4l_dTL7QV4,BRdDhk'ZFq@#R*^RhMiO4T:1QS1RnsFP.%S_>7?35TL/-Z,@L^`,cFjaPf"P*)TMGplfUDJ)":)t?gbe@28eD=c,k,LjH((Z;:'N\@s5*FI9*ltNmDSlVV&<^"]fC^,OfD&?."%GC1aQ!aEt]8[-d.F8"c5ZJ$t?Ofl7=Yo]'JjJ.DHb[a8F+`l!k\n9<Z4^R^s@(*Jc[qEASW\n$InD6*E#'h`fk&(\+Np6f^XZ&+9%d9ZIWYmbeSHU=lJ(o6?<[ME?km&#8LUXbMYKAAG+"]9>6J/FJs>uihj<'qcV3LTu@qeH73]3kZ1[H^iNfMj[g\PD4\9qKnlHSBY`%@$FuQ.Ym!*JlW;49\0V+-#n<U6PuqJqhj692C"8s9kW%36iX0SUfZ(S+PQ2%C7$[bm+7-s6bWn^EF@*#F)bZ[3'Qr`"h+BrH<!<C%A(Kg80j5HMVI^PkB*L^Y&Z,.On6f)454J-kfil/OJX$cD)KC-<o3;CpCW,aG`l&]-K.;VB!,G;P6WqRVLN-kI3l'7Cb*ElkZ-Z\*%_O0jnaP)h'*,SW5W=?U^BuSJ6Oe$:KYmhG(YF9#&,MD@:G"\$D3A%]o!h_4e_oTk;*riIsh2@I!)bQ(,Nj?-'g,2b$%!"`AKu^mE%D*Ylj/7#B3eR"N+2S]V<._"@DXko!RlTE01DUs0l)BHh!N#Ju\6jAiV_$V2pP"X%^jb]Mp`1@qt]ZrS^[2aI,'buWOL.l**BV`sb%*OE_BW^J-Zdf;BKY%&F`V7-LFa^\^LDS'Kg=WTB;e&#mE]:+N.GoRTPZAU*t/WQ8&BS;p.'!R7P1E;Q)*Z9^=X_!VL),b"Y;p6f0%cCRJEaueEK:n5Xh[(/7npp7NN+qlt-c7F&u3u44trd8X20=<ST()cq.cU)IcT5A)#;:c`EcTU#Y9ueHQG^%dN6X/FlUD#5Hr8#jg%QsHbXLt']/o@C1f(teX-@]V]ZD$K/'gk`Befq+NuDRgBnT"8rFqi0>BQ=oBmLe0_>jiopmlmNe)$?s3'UCN`]T'*3O7(*b`QLV*G%,c<Y0B'6U-(G*JE1p.3Ud=PD=FmJiYl?]D#g\'/SO/l4)37CE,CBkFc>\BS&MPXj1Y'Qc(I?2Bb*B`q^HXu)fc=*-uEu4@cfH8,M%/A?6hga;j;erPU8pO_7E4PWsYWj^sH/3HmU'G#tDo%#nL.NV>D,H.;ci26$`>&Pg8rO:O+31[^W&D3$'iG<$2fKhV>ZS&=Phi?aU%FEB6iCE7([g%9kk'/*B@-Qq/-Od[!%`j2E]T?%a#M9YbnmIoN3O9sV4KX?DBjr&"4L)7_S.*q4<7[D(+S8Dd&0pG\O=l0J@R\S]-%)T9#^c=HC5DF9tq4;bqI*f-TFKQ?`-rCF,_6prmJNpR!r$LH&_k8<\C_eiM)H/'O4<$RA)I.(G^50e>7%2co9gP5F/<s3/oD9,$E%RrHPU2].SFICakc/OMI4#Y^du`[VoG$Ygtl,FkH7A&EoE/4F8/Kpmih^#)7HlHAW+,>nQHh*n-Rr9b[OQ/@Me+sOG.G7cNa@P8o?%^tFT`1@\h^ZAMbE7TY"A2^6e$)JE.tf(\Jt)oO"9lFK_[0V_Cc)d(dJ.Bg]WfX#@U:cLg+[aS&4.$%MWoVa.J5q&8N]'M<hDC`>q%m81=coZBlqiA<QNhPIt5'Md8[Yk([N,Q!j&r=#3gG$';BJ$MZ(PM/<3]o;GaH0fN`$.WG!))WM*k8q!=5_d)(M9*/f@6/IPP2Z'd%(Y$jr`DG4<'on.:!fZ\SZ-fhifEcBG%*9hb0\0*lj+1<_Y&MoN?#lg:+"E?is*Xg)Q_#[NX^$*JW0a?ib^8KL1uo\F@Ng,B?eXt@%[7VhGekKcQi>9=KeL"to.97Kr.QtV3h()p%&=Ik_Hh*_&YhS7G)iFk%G0ir-%<gL@HYg"M.ocjW2H>-R1^\DQ0T8&FQ2,Zg#Wl!d%gRqJb*u<CU2%"N5Lp3@;N&u`)[1,3O7CBmh@^1=G#Wkbb>;IT[SZ5&m:oS0>;f/`X/<DkIMQi$89Hris.d`=+Vd/?]\7s;=XN0La%?C!d6K&,;.K&$o)j%cXVqbKh^/+r\mNPS'<W7,MqoNn-H)0QA^=Lif`;6T6c:09c2,Lu.H8"$T`G**uHBnuG@[O(ZfPfha2kYFnh%A``+YF+0'_"]7]]o&q'l75LQ_9:&kb":NQpo;V278i@ZZm"P.D1g)]E.JdVI8pnV@b'6`O$\)&q57^nDh,u$a]fL2F3E<Mf,e'Wc%DC+Q#`mKlHLRYWk,Hgb+1G'e`iRbQ6,'&G01T:1_doY.A8=$XfCa7bj/#=_^g?/(gm-g:?<PEiDG?9+pkc?>KlUTE@C55qFRSHWh%:onWJMPej\V:3a$ZV<9ISkW$o^MFc^V\`"87HEJIf@YhLp)?NNC!`T6Xklo3SK93&$mBCVe*/=Sp.j[kU?V=<Bpc5I8'uF)Z#lG(%OW?j=l.K4hH/WoY9rDW>=1$Rb7FR[c\_:IKSR*k<g37WTd<'\i2Hp'M7apT28XnCXqe/%(olIXp&l3@4e*4!,XuFj2d<)F^/8GT2%&5?dg>OF88DCpfa*)3mL$Kb7@FYqpO(gAY^:/AcJlo^_3%fhKhhJ"g;*WX7+UZqDg93-Gu[uR?7Ml"m;YM2Rrl%P1tDanm^9rAe#%V`eCqO/CAnL8nG.:86uh6uqZ;RSGN%cD2N=p'T`7[j3+#:fC`fb<j.O)'J(ii*E6=LV:JNgY;j'(V?hOV`,l"l!gE6Ff*T@4ZlkJ%[T*p=N$W>2po+_=_B'#J(.s+/@FVX_TN6hYM\XmE0"2TZkm[rGGF[BCVmhR34\#i8%V(*g^>7VGMW@ZN6ooP<j"p@jT]9X$@[U_$%1#kTECW*==Qap&X\[!TGY@$G;R)>HI\0&.`k0>68b?c<^Xdn>3rlLt_h3J^8>69b#)r+ntbafc4in=1iILIfc-ACmS`$uMHb1tCs%[rqV!%BVsZP?\($hON3?F#?&:=e*H&lH3/sX0miuQs.YEFY(l*gm0StTMO6b<'QJiU0N7,I@_+%rZ)-i=o/+YCdf0Z4)ro48qVp3%GN)#6DJ8mq;R2i#>DPeP`Y15ML'O8uDCD:W*Z2$qg7Y*jef1Ws4)_(K0"mr^2SGe8*1NF-]:7+jo$Or><="1cQk%p1?4Y=n8"N=G%6?'BhJI%-fG8isX>C1N:@+Kn:-5G1@J[KNU@V4fq%Q!7F[/I(V&6NqWQ@rm%o0Zo;/^JCulnUuj:]Et<8fRG09nWd#Xnf=FeDQb'%8<\`SDWjH9]9_Yu;CQNs'b'&(\[.+:];]3]_`E-o5."='a?&lHIC-+9;-_@D][:RRK!ScGVa2?(Pn_3,c:V:gEQpg4RLN^IaKXe9%09j/1<WX.$^Qt!22RhXG(%.=]9)TZP)f<KX$?qukX^7pBSV]1`C>A2#o!.95;5HC5m:3b+hG3'nN,%.M4Y,@<hCES;Fp^sH?/a)'%hJ6NLL1OZLc>H[(kbPMJ^b4WL@B@/r&$0X:]j&Fl3p[+&[eDho-3G2ZW%.@X#D'99^O";plfPapE7VF/l/d^$E-;dp$_^Be-Z`S;%)NJfD37bKlaU)Yu`cSsrI(R[aSuHWs5C>bfD>:?C?&P]ZAt2sm,mN!-@X=@t\sE1,ZOC>IM$UGc[PR5YW45'.m>T$Nap2-_C-+^T%mug.ahd!@<JY%%;R,j^QX,IEooZigYY9b%FLt%OB0IC"U@5/JG#_oRM@`[O[YpgMR)@D5?mpb)if>>G7@AX7bSFnj/]4"*pKj&$]%`WfpH>GH1*"#:"UCRj0JL0='(Ye43pXY%&2\];u8*I5)fSuk$,UM5H3:"6LPN2s72\T$XnW7N+#1[>i'l%F9@&A=QspnP`4HE'*a%Pb-#q/mf91cAI<P[ob27c_2:jCISgUpIIG0@U7F3@Cr(iT(V+%*,ZU`p2!XjmOHat8P'X-k>-:@7R;:(mj%S3CWc3YFhj;_m,*2o%dL.";b#N<d=*gDugpdh5)^VBKoY[cS>qjBBWf@^Ujsg>#Z!D#Nh*iF"lY2"(^HJc/BUZ=+i,s\A!6,S%O4.U9k+!b,:K(Op4k"&M%aM5!QZGC9cs/%_6L7KC:qqjQ3:A]@.d^j@RbGtk8"EW\JkGghGM41GhTsiE#e1#G_n"[!V#(V.I6("X:e^n`+2Jbm2X_HZGF^#EP%^*[_fNlel2,BV@n>?QteC-S-?M0"!@SXJ6.+(pqh<&$J)g@ZOD4.Dj8l?`]NL5!Q*,jEqKODk>Uae74*KeWpNJp_B)Y#Wdo6cU[a%%G$7[WThgAT\3F.]uhnPV=e)o9EN#:R3sqS9!e*8,^uu+k\7%?c:r_69'a!'=q+%tRQC>b2U^u>Bd%i/=X]rJSTrEX@cF;N_rFnm%NE*<ccueC?qD#e8bLDU6ZH'-)b''sA9l.$^Dqn*n`g,NJmjK+=Xh99j*\b!gmHnD%jW3E!"Db/aA\D\^lO>Gh>2R`u/s=Su(dP_'%@[:1*"D7"sA]I!3E>n'I;f1$#H`q<NB=f.\,:n&8,MOmWgGB+9%"7:-D1\>LFXgp-(alrD1YEq1R?a%'R3>N>"BFch$X.ho:_W:t%9b,5:!m)&_l^B92"3KE,Gn-(h>s$'K8pF9;A*K(Uj'Op:^1!T8)q$]-U_Q+j/OBKgr*D=H;j6Ce3#$>4oi&h4GVXKZSIrbF89=3;%"Y=J">jCNV'4@-FJ(MN(AUPZtP8&1sZ,eOP(,Z6'&h^gH*@gqtP:/].0n<GgmL969CoEp^X+h2lbHPJ\0n=692ie$iY+JQ"+QK0,%5nou;%*-N(fS37R)H&<>0N\3\NE0_^ML$+LRmmFYQGb$QE$`NH&09M)e73U]%AEi^LSVADB^RD@GZJFQOe1,Vb-tD?[Z-49WN0V/%>t+S]X9uQmb%G"BD&5Y:Y`A)'%A!udntDPkod\m::m=c%$Ffo,I&?S!G?0sSDZ.^0MXmaJ$?/i7k_m9M)Rm.AK+4jWm34J'XR!?Z%8?SNFL>&f5T6b8+^nqRRD0>1@R9PAe@]VJfl_gFK9i\r&F$j[-qO(QA$oRQ4lhVL#&?4r-PT+An\ph(9H0`%jk+3`Tj_Cj-IPrC\%G#6d$7rfK8F63")bIW/b;d6A2\QN3&o;[6Y<<1FGlXrC)I1Om$lh]iuPBg4#%I3eXH^ku7JlZC%DYT?&n.?o<D,o36r1HEd4?KM-%B3s,,bm[R+FoBNa>lubD[Hm\RGtf_frO/lL[tC&lqfVk]TqKrn6!Z_H$Pg[VH`O`,k(0j"&ZH`"p!^ZPTiM%JeJU9JlaQ-`a&_l.%IS(Q7Vi\K=k02&C3P.2Ol_f)*,E!+89A7+_T=MkI3[/_<\pg[SXd,o8.s\9UXQsMZ5[':egU_j2HgMSHnh05(RGSLX;3,XR/0=)&%I+u\)kZ@F]5FOsSY+PM)Z*Ce*H?K21-$^L%^3s9Oo;[8OM+Y,FcZ$C<;qK@n^00bjY\@B-o;[7DeDjcN8].VNhq#nkjJmYjWQ/YN%9A@PEYZfXsSPjhR%^TGH^Qi17<E27D@VErrIPQ35<qY2m.W'Sga,n<lXQsLGk.LTnI=EVerH8eIC0fH;?JOkTFo>i!2J](+<nD7Q%T.?JDI[^S[b>nL?oo[p3V6sg)bc:N-A3!kpY+G_:,@\I2.CNYj5BB>m'q<X+Fo@99j.]QkZQJe'o%Mi`>M&OP:TrQ\Y+LSkX]4uJ%`d<fLlXrs)%\#poX1EcBJt[RU\7Jr1o70s)7,G)LT6XF$*I2Ir\pe6X&=-aJ;:j-s%'s5F5P7W`X885Rf</!&chqadLuPdIf?aA6%+HdAMWXQ!L&+umCOR]lclLCRi.ht'8%`A(sB2#r$(=R4aRlfK-_\P+W//l$!hqf?Q[_6n/R_02AQ4&;;0EE'nQ!fU-=q;eo&a&XJ%qj+BmfQ.X^e<:-E;11&g_E@9JqNA"u6$MTJEdn\Ea$ft*q_UE@[QV$I,'e;$I.4N+3aMMcq9!i)n*s+G*OP8/9CCc7<VQ.#B0h;W%Ct4$mj254%.l[C9r''SYP0(n6g@&=*T:LJ?^97a9gM6LmH1tY<H/IM;Ic&I]m&)RUqU;&ms&3eY\Q`C$,Xi2JHdhsNm,eele%V`+%pWfE'?[/ol#NIl#qsI$IP"nnLf?nC,_Bfm7,Cd9Dc#FKd,g02*mOMObIsT4:)jfHF1cPe6bO;NFmKm-Ai5AnHdPC](p1G#)cYuH\%.-upDho4KLq:F:`gm*l5/jgiKK&TG0o0qoCP-7qBq+Oj=!K$+JH4%F=qT'TFdFS'Z!K`MAgdJesh-ZcNp#_-E])2gS*$)U4RKn]A%W8MR%Wb7oaenHJ"4M27(Ec<F/VO)<W?9e>gADs`9pF<(,QS`pjPRIXRYJJW7OOX0,aDRU\pIJk"L#N6?[hb4-.Am]7LQf6giD)Vf%-e[eKmboI!MgSmn"#DRm:WCD6>^179Q4)#ckt9BNi@Ee%*\Y^boC4oBV@!8"]`Uuh8ncL:iR)#P)][\;A?5H2pm]lB$FlE4GK!cJ%4lsk*WT3!2*Tl<9:!2;NDitJm%"lEDXV]p4mGB$Km15k.6kFeVNm>jj(cf._$R)a=bO9e>>/Z,);'5WJi%>7MV1iD.5C*;fp@U*6%1DduZ^<ZTVoNUD7q"UWTmX%.\52UBf\THXRJT7=BJ`:)B\B0O(ieW"[FE\^Bq,MrnFj'O?(ErLk=6<G1_(dTp#H-JO`MF*iPcr[4%g?9F6QC!&tH1`c=Q(&$3(UFe\T7tDG&A."2kgGj%M=i:p;o#V!DsfLeE90SaJ=PD_nM"In<D[9k#CpX'YYr\F#fGna703D0T`jq6%\(3fo'!U2iB-&KQ>kkS`%pu\u&b,K@JDLVs1"B2VFq_a+E5$r--]D6sEZjUnbGDb]"-to\?maG^20u>nrrbU)oL.Of=H47L+5WV3%qesqk?,Z)HoJ.M<m<S4Co0'KdKT[FLL&?1!TBFPhmlqLQ'7A![OJ:[)+W@%Rb<Y=]*n.YrH9108#&q)+;R[7US"V[M(!(=:k;U<Z%KX.f[:4<kj@Ltp9K6Vmg6&8;['Xo:!O+99P^3s?pA(\YRn)7KEYpY)?cUYS@6O3H%op>+gC2bdGGqMnZkmPg:-=/VeF#0mfjp1C)%hgkOdZQAYtKsI<'$",P*B;K1Ofg&8R=V'S6<4]lh#Od;O0ijCO6/b10#JB[;nI%QuEq]qY8K\.;h[BF2RDZLBH/^KqX#e7I;5m>*%_4@!F#Os%_GM7DG."VnNXC":!JErkYD^a4"!U8T=_Af<.N#uO6rcsuZehteST(M"be>W:qYP<Y23t-CjO(Brc"gg@`qrK!9Jg$\:%&S?rWo6I%AkHHYoRoK0u>J..Y,1oQdY#bH;k'K@FSJ;E?Y,6ScR4_;:Aq6ET-6'[FlV2nprb=]a&g6Q+.gi9C1.5/mPr@hXO.&*R%#H<ZV0,7Nh(t8i4Bi9X/ETj(n('FI/H3*+LD9P)-MLsc#@YpQrFqa&_$&P7a(>cS1U8\K*LB+&=ePNW=*tsb_1Sp5N/H$UpZ)JU@%Tbb;_a+tpUTEG9JGN#2_6$-,T+TbIG1B@3m6^:.I_U]caPL(-^\:o$M0aSAr[r=PhVr9oaQ1`&=(\HD:07EOBKa3To?XZ**@5#qA%8V,)Gl?bfsR&Na_P:KIL$C.>\mLs#EFF2,%(R=*<$9&hgO^X8jpIB'G^>M*`E1#jC_lYE3$q+H%0GgiW,i0B$ZiIt+LRmi^\MTt,%YQm\iW6QpO;_[q'RYK!6T`WHo;0[IXGXC543sX@j?lqe;g:S'+%t5iMiJg9Wn9$%Pi/'l'c0QTPnh;en8B=6tW[o56'FE0kJcn'%%+le&XG^'W8U4DC<3(XQ,'F@9I2%kKr&kJoGK*GKl)^rcYOKB$js3d_d_%iM*+53Cj+N#i<@2F=S1(%d"TtR(&MLnY9nRR4S%3<5'%((\AnMDlZS:s]?\:Z%'1JCWNk"A58$D[\%lasm[epiDE8YlXp]=jSl_g`&ohgKW8pjiX_OBr\V0##a_d@iuVp5E4DsfEP2e!3d5-%G^+8pK4)2&3+BRIHe[Mf]=Xd)i7j>V&/bZnl:9TJ(oX>,FTK:cJ<=(p0N%QL$pj*:5m%*ki.G(2d6>9D5X_26I"EBV>?jg#RPCJK%D`Wl]9R%L7_ZsdBNnQ*Z0O_7GTUs1K!;!m=Xl,NZ#TZ'$O^AjCWeFe%Bj(8jQ'Uk%Aa+hu#dd!8!n!VTV(j+;q6r[!:e10b"HGdA%0f(Qgd\A+>R#M,UCmM@L&W:AQ%WZ!!<$E5:Rmnu3foG@u4e4O)0tTN]G&f0:N'YU@H0.Mt72MZP@g5?ac+P.Ll$W=*oL(SXKuk0D%]J38t`^%fcm3oONn_dF^d1'\S$7_GWffnH]MT,7uNdN#qUGC1SJbmT_U(:8@HcsV0LN/^Olg]sLEYfDBk3t!=JKOl-F+e@A!MW$b%h8%trG+++$ZE*^';3,31&,hL^,*`O,PjsT&bCqEW/;$Z15_=E=8oZRR5HBGfA`4g6JC^B"aloXomrqpre0qK*1$Y8dF+Js62KPFq%AhKAB)HQSf.k699Si)KBI\CuH-#:C#S?F0ld9$bt?q7L+%r/I"rto8XfRa2!3@)^>SljT>Y2Q!S/8VNo+D.g5H44IA7?iPB"nK8R%5k9L@E>9h/[?K&BU9Q5?HujFg^r"<6a8<q[!V?<$Z0fOIN'ah\@1X[Y:3(($9,a+\\h8q.?Usp(pTn0e5BXBd3'Q$e]r9sa<=jPc%b-;C8k"m%8_08o*aD_Kk7J!0ZI=4_8j]fo\62@M3K\"9b?D1BXFnq=Jeq_;T#UQ=:-u17nM9BFLO#.5T0Y8f$AoJih7",YSG@$u/%GgB;-cTSl)RDRi*no%A6TU[&j>PqE]=O4QlM4_Y*2QbUF8)ZT#XJJU8)p">N#lC>Q4<S7/iD0m.L#*rkW%DNe/K<Y9A>#&pX2.OX%ql.t-_TV>g[#W3S#1SIQi_Y9iLfsYigr>XrTM7_`X*G:S6,a$T6a%NhY$gO8BMf1%qp?aVpM(8e-/-K1T):m_371nf?t8L-kJU+U%G`R/>]U]aD3%g_\HD-3(Gc95`,-./,TkScInltQ#%2nU*+Pu+6m%L(Q3]ipRTQ)8'F0o"nWAh]V/(n6hD<!gU&*$@f"JQHq?T%"J%bZF"3!'I;)>F5q,$K/O\l2T$iie_3qR1OY[)89F;qGK[!HjqFJJ0XFek>-C&G1)j\Uji?@s0"k*g0Ka9PD(gS%-Lj6e'g^deF-.Z%I4%W5')RL.lFEOg2n?qd(u=Z>rDEDb<en*]lV+q_aZX5R5?+GAq]`EV]_f<a\6]+#nCZj7HqLsOhZNB5j"oce02jH(i8UHk$??pa%[MKh;IROU#84%\:a%salO30;.+5qOg>@a"N7s?l?aTlFEB=[Wp4I`8ihhN]1Vs%DhH?nLH.TUY.L5q)?Hes(sn2_4YkifD]2O5k\%O7_A?CT`:fU?V5mK3']*eQs0>oaLhCkt8D-*q1B'J5)WNS:;SbJ\/BHr%&)4'5lst'tL@<(V'Z01_K[GglR-E)"u`K(r'I:]I3;A%XQtRqGBBhg.1;h-@'V4sZ8ifj/nb4e]B`#@>qe8n^PB7%J8D](#]7SCr#oQHAhC,mV^R5$fe1DTFD9lVdoX)1nk/DAe?ecN]5(N/%R]UYTG#B9*dB6;lL>*O2+1_1dHXR.;On&Prn.pf[ec1]=GMgj;.'<]FT\c@\K<6)h]O,%TaFt'[jTT/'gqjoW:gc4lr@f?r^&62=%qrHTGOW!>_P"%oc@=r;F:O_Kf,r2VbTAEY3opm0-8>^U_IXUhbp#h):IBQrVZenRGi.mB^U<.b(U-lWhiV1'$/+4#;kbe17dfUPk%+8G&`p#k3933_H>Y@$56O/1O<F+4(\-fUI7hR;q&pGeB&=!$DRpPAe3#7kJ?J,P`6r:[lfrpTP>5PV:?a.EgM35rB&(I*A5c>M+3%:*RK7rpKa6hq_B5'Kpm^h#@6@0>I5U_2!O>p&F^[^\dbTo>1J%i7J!m:6)6?rp%Pmr3JkWSj1rLci;)L./!3/o;AooI\uPoTDtH1%Kj]CW>Q3l"?ht""8(+*aH'A6m+7j^8`W+=h9)mN;peNrY5QB?XrLu@;^O>m]](f$*ZSkoipXRgg#B.^KrTq^gJ#RAXDa-m4=8mUG%^k^gSJ+^"aNhh0+qCNeC5BFp`f*&,(pKC3:E5)%7^bKKh(-/Q*SG.L0S+!Amq8:g5#l4>Qs7Y=(htm&E$(N[+#TQKKL"$hXd6@LL%g\ZL#)f>/PhgUh_pf\*fXeUL:ZhQ2hn*sVl2%e42mb;cFs3"dIp0F7Chd,H,rr#,mgY_jG5LC&9j265>6fU#:s/V30rubLuYMT01%]8XVf07Wr(s8-TbJd`)j>jC:omk!esX^?IS;6Op1\"+A!4o:5RI+M^#ql8blpE@3lhgb[EPPjc"q%N&>^].$njqkFRC$0>'Pht*N%#BJsVqEXepG95WT9MCQ:I.'@5s"i9HKqe.'h"$Z(F33@&f[70Um&9p\hqZ53^@_3:QfpTQ=d_JLLDS@5oZ>k%Mt_\nf/I!JqtT8k%9((T7`/a,,^\"@@I.KGSR'm"E3N#+;dbjuI=&'RjQX?c]hfSD97mHq03u3;AeQXZ"M.\,U1H9l6rD-d-$?c@>YQ$Sb;?$99FR:b:%MV's5s5?8JT7$4YbS/Ej^e]H0)>Rh[\6t1L56'\sG1O<R<cI4ThE>if>0=%e2..g3jAY%V%.EMpr)%HnDuAh4?[lBXcKbK3Lr+@Y%&AJ+bhsWl+-Qh7B_iK;OLZ!pbrEV>b5Q4sf\Pe0O+2J0?nK38NcSc%>?bHjL8\dMO[.DS0h%4u*n[JOI8MEYp`tr`g0FdKYpm-RQ%5=^h(rHDTTnpT@+T9QRmp$NV(OhL_eB6W:(:S6@[4(%V#hS&g/(YfUK-e;qF_qeBXo.@[iZr-Fe0B&T(lt=!2H/F00W3:@V^<!$8%#OunTpQ[tCMtc)Bg"i:6[k5+0l/J96<#;`[nAQ]tHgcC*4+,&*\@EmM]rumF/hZU34-U8Z:$7F&JGcPLqlR?7Mk>Fh#M1RlpS,6E%LI8TH?MK,!j1Y5ej)FaXcaPji9@cQ/Za72+q9jK$s*/8Pr]@"uDNX^fNnClFA%0*V,-NS[cha[9Dl(`^A"RsQhZ'qdnemAXArXM(%l4WngCtJDg>p.pfTDLF]+1Y\')LF\tdEb@Uq@8iLp),skrVZ]q%c8jfq7"P_B*Z3K7a3k>Er%nVlEf=j^%^4K+QpqG^BM4D,8Sh;%K87X,r5\1!oQc[jV2]tZi(AL#e=kP3IduUYqF"W^@VC0nde9:[Ac%Q)]UlM/Vb,Q2]"r#*D?"<J[b%^1B%$CbIu9J-Oo1i6[/Hmo%g"sQ\:J':>c_bNJ/UbmGFr-=sk%k!Z4hf?OYk67WWqN&G;4I1J,$"M9SZ$u2Q.JpAhu+c4[F8'hFc^N[Q-]g8fD)E'h;0Uj3W>B?%X,aZH^[bamYIa*!0BTJ7jT#1uh:M,0K##f1s8(?^n3Nn_YC'n)J,d^Ls5>nM:k/=C^\l\jrVGbks7+:ih8Oa::K[Y5s/&ugqo&Mg%q[2iWkBCimpQqMbIK-\"^n8@@_=)jQm9`$Vr`B.!l_".D5OQ8jkbGn@qXAjh^Alp#[/9^u>O*TP:KP^C^Pr6E:Y1O'oIepKYl=Zt%s)[pi]6F7Yroj[Rs2.3;lbDG*JVQAUs6VH&]<$beZ2XOelQ?+u"oY(jErWWC5Q46arrr8o]=V&%6cc+]QTcJUW:t3G'HTlkEC0k<%8-d6-U!HmFW4CeMh\"&*&o4K&57,gPqHj1UEcM[#r9X8]6jA*iUk^XNd]R=[l!QbSm=Rq<]e!\VoU<rhn6CG[Et,ZqeK3;f7Gh$j%Li_eKN@)t'N6iKZ,Yt8Tn!st8a!O>1o"hH:Y"ra^)&7O<I;#m.2c+YqDfL8nLH4@:g_LU-_mU,``m;+V\iePUOuI3bH6b^#N2ZFq%=F"RiC9*:(X6TkWr#JBV0LAFaV\[k8kfJ%u1l#IkDm6sWXYo5P)mm3Q*.((Gd]RVSXqm=5+dQ#e16u@^*F:Pr3B`PV]9K";Xd@.]%@1"a$S1l-uX`>QMq/Hs.2qF=TkZb0se#)TT/\0PMZdm6q3\Y+8PQDRe/jSXPTlY'ekgj(^[8](]fKCOG/$bIT]o:e(LMlI/Kd\0'%EflnPB9:`(X-lK+)U7rLcZ]k'0@R1TcRrQtME>;k0jm=b76eMN"WuY#bM>6%6HZ*Ug#ag*LGF1QS1q$c*7AR4/@7.mL[&&DWN;B6%ZQL,APKFeQ/k\S$b'?]VMS>?!=S$;m>`i!3]0*RZC[Jba]oP",j;<HLGFB\u]=5dko&>"ff!iZrDm+Z>f4.09<*rSG0AY7n/8K%W%?]^l2o0@EfkD+QkpWVeeN1JUaJ+>3@-/#&@.?)RcY3d?VY,hZKh7$SZ]d+/9RMG..I<gfDqHi(XaK[.I68Cc5%R(XV9:O@>]"\5R%.M,7:c&gQNOH+&enN04GNb6K*qeLckhl,I%."NK[nKkHbEY*UiIH[s!CTAb"j:t#E9X"9V;dNnV'Q&<1MWp^9]>#KSFNRZ1e\jCR%S^/^f^;LN=HjsNNdX-cRT=h`Tr4Vl%gDh8;CMd&(7#%fY)-`CA=_j?U;d,P.K3#Ok'p103Jo\!E9+=$%pF=O\1Y0<EN??sm@me8i%.0+1lfQeW%X@&!\lhm@J0Oh$L]O$LP9l2YDN6K..O]QBgHJ6Uj(@uLGH67NISVK(bWT^@rmZ==u-N\HfKl#bB],"+E^\L@'Q3<+W%/U&BraponpGE:t#4Pr/8m<QeLdsHk9:o1'(R`M0VA(KfW>9dCQ4I;efb;)9r8`OigT?_T?eg/bQS*FtHcN7hlg!)e$VRY$/lIo$4%kLeo1m:$dK,*\LPX``4%h&,Hs#-q"Tl;g`@%r$uG=_BTSN#%.d[A<a0::gK=Z9C3VP'+Gb4*R+Q>UJ%0+W06-)7kp+D]L]0T/2E-%rCO5diZqR-Fbd%%</@=k6r'h[?E\dZ'iJ5d^=LA<0B)&V8@(@Q68PaTZDO,l$X3j$4fdt,fK(*bLH"SU)_B/l04`>/S/iWmiFrsk%";OK2ClEa:*WBLVh<g[h5Ag(4&=NRJWo%*Lku=-6)mMkeSsE%9eB>E@d(458HUJR(KBVQBH#ERJb/<l^fc/BS,k5]p=DRW%]+mh=%enLO5M\@Hb2aP[@,AX?uOj72o^9[@$##U-]$d+d>f#erJelaI!T`pfX)c=]_Us1l1+6h.TJ'+d'X3SAN,uqP6PJaB_)9,26OHTo7%:OVUEh*ftq@9]!I;H$E^d\[Fr>73Ei;UbI$%cLSN#c93*C!W'=)^Yu.GngQn-jLtpm"h1<&R!:EQ&@AmYD&Bb_9F?UnYLNFj's`5%D)]74U=$QH?/jH9o[#Vrm__&Nb1X1hcX@dk6n/OZ/T`V_"0?c$(P!al`tOmoc8$S@9Sj=5r`4ha];2['_QG'3LMZoHIunE\nk>#R%c5rd^P&f\O.(tEkZNPcgX9;q9aeDs@jKP$N%4"c@=W1HLh'4s/dar=613@##,QtABHEs[$He!8PX9a5,euB+)R4,)bPqET5-4fAC%Fi\mbAm9r##$@D(7q0U2&i"GSenar-3L/4Cbgm7JT;0<3NhL$,kg6Dn'%n.7Ob$>>M9"!6(!/G8T&"JB&A\@Hb+Un2]k6tb90O`4%l[HbF*$RF9iperqWY0#=b!!H_FIYU295g]h]fole-1$s`C/Fc*ShDX's"#ES4n^5po[Ih,c?S'EpKL`N_],!O)-muKAQ'oK<(>%9%H04RP_dYQ.qmP1j;&D,<o25/3eMA!K?G-faGh`oL5tp7AN3W8HTD*.;:;aeEMem+;o_C%s#/YB1/0nfSZIWJsIr"ZAn.sCS)f1Tg%PE<,bD:AY>%9WMn$V(`p+S+(B?9#']3[RTl&P'Ms2bHe*b$g)B,djdR;5UG!hTNQ,c8n()OI)ptHK?o)Wk;og_]rrPM^6d7*]YQ'%"at8[53U5+6nYSd^TJ;CUoFI'%+%[9oP2Tb+#[$_F>dV<J*-"_]0.Fb$H0EtS6`2,`hM]P+SsYTf%s)!`/%i+Mf3P?W*1^_+r:#s%7Z(PPVpY@&(8Y$7;a.XU+m7scWTl2%E`u!,;A=5?>-=k:,oCnmMCRle;CY!d1OQekDbQ'q<FAr_DZnOc'*^jW#Jq*T"B)l\qRq]/%a>r_c=sh&o/*Qd:TY'.G'HQ%12&T*6#F;O886:)G[gJ6hd2W!*91DU;Ym8J=`;t9W&rCbfHOnVT+m4FAO;#`_TK8m-*i=f/;u2LZ%$DSk-`pl=IaPfrhclV]7<7b+V=T:XtoG"SJ?[uUKGFqkrJk"E.63fbBWl62u9?F?d1ETmS;fGM)N`;rD#KaP*&$fe$b(5+>()7/a%I:iIbDCqD[Gg0g>l#U"">F7F>HPMeI==f&8/BS?`f_OrM$*knpZ""=:FJ`2q6!qLS(CYpVV\IgVF3YS0I>I3i_m)L<nAJIA6I($f%Yj/5*0<=iDs5\e5WRHNQ+?J3joh0O=:VYOpmbEIV>BFd^=*l/o#l]4kMb[p_i9tFC\#Q"+Z;a8"eeSL[\q4)HSa.>/?r_7bMHllG%VE4ofg<D&#XkJ)DPrNf;D$7^RK\h:2)Q5XP4#E2dV(R4W,CMs9hC6D&)IXP9T'eFVq/nL;ZV]bAHS2$Z[p^AkRu,+sLW/mG,'6-/%/\=\.e1>nhD"UD-l:<kk)NOEgm^ET<&/.q^J<(S0;U[Si93<Rl3S&NJa;VXi""oCdDtZ!`E/-DY%*9OUo%p`]:+L]`):E8j#g"_8%[>Q,6=a#6c2K@JgTC3`8B$3q:4fpD>paShLS7S*aM'%[+hAWkdf3T<*Q4roW`;#3NX,5cFV*MG9djibjfiek$95^a^+nC3IZ8t]k%VD&uLgGKs>]?qc[p`=.E1heb0BV=[P:1WUY.`t)akLQ,YC9g#SnXWWN?ct+P/mgPq6Y'/:kfpT:Wbl7FjY#T#ISLY-ID4#_#pi/"%B'D+<8MK>nMoj_2l@@29W%5V<joD@*iq2#[UfaseoW,n&ND?O?(J3;m:^q"c%^:6KZ,<Fhf6rZr>1;u#i5/CpM1-"bXo)5Khcb'4%?Sk(l2*$09"eg9:T+c%?CM@s+eT;*,.(oCdk)u#hjLMd3.,T="kTh<`[&823Qh^J@]i89)V!D8J_uMbar4*B6N['O?UY;g>O6n+r%0I%fWpo0-6HKK($Z52L!ATDA2hotfc<V;g^JY@6lZWIZ8br&GQ(8/Jj;qVp!X#Yo6AHN^r-0>P*59a/9-$p+W'la5/XL6hPF<56-%3l9#LZ$>G^YEoa;24d878,E`2[ROcj.kC_L"ChiQT3%epU:u1E897C19CLof@UN@ON37a[@MCgm9fiW6&AI<MCROUn'FO+T60E6F%,aMOh&3Y@lDYR[US7jfL7Le\jAaa)90;S<"JN]?9.eBD7/81Fb)Z-@Z]cIPKh7d>Z:WTXWqg):+\p#Ae,;8c`6H6[CY9uG<pW'kb%h\K`;WT-3YbH$IkdD2UsedG^E]/Qf=</ru0?F#ZSDbTKiP<JU(Nl_T_QCUB*:F8i6)r#[u6DnOC>/='O-^sZ1d8_iS(WLiKdi(Kb%R+?.Ybd,4rP`'+4QRirrHM/YX9"Ob_otopCns2-edkJ_GSgIUK**iYHo8R<ER65G,Q8L!K1ag8gLcDr*ob<Q*rY%)70s(t,9^@[T%.i+lm/uCK1-()&>gKGECBsU"!?S(NrS:7Q*oiY)2Z3FA%%E,OV;KZ:/4#QB#FIh@E[<]0]f@_S8f06n*/?D!&'mP$&`;NR7/=@_T%f\I]DXs^5+#K$qO7=:/VEmfbH=TcF#V0587abeq9?!sR-&qa_U&s-(e=pt\ri3BZ?OH,hlY?a5t5D\O-<Q)KU%,H#@D^Xp%cQYG\%WBa%eC/)0QmqZD%T'Q@2L;MPQlWs0g%&h+E:91c.P"(;JBZVF[1R7,;dq&bp*<kHOW_9JWmoAo4`eWDSj)\u^Vl>CrS39Y\6ns8'%au9S$S&mMmcpL+=^n@O79t&GgYPRBA0;XRS+su#apo.(A(FJY3&1O>C$LsED?[L;T%O.P"kqP<&O@>C>65#BBe2,JS,q^q"(=n49%5sDc7_S"4ObEHlK!U+:Rob`S[ZkP2S)&lOpkp_I[<fg4&mp:'`1<6'/2DROP@#BTgg*!jkdW[`M6Tbp$b5+r^@gqWJrpE58!i8@,%a0)Qg)Mg0%0t)0t2Bo#Z1YB`,N0Za5RJcj&/jC_+No?p%0M^I1'Qm^AkTLLpQr%pB5`_ilJ%iO&4^k\aN\jaGs4C_F7F\6$9Qr[B%+FP"_9N+DFLu%cR&3RuuC\+[VYsdl_jufpOV@HgC?GtJLA=paJNT1JJfmZ?M4W2;OZq>2fd"Q`E@Ot5B38^iH<#Oa^T.2bXdb`TG%jKPFZ<@`^I%j6R4&0S%P6JtBPi_(*oSmd'a<mnM85)52U1!>QO0dsgq'%_kC/"Xh\RK?;'AN^l0^G<1HCa.<kATrqDiu@=2'`ILn%-4t2@P%'=(/EZBY$U^S*R?A]W391t<a\]:%6gmi3J3]aiO@n:5\Ru'n-YF^h0<Xi"Z[hF2OE\eM,uPS,l4W/$Ot?uq<Z/N<l0,RG%s5[G*!*TkR"1#@I.G;+3F5-)hWP\`Jl;^p:`b8ml*G(-JWh+e_YbdV"1O&rsY$<J:V6q])-#QLjMgiECN&N4PKSOMmomNA5,*]NR%%O>T8P,Q)J&I!Br,sDNL`)cfmmLQ_8n/+3D[9h@,@*91b^=@o!kk''ACDU=LGJ6(s'[tus'GUr(i*UlffqJ`e<jAQ#%@,g6c'a6;%!@MNumMIm=AumI++.u@if1L(#*$F38qmf3\-M^&O@WcSK2..Xd3QgQDk7EBF61`*7lJeJn6%_Zk\'>XIast.#d[+E.(qk+6Y^FHE%+=gFJCT@NE\'D]E[>4kXbQY5*-:TjV42q4@I;"j^cd?<kZ20cP#k(da-58/iP\NPD=V6'o6ErK'Q,eR;UsZHS2))[YmER#u$-FK=%'8eS$23=oAek#P*Hr$<4i_IDR]!'/+inpIcW!.=s)/;M."bNmE)GGNMqU.<cJn97E'8kG0_jaK@6s?Mq"f*I;^X7_OTSR\R-5<]8%m*K.(d$f#nT+UT[B73I3h7%Em,rD;8Z;%9MRCRp@kS2e6&]IG%(DH*#l.mg4].GueMQ8,U96emeW,4p'3uU5?-mI%O"o)+`RV#(D%'Ydb@2\Io(3UU0dKNPBP2ZUY<[r%=_fFamP&OQ@f,W)eX$ro;>1]jI,Qe%[O9B`Q*V?W3pqNdkdc;$0sU_Q"V)L@\IZ]Q7HEKGoE%fMO,I@Gp<H^*GB'V*t+H<leq%$n'%apj&jK+J+%&e)5qu7P;raqOV]3fEdQuMoJ%.2F8roNTs&N">A/\Y"lu+JE3N?>>_-Hk:f*b%U*KHs-%W+8Q'!\tRE12E3(+eZ#I2g3^'!s@[g^*VF]0pCC.tjDZ>\6+\Eqkh=Y)WknoEDDXZd1c061r/?mW=A<WHpHS[stF8gI[$%0j\^*Bm?g1Tr.-h=VFpZUrpE:`f1DWk-_7hL1tRr$gYq*Ne"L1$?*-A<7YFm(#C<eMC."qkO;,$:;I>gIQt4te#q*G'Eur75/`&A%>o6p4fJIumFle]5DQ)a1K3?nMOf?VB\rtCc*LH$6C&+-oT08*rZSCIUa\#J?lN/l&hahrAIJ?7NWqS%j-L3K-2Hmp[VUH8;<aWHJ%]-3+`?]\.>Sh@jXL#8N:iHs&HdS)kTo_?%B=qI2=10_;fY/AIEI[q1n+Nnd62h""]Lc/\Lp@FeL(o8-W$Lp97YR3W-Gn,U)O#HQq%0m9$4(Fa6@<A"OB]?2F4c1U+u_tF(.f:0m`UOHcK\0c_DZG%PR&P'!h+]d]F6+"eR@9Vd0hO0gB5r66=e5bibQ^?T><A*T*;Q&3I%EcIII\Qf\H\I_?D:UJ7J^V]mQmR#D^n99*-#*4:nGiQ<&/aF?Z\X4rV$).iBRO#U0Mg&L.>_jYJe4Pu6Tr>C/Ze2EOR"?T:='_@)%>7L7\BqYoi\jSPd3-KPGS6],&^*OK<g=&)!cMuBZcu(^uVL6O3K,L\8Sk>CY#HCg+k&Naik&Nb`b_:K>TOCid\a[;1-8MgLAa/4$%l9qsh*7#e?biN4J;aaEM2dqSE:0N_Ce?OsWB2-*?(2(K:F)bDsQarWi3Fre8\XYDk?nGJX9BZ%'0's.JN'uTD7-Gk^0Z2,4b2ouc%D/1fiXm2Hg^5H6&DNGf;0+[XUST>P=VnKSVlrO.t^S,Q^[iMLWMDH&uXJ-HYMtR`lcWMsm!':sA+>`gP@,=`X'_CH_,kCm2M+$pJ%`Mp&'8:HsPK52_FhliW]*JrjEd&V43O_iYB(d]A9!:"SgJ;#-WU/=I)C]Ou7+c3Qe/naI-.<1Na^`mOh10l;P*:<N<1@$:-j_lbg%5@)&9/TB/B-u0j!BL+n0lqRrBLspqcAm3RLBkp!_-Z*%2+^,G8Z,]9>.cI>.U'BT*W[6e+&&J<;`;/U_$gUZ\.Ad?D?.[d4;1sH6%;l6N"*TSV8)r$5]OOi53hEU2cm)?V6&$e]r)T6sP;4JPXfoe`T;hJ2^Y"-+'5o@D28VO#H!Lm8f.sd:I6kAjEks5PQ4m7!*MGV^a%psF`>9-$/$e&.?3XU!hVif$VCg1,*O+:Oo2-&rlH/>_daTS&UMFIkR/d-VDA]i$^h=hXPHrFQEN8VR8Lf3L!L&m--Z:7#9uo_ZbH%U[eO5od!(3$HkU/*m"h4.3\f$j*^Lbi2*S/!?e)8\@#6A7B,9\hQ=(!X^H^rJj^?Oe`ufRiqXDu??PEe<X_BkGNN*0'"!%BWV5mf%/p`o4Y^I.#W4+8L-EjWcnM[W8<cu<?n'lPP3\ZLK8mgE&l!'l%6!^6X6L>dJpc8rV/2J,#Y>&5(rY'U5Cd/1<nnQB,m"U@X&bWc%%#/H`frgkF-;X2?-X(<Wg4AUW0iDZ?`LI#D;:bZYV#Qh^!DEh7Sq'n=l,Mo(c$J*TN9/Be$[q[NX6DjpcZ):VCd_dC><9m3/:oDDo%mm8(8SBh+"B"npl7>pPBNqs)]apD'C4qVSJ&i-``35eP+Nu<3?*2u%u6mck)_g60b/1r=X-75GtkJ#<"d*t5K_!MS>C@;=78Y=lu%>Ot?"IF8O:`l.@f/SM<-P'MaJj@3$,+]?^7dVuQ_%o=SjZBh:?HE[r0FktFIP^t_e%C,*t$:2oM-..@&UtP+tB_@UB7a*E2YV>aG%mT)n"GWU:L/]YY\%tMpg&qKa7EdCpai5PHXp]6suRCJ.s/1aGI`n^PAnh'B`YTnqE(NaYI\Q7LR(IXIq:&k;sS8p)]!20U<A6Ao+%C+e?L+J?)Af&?uY!1QD62@CXt^+<Mcj"^?fU8R)Z+=rHh+[1F,mhWBi"VB8;KU0$eJ,t<Zr[36c@[n<$5j<#a4i@C-2)@o*`",\"%D:Z;n5Oeif4@S98R'\t]4u6Ospqe=0l'YdE5phS*O02Km8`g)[J85,cb?W\&/;/Pud+&pT+U#PC/;/OtW#FHWJ,tC(U2(]6H9o1;%&VQT!/&=^eJ5moAO9boLY)tf&+B6K!h0U&+=9C?WghJ>5=_o^/p'cfpg?XASPRC*2<U?^_g;o*nCht&0(mX;b!KKaQ=-IcFldI<k%Mon'A/&!IP9*F3)W=qPtk3JKB1eiFcQNBlHb1A(kYrZg)apNoh`dYAG*:&.L+kPG71>l_UKhHZLMp,FnpiqkDlmHnTd]f?KP:\R&%p=&"'D1tS^X"tNZ#u1Z#DV-^c>5HX4R;g2lM0\u87q,qqkNeGiCf5W+:9D]!HPQcljgo"8K@Oh8)\!9Hm9DU1G_g(Zl^$q$L>lBZ%df-b:eFL:H-gI>aE''@cb/ttR44[3QhQas4MS26pW<j66+^hL/V/9@C?%%+/AV!R@#dS"\U0r;Cl'@m/`o=JoPY@.OARUggm'j&*%MVGEf\Mc6A>/;HI\*O=EN]$%e%>aB1[<W0P<F<l)YdUE(/*OgsX6!GFQ@$8'XK<kZ?`.#GDSnfp2X^hO+sr&6iL?Zh96Cl#[pX'$%d7N5WaC:<iTQRA%0.<ngkbg^`"QP5_a:&%p`_b"3DUVZGQreB^,mAtTDu?liN/M7adR9$+)tFP7#jaIf-G:OMDIt*3f)CP$pl!k%%I=i`<,ep8-0lT.sU9D*;pI]8;oYnj&)(Mc>Je4`@A\o!er)bIh?<`D?q#BagK.0BsJUTF!hk1Nrn>o;lkR_-]@%0L&ELhZONK&ET%B6"7K9-BAGDV`-A&VU?U1?hUi#jNNVid$KK,KQ3_r<oh\S1/QcH(YH5PlNR?R\aD/3a;sm[#"hpfFb3q>Y'[6KYK&@XjBFA;+lqb%C(8'k>5ghCP]!R<jT4`aCuEl4fu,DkMVV`tP-Meej'(-f[O1:nR@8gd'HTE[=Mfn#/3u]9Oqi"8!K,&kq3[7S7fe5e'aT3g6qWHU%Dc97i#eGdX+/JeH-D,]0]NSlB0_A.o[6@;PM@Mr?Qk1)OKS>peTE<fb7D!3gI]apa[3pA+D1s15g%BE^Pbp",^<(D(r[AF)Oh!n]%`7OPWb$r!u,Y_A@)\0>&PY"jY'JSV8!KeT<866-CTiJBV8q#3aCf0I_5Vs\rk'8'8C!"hL&7O%L1=4h_Su4'UVM$9@kea-KOG=$N%*1(7f_X8RN/0ml+da.%0c45Q#H,tl>.fVst2e['80)dmS=m):pOR/%]7'/[eRIGf3$*r!UR+V1$!#5"F^fJ\i&`+0]o6dS=pRCIS%Q3pB/]OVSN`Q^$CYaM?s0jVQHO<lhM1M;J\VADe,d"Rr71$ei^`Z8O7$&_5#7A%IurE(bn;6\8SG$H)e$"qp6\2K"=0+&/Qn8BkY%<J2;slAj^JU>"i1%#P,_]u$=OD)QC]'%PA3Gf?B2DI\bqW41QP5nGn&$F.j7d,b_IXJt$u=@43m;@qE@eo=kN\3dM-UqN:?iI3<p%rE#@^ll@;2UH3=ICcG^@H\QI*k08@/TGi,Wje_1'6_eEg;MSe!+A`'u8sQ71,2".uZ;0R3FajY^6;)m$QK95E;u%T:-4Lh:A-l44%:F!@a7s2]PU'i;J@Rs*KSqi+e%qRb;r27/"4!]+cBX6hH4A#a$i*em81C#HHe@cX+`(A@J.#>B_=dKUBOZ8QZ;X7iV]%G([#;io0%Bn].q4jU,:k=12O!A53**iF`-3D^XJOP_Psq)<93#QZ2a4,P'm>jbC*5`m:HAWDfeF]/Au%acM+#?7oqjTGQ(EWG<)41$U\q<lCJ%OY(\Ys0;rN#X`?':07M+?G&)%h%9D?QFZR0/,1gk3JM$oBG"@4nBj$n-gQ\A-2=[9"KU>T#_;NspQJ1sV2,6Ta<`<A2$PR]C$@Wa%U.@*.(\aLmNX^B\#l5AMR>.O_:#F+G;_WG^)-.H./DcK/2K\^_C)9So;R8aB17W;a20ne..>%Zp!8g?U\jY`BOCqRG>7cCMgV*$t%)aX&1Z>9"c<3hqnle7%H%0BtK2C(Z-rn>FsCFL4qKL.X"Ji7*$(gKt3DW6N(Ubq`>mXh_9N<llJ+U>7<Lud]_WFttjpqFlV2_]-N%URLkM?KSB(@?pNPPW[omW'QJ=dfk<A.=Er;75g%[a,rial"F!!]81dYEM&R"!L$1eU!kKiC2ND>KL0/6XI*k4j!a1a,3BJCn5H:!%+@#'ff&m1*9`92Ka@m8;GOBCP/HEJbra4V<p\d?Z"D(P8CPZ[J4W[oGTl'IYQ@5fH:W=L_B9Fl(kt;ADn=E5(.Qp7tJOhGgM%$(h%fPQ_2-/nsXX<Pj0#fC#.o,J'PY+hN1;caOQaHCJ)[;61.CEtisn\-"7bUjU//?#cF#SRjk18RIX5DQcjeTGc!(BCj,$rSNQT@-2K%+*Ui:+mAtSiPV?Fhu2A/X(MVX?eO^N%!;&1m&fo7cp#fu/"nS%/K.%r>d-.k#pCNV`9E/*,1_rmZU.%bK_G'3%NGTu\i:E_[LJkb%dud@$ST?k2Tt\F7@bm?4A?eE6M#-q4HllW.9d6ZrmTiM3%bhPH$Oi$!4j2JM=&XQ%+I:6dPDVjW)BAt?0l2R\`O^j;+uQ=F,a(L8%Ia$m.j3,!L[%0^6k,Qu=S*CrK5rp613%902%UP0QPW_p(%UF?N-ED8PNYB^d$R4)q*[-0ioC]X("m48/5V>)08XCjb<Rj[,[mF*R%834WRQqN%YE<9=5OQ8uR&%`u5ipmg6Qk669k]9OOKd'm[/#B[A=sZ>UIP-Ogo'tfQHbL8KiK>*46^^*!!>fk#8L&fEpCpu\A6ndm%\hI(is2Dtb]M:_ZX@&sdKb-Tk3i;C1o@G8AN['7MJ/DnGa5i=JC1T-oM&o*TRHCl.ldq07</#C+^iRdiW&-/5H$F9hOT^kfGjS%D%Fi=(>8-8qD<$#hNrPj\N(tt0]4UF$/CiVsXj8b<2O(mL"%8uedAhJa&+fI-6)Ir=TNU2!6<3b.CAG@G7rj5:$UU%S)*\lsDK+6ZY%!$LLY`06"lf%"ZpC`/NkK/:(bUH5+WAD>6$4q^HHi"N[L"Zd"jP\/15."qi&)ma@c%*5YmXBu1SK5ZCH;<[2E:Z>Fl;+Q[><b>c&%([B1CJgLa'PC7PYS0rrb%hL0a6o;4SV6=I(`ZlY!pfb#)j0`=AEHI+"CkVGLZ2/PB)9gZ3f^;4o9Pcu"%`/kFF0!DD#<DLQ!?I2t%+IQFM`;&69I[QA9S600n<`Y^`P#Tri+<o@bXa'?0"6QLVo+i@.8#l0:kWgnQ/m`X9`/+tZWTZVCC`#oh$r,RJU8,VbBjPn'NDggj%d):'R&KR#kjr.6&iC@p]E'.p*9b>9#O6/h8OJHWXL^m8F2-%CcF9%6a;`2rg5/-!"XTKt2!:X_1-TG3i5Kd&GJ<N7k3Y`X=<N#;t%M9k3+2\<,gj[NIj/FCF"%>Sc1Yq_F]?!.u)i5!amqc.Sl8[H/;%d*@C\\[?^fpq!QLm&e`gS.%sg/7t>T6_(hh$UTlaUh,&#nFUM%Bii,*/F1IcNZk)Y-TLg`>B#*.4-$B"5^d/-=2?UJnok4,\%75E'>!<NHHFRQ`Tp\baoWqM)Ukk&gn5ilSD;J.E5]`s[a_O`Z@tbH%ZE>E/9HDqUj&RjY&u)*%gUYo`.^YqW(\db/j^Z[jl!BtoC3)FQ5bo$p@as3!'*JGa*6?o/A:W3V&>bnj4`FRJ@:"^"AfiF\HB<D,%s8"QUL[AFR_D:iP?[qTgLQKTUBUj^'(<muT%X&C2ENZd+IDTQnOtgjo*0"^%Ir8jE+kb04bo,SIlk9\G)I:cli650`VY1^hI+LAd%1%[Ta[Yl/^ff/CNT#iu6G.^,hh(AWuR5Gh,OK,s@cGL.G,*D-1_[\4d0gY&4hqU]U_[^FT3-86%LOC@#V"6,Yp'GVK%DP^JlnLMp%!Zs5hFDX:]:u&e<JFfueb^A(W,q[fB10E]b.s+;/=]N(6;,?+6;o$nJeJ2U9p9U?NLE.4i6MD?!,kpN[MC6KT:@RZ)]HngQ>.TYK%*"JMuJn7mW@#A2m5m8AG:Xe55MkQbs)Ma_.(,c;n9&2-PcXdi9L-1Y,B,Rt@<^m:(Wu6^=nY>Ose21#q=0TRl\V?2'S`RQ.,Vb9G%==c,O.5ll\T09#'H_#Ns5bsp4*5eoECC3(sa^lTY,X-B0nFP(MaRe5]RQ7L-=M"B?i,I+X0]/c:Vf$kk8%Vn8Ds#6bgUTMA.MDq[%>:cg6_?!'V[#$U^1b@n$W(MXU8Hj*%.Y";:fi_2:6E6QOILGKdIeLk-m50c]dMuG[W14Xc9*Q#eqX$Vth[37P[PpF4ChbK6D[oXP%;kDa2ABkG?O22/,*U*=4VBfHQ(^ac]fT7<a%oZ01Ohi*WY@C2-+Yp$l(Z21Tr@$#A"4pjZo,Wio"QH$o0p#"T!0o!*[UfsQ'"/^;%\7\$I>!_N;=&lDi1]Dbh1BLo\(0-ONSo4aAC#IjQEGpQ.<(,@j>n3Zf>*ikc[U%2D[fVkIqTa+^as*fYh.%-N3q!;oBZf`\af^s1%g,\C/9h0KC4'5S8#50<$2X-+:c_^&H9YOHQ74<#Id)^*)OWToI5[Ulf+.1Et^fMZo+fCn-VU)L)/4$ug&G"tQ<[_6fNR_4)8;WG2%KUN/bMQi@^XrGdXa<;eiCSpZRU*g6tVmZmS##:UjKVS8a?MnYVYIJk0T%"JLCV1)76k4cB"SH"M@u5e3JLXg3=O[fYpr^2>>Z`!b%=M1fYDDBSQ-G/@(SM^_U3T]Rq6u0Q"TC*1HaB=_J'(d][C@\<-OV(nboda`,:u47Pm/Uc^)RPhU\rkcJ>A@0.jaK3J]l.u$0t*.L%*4l?a0?^Wd3U`<pDRYt-NQ>7_nDAOB7:'E"3j.c\N3oGXp"8V5Yk89Z3:FBXX&>RUX2$&bbPZ06)W2CkL28H]U34:bQ)uiWp3^/(%YeSG0-EVGPb[-3SOgqfD]AEHhS9iB?#qc4A66-F[OR/j_k)j(ea:9haD5LF*:4`kl1i%]J"[3b\84K`6+Zm,O0T.OLN\%PV\8=uS%JQRi!J7@76":7Z;2RP$ZdkjGFkaGIRfqASt!*)a*OjF.Q@C"8<!ZrE=F`ri[>]?&7(YDZn4HVUW(IrrB";bB>%dOr*ZTGb6)<5C%%SDXr]=`f3>6hP@f(C8,K@F56K=JX>u$c;,E"juPN"_2Z5dQ+'17-$Cq*F3W&[A++WpSN4UN"YXGUs`D@$Z65nFFdQ_pF`s@W9LgJ%7dgrSJEO0X>Bhm<T(&Oj6-i-E-.>N76kqbN^qDL]>.@,4"gAM]8]_-k9,Hcu[E4m*]f-./?AbcZRZb:KR&7K07P4\c,oT7>i=IkP%*Ms^bloZ*I&)[hoYg\81daJ=l2Ai4pJaTXHR\0Y!eTL\t(m25'ZYsDk32`N$<2h5eQ]N1[RZQhH4`Xk(^t/J#%)g)tPEC2q>=L4W%\Rnc]1Psa]A#u4/9Bo['_W<$%DZds<E%N.J&6&C#Rk,ka4.->;5l8deirTm8f(*gsN$NcVgAj9jS'[./4t_/]HDD?T(V)ckrM3]c%1m!d*P_Lt=D5Z?5:oETfRX2enc)4'Z9Tl'q2?/eq*+TZh)K:ia,;lU)BfchAR$7obSVPC3EqGbL"Jk<;a#mU^=<?m]p5tK+1/[M>%[U2+1\>Ra"_Bm%I,n635a/TtL_f[JFVr>?pJ[_]j8U8=:UQ@#M,!=?]#gNjIGM>t#U)BqH4H;a9=tl\269M.[Ano5XDln=F<c*je%*Re%\9(pe4Lqf.?$dX$dUr;&A"A8"*VLJ&PHXGp:AL5Ak8<OX-i^gb2L*Bcudl,V6<%BP<:7'nFq!^/0Q=(btbqF+MKH(6%2Kp[5%,D>K3$;-t6S4FWD13f7SON:I&5R)S4k%mc)!e]Io'Elj]#+H?)jr!8.,\Dlhl6[c7<LXQ6Q>?l8js^:5cSU,<*]@G1L9A*"?:"@L%:$:AcEqJoZm>a8FZe;&%9mD3K-?PV9jNp])(;iaA#!aeS3,ZU>W-4r3gskI4jO/nMDcAB`>>EpG8H'^;_W`?l@[[,a;F"EtA6Q`Q%RPu1o"LT5>Eh#uUVTq>eCI$)MXU%o)&hhCIf)-r"*.*WN)^7_+NaI0"kbHM=bfe;%h@%2*Fb^C1,;7C1D7b.eP3E<A1HA=C0*Q0;%S6UKIWNp+J?BATE66a`Bs&*J!XUr?H)iIdR!n!5i9m+6m0O259j%3Jb`4f$iMf[?Va0q0Afo#Hf2IB7Ug9HS=SK(K!eTaNG)9dH=%l:uicZW2^)K!n@Ja>FkXMt&hr6Aa$KlfS\]d9Jus_SZm0>kY3^-T_11ATG3J\lgZ\R]bKg.9t(kl]I5WZcD0<WLXWTfGL;2f$$"^%2N*[n.%On5"<+@qSLuEOV/gi<X(ek/1MB%908rUL>L_H-cYb8LTVmd2WL\p'+#=_W<7Z1CTpkX/M'=`+'ANs\UjCLKDX?-irFpAH%+[HO1C'gb*0bKsI1%1qM[=k]CHaCk$8-R=W;O".T[JDf`m7^N?N^k"t^5,mGX"f0X2PHQ@V+VAA'kG8<C)/Fpc^I-m<uEtM1lS-L%Zg_:;kDlo9ok#.E6k\qWSltkEd[GpT4f'23;t_=PIaI93#sKi&9^bKp.!i?&rtYqUbKU'^*(K3L\+<,dfbps*dGog4G()_jnOlqP%*<W_P%QdKLUdBCTS>OfI%uHUH6*0@s&YI'/^b$+9OOTO,aTfm#pPC0?:N&D;,j^-!+ZDRsl^HZpEOX+)0c<-f(]f.J+u8JM1$)!u%n^FG'70'[&.j7hlr`GO7I&3q"hT3EL@<b0F7ClA$cTQAQm*YtMU#6-:]+MRZNL`Wo=jaWmNM6OeJ2F[JFCf@N*%cNX@'q-G<B`nD%.^3LSk?uj3FrB7;@]fru:U'n;f<I2rQlQG(#W(*d84Z4TUJMcDr^5slFq:Ml24otdI*#DUZrPMCVciVT*32\AJJEmcNM,es#_gMA%&n,tT)is5ToeDjE6qCNG2%[=\&:.<n_1\O\.r/q<aDdqoq_["t(H/<%U,RT`%&CcdTKm4U<nB$ca&fRjgo/B@MpL'5PGe_gm21Cm%Xq6dY%K_>%=oGn"9S_jhPkT!o*e_FSP0!o]!ojFXn8=[@[hWLS22C,E(e`3.##,1_G-X=>&^p/gQ&c+7R[#NRT18r#(4iD[e0kXN%IC<5cc9gcQMjkXd8dW\GXZSZ1[qNUV,0sL(P1f,)NF4N1%WT]g'VO%,D0dHf=(@@/,iY9^K><!?2:Wq$DGZJ29S'EGhn3,]S".Na%4Ers[]Dl21V_hm>C0EX5n0Z1d(0C0!U9L%<$$5li@JW*gL@T^Kjo_H,\+K<cIWXK54<f-S30+@1e=/L0oVdLi'tl)S[Fq&on]1m(%Ot%94LVegVbnp^IMqj8\K7M`2$SB6?m^OPFai>Y_gBL%rk/<Au9ZkYc56BUjTj:A3YROSA9UVaZXD<j#34R:u9\iGbRDK+MI0nKT%A9<WnOc_&)WiJ(Xa)8YEq.&J+KHI6nTZZFgYbodta[%?/'>6WV_P0BW%9TF'J7dJtouV'X!V>\!,`$6sffb'W@MJdSAhc0U$%FO@%I?c7K0;c`F?Q%1Ho-#!,bB>$HLWfB6D42%!6/!;2gOljn>deQaF1=1?dcPL/Xc1.dFh>oVi`o$DD.EI)Pegq#U+a7I"bV_S+Dh=L%m6KA60&(qf$nfSMZjC!GgLh20CtI#\E,cA`buJdfokbab7n2Frg^BUeAc%NHJW'>bcGU_&dH5B#hP/9PZB<Dhiqu<9^W$#02LgY\%O#DF0p)e/J(?[p9oI\gIZjC"(W&pe5q`*C'/\?usZ`*cBrc[.n%;esSj=ORgDt4Yk^!C`QXc0o(H]L(1Mt8"WV0&4tS%N;oO#D:,%GpstVn[!SK.TO33GW5*KHMd]:s*=?o?-aO.(91ObDsgMj=uQKk3Vj'6/!71!+C3V[M<J75^j+F0k%!NMK7I`iGH1p-JH-,=H=J2J%;\`;@T,*.lmLCJYlldK"GQgEC@j5'Y\&\GY%0EF]jJ6'Q/i5BfkYFTkO_*Kpc46gGbq33M<fh/Tfd\]o],"!+5<i48]II!$mahMU%"`q]8#;W;M"I27iiAiT+5X=+aGn;=EWaUm"c:sq`8\j9(HP0!`WO0.LMc;G%n"`LF;W8NbG:-`q;+p`'3R4i=Lqt^^*)dI]!U%Rm%(diDNADR\,&>krWRcX)HLX:.$f<kW7n%l;NXK#YF0Aj^jA"$%jgD'*/V6_;@$^1IF9:k'f7AI`]c";T673N8V,"[PlmY%d4\FK@:%nor4)aF'Wi:oWQ^iaQCd;\_MD`Z$CX,ok)n8=,/Z-aib)bHY,D%Vnb$2/q7d^l$in!GF0sLT3<XfP`;B:fQq$&goRE:!N8[?Xe1N%MH+HBnGTVsN8%jD[<>*(>B,3j_N:BdmPdX>#jWq?h!E'gA_I,Dpn7!V$$:;,K#b0s`2=?udCFg)ej!\UU,H/c(g1luAR3nfQXh"t%dc+;M4?+V.27>nT-j3.)W63PPe=L'U2W=)?0Jaf8nmKU*9D0VFdFn^8O,P5;cuLMcBa$PA?.!]m1F=M>Gq5c)kQD';:9%J\&gO^4%%mo.`?X4o55bbqOh\VC0Z&A7_'W"[fos,OQ6IQ=(%lV?0c!b$@/dsM&Dtm^<Z>N':>dB,\X.oNb@*F5.lLp0C$MN[I(p\K\mH._.%-I4p=U<5#lgJU6[P$.b*JCW?Fh3VQn)U-k+[W7rqg='rI%[-'W2=79(r&P@OWrN">%_3`N6'N?=+XM`sI12&N,o"&\O%@jrO^A>+%MS)aL;C.!cLDXV)L:[qfLll/"?W+0';UiX.N-PS,71*cG(kVL:LIb3;Bbe82=b=0mT'q:sS1#i0_34AVTVl%MgS+C*h<DA-nPTPi%_UD%iq'Zb=Dp?VO6hbS/DBCS[5KZ0U&(Xd;*d6d>L':%Eis/*I&)efbZd42^W&qA:RTTDqg=Fr*.15r9H]LTZVU>9Y#R4_;H+$pG%9'IVuZ%<hT+@/QcAC(J^.iN.Zd$%:fdsi(mpZe+UOa#.4H9/0)N`fqWZ6mpM(qgLInWh)VNj!loN,8qRbcWD:Hh61()IBi>O]6G%%RTbta;qN9.[0dJ'Di1FC.0cs_G8,/O$dp//%g"+DQWqaZ?Q^EU_XZP=WlPuEc6XT),bd%M/0mIeh?tP_ARes\&$e`K.Z*(D-C?(9%$H3u>]7#5-,2O/g,p9[Q&0h?q%9!-kA>iI9ap!mPN+T!ZU=Jlkl\V!J6D(5*b*$r[9l.F8%VTt4]M))On5W>4f0'Do!0o2V_<Ffi%eZKTZ_PL%]"pYWJOqs^/.!<l:Md6-NN*#[Q9rB@:JnVYBf,tVa%o']mrllr<4ne.R0WXKWij^g92k$[NB0o'.[ge/)c5YGE=]CC-%55Ektku0)28K:t`5!);)&?b;5=>F&D3["h;7!(PI2oKmLY%Z<&K'/RVY.I`C6B-.CJ^gfY]]2urZ=q4pC\eM6Xs@+:F(q/ZTaZIu%>d@U[NucMV5\LT\<A"Q8NJZ_<G*+tSFif5\kfM!Tj;3]-!/rdpk7D^UJ-.Lq6FGLmdXHR4mPpVfE-@6XOd(bN)t#SDqehL7GsNW3%I^eTfT8r=B?1n*K*@I##dA+EEP".ncD8_:,h3SdH*YX[s&J7T"U(4]U,hrnu>.6)IO=;u-1.BpXXR9=@P;7BU_XsrqI&oi5a<]h?%eWqgCM0W(eh...[eu+^'8GgLi8LBYJMCQ#t8P$hbjY@XVm8LP>EhTJ)SUf?Z]Z^imWD[dmkr`W7Bd6A"*R&%l%``)kR?W>)s#HJM%XMs./&s1VtO\$F**_5M:V#BFN-=u7hE]]^`P5M`KAC;@g,Ejh(1$4Bf3pfTf*Q2L:6&nX%H`il066arVHUi``2P)$=OqoD=$_CCG%Kpk]X75(6V1'u]u1`]dI+VBABeQX@D%A`4)2OPg>-,[hMO,-J=;Tl][V1Tef[&(_R8q:[IR^GXR-imbjSeF`*K#c!/JiY?,9[n`E%,?Ro,S(oiu'j-J$1dYHb_jaOpq^]Uo5m#3lm7Ipf2SNJV3l-61[2fAl5F(BY[h;bP)9RJn/WbV![9u29GZ%1p2i\OhC;J8.F?rSp%4d[SF!"n*=2BKtFOZ=Y!?kUH]Gtu6-<NhM)>:nl+>4GLTPVnAG,;LmIb<)g[;F<SSXMG)rVRB&p,SD^7P*;Mld`G5$[Url?h_"s`%8Wt01OLsT2&<iUPm-XirM<X2*Yb3mI]JV*qggsK^]Lf-g\Y/bTpQ`p([_[SL-c)Z9M_aK(9(oBAB#S.&A&dl\1&P4;?cu/hCX$!O%U_cnZ;LtV3+@5e;of9olo0d,f),Y/C^LrkH]VQ0aRb\:GX)]l5@g;ruETX&jX,oF2<r90P0tZt"S\"`%F!a8bp4d7TCO.>*+H@)*%eV%XGgo0T/S"$u32o8fHR(R)cB)GhP8Zm'YOL*Jg-*tg,cXJQkGp]s\UkW%-Auc"AC.anr%\iN&3XKZrdZmYk$rI\1o49&HjSZAO%BhB5f<o8_>eIQ9g5Ui/Y\^qd<idq-NY=cHm*/(p=Ost3qdoaZb`@cpt)='EU_fiUSh76QuXRC/^>"]_GluKNq(tN=uPt5b7A1X)i%:2G%u#=L^8`!T#/#0@(?X^8$K,1ih%g#TEg%s!?]`m1Rd-a.54[)2?[c!gomWu"`ZjQ'Nfh0.OR57?W+l7WpF4+jQ`.QbVZAg(YI%MH8!eU%a@rBV"G-q&1("Mc&4`08_J;r!:Or`Z>`2GU#s<hL.E'fOLWmHUJQX+=sHUMQtr'&tNKj.I:gDaPro6\R-(]hE;Oc@U/$c%m^!EXcUD,/VAF=AgN7`r7HZ'o08ACU-"$:R[-GIV&&S&n[t('Ld/;1AO=J"NojV=1mllp;W2XYYHLZ:-o\tii^%c!4(B`X@d9A7.%_Ggc<(GjYfAZ$=HTbH&M@V@Tn?1m4Uk"[S<m#S7a@p$edZIRqjkXR5E+H)UNC@Q"NC@OS`/O%6QMt]YD>;*u-nTOH)nM7R_?M.b6%&pT'./C8f665BVOY8:9R7IoZ][:g34er)98\\sD4$uD<"6+tnqU)-0(7.9]0k7g"(nW=SW0a:+5R!jp=6kj,RZl#<Br'Kt!W<D%`%B[esh:&S%C71;;>NeS@.q'[EliT1lm!ou'?c@GD1(VV!^)prjc#?Wk?p;mA4SrB4Eh+.]m_u\*P3B?/g2!2>^bX#Gj8^$+KQ6qDe%LD8Mo*pbKZ.al6J(I=5n6mD,9OLr6+#/<@;Shp<FroPRo[K_eWR1$lPlX]mIK9CCR/F4R8XY,$)+>?65n6.K3Y*$o+T0hV,Ze%cB%G$9I[9=65rRpHY`Hl6q?GTR3`_i:j&<,@<$q0Pf/XfPPq3oj1WUtXIbORC`%iQ=-6FC09Y/*dV=8#1`/L-VF`"S&W>;cp747WO<f%'iHfW<`9KaUXhuIKXB\QVQr*ICn`cJ.'n[srfiEPi#X]o#"VY2_nt3M]Wad**bj&(jc'Guf"m7k<JeYSWXP1Rb=X*8[@",!Q7VMk%85'00H(@9TM280&d?$B#_8;c[KE^Ofc^ZfG&nuTk=P*<.Aa:t'r^':<&^mZpj#E#;=S)qZJ8eAq_3f,S,#c!;:d0%!R)0;aqlUQ!%'Q3E/fAP.oddWH"d4*j&8Rggr"@&?4-dfC^iq2VjR@\tiJmWL?BW'tOeg92;C+?YaQbcgjUkiqjD&ZSW&$os(Vj1uNHVh.#"Jk4]%]"P>E(rV?Dc&3>/fFi<G2Zn_k,/')doSBg'KmO<pLqZkeWlqM^+69BT)r'ZOlDa#AM&qYKX#c`ID<&clOM+DLO(m9_gLmo6D>V;h%o;'pHUbBrM[`ss\9hZ2mNHrtD#)Q4UhknaT1[XI^mNdk8(N#Xud]35'[d=[S[Q!3QmG4,X[QPtk[RXlkP1<f#-Uq8\/3%(l2H$AU%o8<j-F[7T3e$_guR'L(.6g;G42Ai1PG]asm\?nud-:-b4%1TJ9Gb].8];iuPgW39p(H42B(A#$[Ud+LX!t5gubmpDHWApViT*J*H%hM>+>%qb)bOFD1:PNq5K%1TCDgsANbYgmUA/#ePFlLo[JVf&hqTbjVF@pJTD%=L_EkhBY+9&lXaT6@)M+2mg=K,f</`@.`lMnY1@%=G_Tr-HuTa%A0'&c-!$<YH;o'R_I#rW>[Gd2OP(.IV9ENfhj3p2@96O7GS0t2<l^W[RWaAL)?#>hGL`mG1>n(/rmLPCkq\/Lj;D<%D:Vd2(Lq`<7J(i0"OWn)9uS`4,?V9C&Q]taD?]BCgbNt;kS&BY3uDn*MqX'%j+QGqhXM,F;;&P;L>Xala%doE(<WC#P2eECFF$0@%Q5>Se+4%rLL0]MDAFklphcq'H;S+[hQ'3-i9WaN`"t5&tf$jq$M$kSr[o&ChXqcWH2!El`/]kIg^q_<=iQ?cnjN=2l$_<4Pp2S]9%6`)+b&P5>8G`/EQF+Wol\#It5,^"QoK'!%nf?"`%IcDVr_n2L:B]"U=eDUm$\T/^<9r]Zn;U$![imJ]e&5&tuXL0EbH"\fUIEWK9%</F.k"[YE2Wn!5u2Dbr?s#d'rDTH@H?];s:5kT:o:EhRg]Xl1ll>d")af`Qn$_foOEIV+I\AAM&`>^NF`?CZRl(<Up#^*`8kqslH%OE-ajh$PItBr.RUl^aIKZ,2VHY>Fl4HjK"[i)DhQZL+ji"n5\+Vl5-DI8mD9OP&>Dijc%.959C:/.l8k`tOQaI?MZsc;)69\<HDi%=mks%8<KC%aI:Bm5^0$W)n6OjY?l6k-Q51PC.\ablJrcb%AMR5#->4S3RL*`0&@e/ce72Ynhg'tRVVhKSkp%fp6mfG,%3\Kl/V%`%\XaBu?$8GcSLAE04IZ#f!!DOJOP86b,.TL$`G7M/T#oP82=PdfOW.J6s'h+N-=!B2:,R3<eS\r-&pcb@Q*>=F'T[Ita`DN:QK[9"%N^.1h92?aC0>;<og'5H\lL%.?]5Z6fCdUem#75Y&BVj?`kV6-T$Bd@4\39R7r8:<\_8elt'VB:$RD[6a]3M*XC5hHaqUVUc"Hd\!%Q=i-Q%7u5;?;LZ9AFJb[08@,N+H[qQ`>lbXSr9uh"D;[pcTRG;?d?s>g0e`?@R\HlGl&MDk&TS*AmU)4#C7.Do;J(@U)@C>_sl7@%*Yi=I@V(t,WND'>;VQJ=&<t4k!Oo>)/rO_S+<_7nN(Qn[h2^7'Z;)pG!UE^A7h*E*AdX\]j3b%Z"JVBEeBeRm[KgZJDp,g.rfrq-%H]i=!k:Pe9<!H*]WGfjb.lW5$#/m#9,'YJmEGj3fjufiLEd#=Y*rH=&oem<TfjT\2*+V!R`tKe"'O.;i[psSS3=A/k0::I4W,@-1%!>;0I:-j@6U_Je9ck#WikAjR,9OFeM1E%TK1jMi:HC^chqh#&sX]B'mXl2DF"&EQO#L]\GA+)pF74jjW@Le2B<&"nlL0%<qEr*U$%/ht1@E<E:XGn!PY;N^Rh-A&uY^LEPaOM!YiBoSG5OK?'0;3$ss/;u1j(>RE:/F%USbY(i%$\!s]p\JkqUSh)<c4ErUp#GLUcB^!t%<6h?Qm\2!N1;>n#601HfnsJG2GYA."hp4W*hj$LF%oP>`YX`C5eU\YS]7Ai_bY0J;ELL(gn&K,l%g%27j4FRap%OiHZWB<Tl<9/#%<?oZi'F.T@F8q2t`?-K[k:S:0-"B,[F&FQ+htE8<O#M&abfi4Fb%kUm5q.>Z6:e>g?A^i]+IACuefH;K.F`Ts$:s'(P9+#PBlo_-%4tS]>Sm_[IUa9Z@J;#.n]#?3oeth'\gl\fC]^!mb?;e$Ed[()"3=2)?joC/$Ot`a<[:,#nPe?:Mj@@[Y#W,m4;<ca!FS0m>Y=M#^%iu=WnnD)b:%Z$ad)')7ggiT8j^B#!kWbltak7DR$JqM*s7+ZMs+?c[\;DfHl>.eN35T5PR9u?uU[=Uod+Z@h?7Lb-oFK%MY5OOWB%&#h`Wq@+Pr&MX0<4O3$?1]<%KWY)E!%=YZk1Auc[W%cJM"$208Gjnsb:sZ)K6#l.cS#W1=F7+%,8[i*M%;2F.G*Eq)2d<oQ$e3Uc%/d!BNfK:pSGOT9)^aQ[_G!i@"<LHEZ5F'.5e/O@1n6@%-#+.)OR<lbr-GuB'/iG+J\`"?'0Ut%4B:i#03P\[42IoD_#:3u[aDa[p%J_*b9cB:5jL/pg5C'-lFKT9eg<n#W9#[-O.2&d`6j+-u(pfDNCBD?(IhC(;0DWj4q>[U`lW=`B34:C\X7;rcX,.JF_DJ;ADgJiA,%,Ih9F0'^$q#VN@:/E$m_6=ph)F26iQ[:[a/LUm>iMHX,"&R:L)&'^Tl#jrjN[g4StiUPTb!lR23)SlSH09V7PZ<bi009;M/,4cM6%?.m29q$oj\BT:sP)l,i`+>14YP@]J@hat+&:(.qK(UEn;Zr,B]6]9o0&<5Wib[S*GI.4^)F4(%[QO#3M8N?Kg"S\#<gFhYKdID)d%>_cDaf0L=kFWK/T7&_AoA_m'>aKD&"<^j4-1Ii:D6mB&Q_'RZTgIh[9:n#[9Fq8<j(J#P-;Q.e]*%Hk'JkP8$(o8lTE&k^$^R;?0%ISNtf>9gX_k[qp'<g#CP&R<WXS1a*('1#O//[Y4hYR'Y#d0Qnm1_,aG_5g%E8W04j+/';%QX[h<YT'&m<]nl`2o:R1eR%9&^EEH0%_flU867rBp<qNNa!tt0=ZP7rVZS.L<6OFI\6(UXe?fJ`*C<(1q&\/;N03RrpJYqPck-fI>3RPH+/;79!e+@<R1%=URl":n?'t"-7%e<K2U3%S&XXb_(mK0`(ETCYaZoVIDF?ua:TZG."-5n5>LaR"GbmRj=P04"ch&7;K,Y;27"I=G!U@_*ur@O32.?Hlm!*;P1#/D>Oj%;J<;@$1konI2E+gOeukW'+4C+UgC)m'!&bg@]S[sWRS"qG719S;p;6i(4J9:e^S$k3rOlR7D;h>&oj:5K,6ikT]74Zm1_>s4[^^r%&0GM/+Ed*F!K-Ti>F/o@2m*$&!U%0V!)je?o#M<MSp^\l,eL$@PRh.Vasa2cUi@Q,9IgU8YL0T^;QHt\;Dh1(V%"5o#4Oq:67CMV%An,gSBiV/Z0$7cE_II;1HqpthoA->JogXUrV^(7-!bq?&MV.GmpIY0&N`)((corGG"sinZ<i=G``$mPb';[$!.mYu,7&^2-IB?SI%#)q\F(F;\5'^U.2&]Mf1=CPH.$;*a6=tN0*W^3:]c."i3]iG4J3&BYaX0IR%N`Ld1@h!TuX_'%5X4M*`/.e^Y3(1.m]61u+20KF^%dqVcWAgGoA:u%SA='1V@`d"m<-,&@%ZiVbbohDj6,Gs%.Co]EEJC^fH;/6f4%-C!`6.'n#K`^i)E`(FcD"'Mf`F^>bZ.Y4qjjT?k%/1<oqE_]PL;Na\H>cTDqpS6B6)E)B1Q74`(OS:.]Cj&Zlc@`"Hi4alD8Tgo_Csmg2fVGTmfPSS36Td5/9iMmUc:-9G!U\!DoW=B,%fit_t7)X>LX62kZQ^N$j_q&Tc@X?;89Wq#bn*/MO%;>pO1<B*V>=%4Za:otMQ^@tNPe&HIJ97-F7Nec2YDHu/P&VCS@N(WSai6bT%#Dm.[G3(W'c8&&]cem&h<P^6B\#JX7g-14MS@g\6BgU+Uo\cg[DL#Z.<=\Wgm8i.9$H]KoM8UWEJWcG@;2E,P2Rld+_*4W'B,cu-%3L-&$"tWe"?]iPh]L/;D0b$D9Nj8]CU3#^f<nFt&:917W4dMGsOI__]0XIe4;tl,_r4So7TdHYqV-6q^;d7*8@H#,?CFf*nfnjDr%(S4iqRm[(kHc`[$/K9:]#S^b9>RNj?2Q50<:<5aVWb_dC'rZCl`0-u51GA-I;!oCcjJAE]:0uWX;hB7LaM,nf9?)-])Bc!q[q,S.%XPUX4E7Y(mAt>ZLb6<i?7pDhM;Nu$K>8]c@:c@gS!T>]Y]JR'S)MY$mDr9\r![$SXMR#$CG[j252'9J*^lhn:#nf549MSEi7lNH/%=]-mZKCS@q%E9LN"QLM7MI9I3iglB)jI2?'8;I>s%Eir>$asZD&L^8`THX7)i[9K,:R:LK`pbu>_'Pqg+l=GjNi-DLmL[*JVb(S4%dA/USm%h"0kD+`sc7L*'D?`MS[@NM9FXG44VpShBFt!sC#c8s.BMKJTjCjR7$Ac49c%-0h\^P_")RjqTNj%Dn0I`!;H-0VTQN!`k%>"qS0JmtXRO`!B/YE!s_.;@ss!U&m#+`ohRF&mH*-]l,9D9CUFS;o0HO!ME.a"@.N%S;d8qNCKf`5:7UKOe?5/QOK(iEdT=b6pWD%qFl5-<*_MhnE'-(K3XYV46WA;oR_-,`X:7nOn#n]/j%nAq#*[S2oT&f@TW#M+ui8C^2ES:b,F(Y?,BOI[OQJk5;eZTaI7O`<Z=9p%!X-'neJ=nOV=[6G?Nc%Ks#O[QCkm8^X_25*c>.q3n>]ePh?a3.>@dgj5'\;Ad*n2h@*]f0,NdnelHKL/31#h:G$^AgNIXkcXOjL@%9%2%`)/m<jm:+=b_q`:<j@4(-B'2BL;OUKrTl7MioKTph^DosmJklou;Cf^"ed%%tP7k4]X(N)tk,]g\[]u(U]j"3Z'J6O+7nL*M%0u0_o[/L7"PLh-le\JTZSXf!)c;5*CV!*ah"hM9\)4WVk)"0e2o=D0Nrug_;PR(JU<JRVirp90-/;SDiQUZ""nEHkmItlXq^kV]S%pf^J3G`10.:X7.!lI?b$-^\3G+3ueQ&,pZ2n3SBRpCHXV,a;mQ$5SIdKf1Ha>U0rica):V&de(>1r3Hk/7sQ<d]l7cMqnZE>JUT1%:oLo-ksJE_T1'somQk\+M+"XS?UHR]ML=rBLN,:g,gO@QXo*<s,%ZP@no8h$%$W+TacqqQ<ET$COqCPFc3QFH#p0q@`*bEm/8[8/%qsj=>W$s9"[7U%830FI:9m&1akMHqp_NC5<?<h4[3Up78]+L"N\E$h))b_?5XO0#?//lW>@Qh:K)ThWujplGMW[f(s3QuPbFnKBL%S:tO@'V%Y;c7(Q#%rq`7)r&1nN(`l4bT)o7Z^q'Cg9'j!;ZlsW-Gl+=j2`F-B2P4],cQ7!o*GF7)I\qu_R@VYP#1mnIGU.!YJ$S"%-)VKZimW]/j=m]^S$rWUYhYePbWf,#5u1Rn8Q=I4+F?76l=Gi#nf[U1m=$`o(<<W'mVJP*NM!ha!IY-RF>2/crps0]#it.pNHEQ.%N'WQ:2:F@RARMt=/u$eqX.&u#,49D]]l%dh4:[3g:V-7b[(&Z$)H%%2b_uF@:?'!T)d_fENuI2c:)L1;!g^'/0k!uVU;_!i5i0fi%B7<d9K:C.Q5L2JA2T6Bh$%5+<nQld0\EE1!n?ZI_n#.!EU<-V\b&srOXkGgUQt+*ZT2eRI)"\9E2Piu.`#/]21A2jV.A;geKSf\.%,mEUd0HnS%=$`G3CukO3];)O^[0sDZKO]I#YC*X)</jSkdD/H4Xk^HZ?5&.QBCq1PhBI3+WY\e5D,u?a790c1Z3bM%Z]B>abU/("%hLtd]%kG6u\n@2V)bks&W?t$l(M#UaG_F4d96pSA<Jd*:>rI[UQK4[^Z?V4^$Yh'WP6a@mX%J5Sg9/!GU?o+qfPG4FR"]f_-rJAu%<66ss#M&@]7=mT1LKmcnbJ-&:@1#66UaoSYj-ai4/=VDr]MuM;A'8'R>h#Kt#"eG%RcVG]X!ba-O[*4ZpS?C4fZ04"f(.iOMsTJ*%.HBC[@X,=*`<#\#\4n@=,QSYtmt47</qJoHQ]Rt4oU6qGr!8T6^]GIGd]eHKG:rK59&BG)Z(,>Be'Ec"T5477]o/5d+T\:g$WkJ+%o?%('4dR5%CD7B8^kPsI`hp>i9r?W&NI/bjK*4g1ol@<!U8J\!$5Npc&+Y,N&Ip;$Z5n:-%_5(qj-sGb`qQ`Go7A5ZG\@_$_5OT\%?Xn"&U8^H%dj-82-U^B1?cU!SJg;M2hSH#p0D%`P:YLGNKf!pEnUi9:+H$J3`a#bu-!^)*(3GNtHf\`$LieXqFEfY-&_X+@B!$V#%#Z.T3?8]eh4UfQB4[`F:8CT0NA3:SGW[$u(P$U(tFhmCN&UAH_eu'6G88C\GXMND59&WCD`r#WapV=pD-at"2j<T;e)S9\^mQl;p%GT8fJKW0d=BCd++b8sK\gM+Z(CZT1t\ZV2!%:,7I`EQ%K]Fj]+o6+6f$7.W6OcT]S*[Qo4oEo8k5N2>@9a'2\GcR5hDP`/h!H-B9%.#%)J25)l-=Y6/1olh+-i5\oPKK%\JdMYJ1N1lTV1m6O%Q)JT+)\kAZE!A$:N(#eH(Wl%,V.X3_06u<ONm<6,.oM*HmkD"n7gr8\%KaBHF($)%\,Q\AW=YO[EpG)MY$#pX$c"ekK`"&GCj,bGK^%.Cq;1%:+F\$8L8FDpPS,s,1@,T-/VA91(f/(eeM9Tq?_1"c8@O'3>%:D1`<>q>&%\<R9#$Lc01)q")++jCF&.eN)i!)fB=oS]^'2JE7PASBl89F?28N9,+_.&)=%.!PPs`K=hc\+'n*88]i$'3<[mhp!X>%-,#[Y"2h',@>!J"V92AN>*UA_)!Hd7A@tnskl)lhJpHR3L`3g\%t61m?$""PlOL2[9V,0V2]34M>#Ok%T.<U&YBCSOeGm`9WTeZt%;=l]GAa57X]]R6G;-Q]:e$j(\nqIL&Qp_/nD."ReeEeq/P,Vq70<7LJ!Nn/i-gt$T]TgFL`nZ_i2g7g77L>9J@?on,k?PRkir'+s%dH&baV[pGBM2&pa\ko%B)jp&+S1M;k#W]$">'V@=9ReC3J88/]psA]@&cKE+]7]YE&$5*Q'9_HTcgLN9H+l@Y[9N#Wh`\[J5)d:8%4*K1g`-ZHUh1tYfC[1qZe8r9tUQRi%nR`AXc8lb!r,ZEHK3bfi+XIHYC]MQpEd-&bP%7\"ld!VJOpM?)=G&"PZ.Lj!F#QBdh$Zfq%U1P?3'hY,$!50iIFfcCG,:-/FGuq[5<HbqE"l7WmICe2#.OuXsK6XEtRi9@'bX<q@er9\g(Ys:_5B,3i>Ui?6a=F$]QY^1qLTA6'%00ZKLY2u'_*@7NHWJ3HuB*h\<:0!PC$/,J&$[RJYc9#IH]<O_m#(smS*KhR:hlt-215OP"n$.ds(RQ:+*7&/IF^kYN0;s3:E#b">%qir^b%agegkt<_/Kb,q'BXq.h1r78NSJ\.o_5^.Omg"Z6L9*end-s1)FD2]S2$7ea3i'ppWYPfjZ&/E1lDH^&n4bZ^K\2p`&0&Lq%VP)'<FYsda_iEHl1RX3t[B<Mp`HQXF\dC`pU[6MW$E^B"dYK%3;3<ES6'KI89g:HP71^\ML8IALGl.sQKY2-UNDrL&fgGB+b(d[:%X>.2;U8C=)=efjTP>Vk*Y3\jm.8lHS#gu,_S8pCsA9R>qX@[,Oa:67D++?9_mXuJK61A!=]:iK1.MoTk>tq+^JKigsrcpU1Mh_t8%Q*D/3*+tPgpEU:9laU;Llb8.Q__"eKAHpgFKp&?cQA[,*,Z2_6,;ond.u8[%XV(YfSnK!je[:76%AU-7MEH0r6uEh"!#49B#5G-:%Z6l%tBMhPK*-CB*;0F^L'^ljspu#IHI@tO7:if"K$ma';!l6=?_ij,M5Y/#1O^KFU6SLh>p"Nd\Ua>?n(F+S9aLl\FM!i0mjN]_4%Ll?&t;%5pq=S'0P%eEq69iekh"s_+H[>eQ2WXo]5<kLl$9Xi&#_X"h60leb@2<fs#=A<<ikgU8%0Y5E3*/r[7PfH9h65LgF->F^q%&5oGmXt2r)KSCb*]+q9'Qt^$8'Z2@9^!&*V_iJGq62SO5H6T_t8Qg9hp&FfP`HZIccce^eiHFR6&Z2YfKW0#`+X:oa^m$ML5C913%H[ukrDN'eIOJV^6+U*t/+5X1Le\T-"KenLs*&FV0D3)fAY'2*LoX6^1$9=Al`_k8jlI#c+&E(`Fg"9g^_tie51_GEdaAm(:W>Njc%#I3kK<(AVW=nI5W5/]Q+2mQh=&8ck<E$G^8.lVoUmKRueBR;2'jPV&WZI>4<N,&)<8%QB"=//"]$liPbrNqti1i%7T=f8inrS@c7%j_RUf[NQ]Zs2j5sH.XC?;Fh,F@a])ork^$3UX)XkBmqUrY%s0e1og^t\(f]uVHB*/K/8\7O;H1QEqR;ZBj%U+)d,-R.0`,%26d:+%G8ko6TiUns?nH?[.(E;XXYMkA5ZWCM-liItnh"X?bF8:l9N=`N`CbZ_)=fCeDY/#n2Ee0q*6-4u5*Tm,*c"ZeJN9ZPrbFY%56pW/%dqZ[b9?j0iQJW(%HUXqtV\liV3%ig1Xr/iS^).=!mtDp?0Q./CI(AcS3([i^Co%JiJVF`lS%DehRKCBu%d#X-f+bM,rB9!8HC5Si%^^0[!\:\q/"rd4Fg`s(@fbr"oAiMIpmF3)9"g*WYFpDqLPJWD;P,rPI+VE>JM$Ib($<-Lk&qfCH0NJZ;kuTnVaJ6gUKb6nu5u]4+%k@JoP\jt>V\-8_s3sW=a=C$X-XanNIYR*W$VG"4qH>tY0&p$F3V<3<M_5C;bI&%1C@BCT-`eiWX/.l:^e0Eu3]NSg&P>sT.ENo_<%7[NR0Ys4KRLD:C+(PHAsR0PWDG^.(q[8c>/.hArB\X@`RRm,FII$of:+u2M20jW3q:TL0<kF")tJ=&,qY*bN;@^-W?AX.)P1>Io*%,jG,V1bE9qbZf],hM7A?1%,8_H*O0K_.Xc#j@YU["\J;OK%u0F5VKUk)BtrLX(JhuR`bmkOa!c\i>[>[Asr'E.VlY0XS3i?`q=r!%DtEbH2YkuF>F6SRmk[iBZ4t&V8HkX!5mr;*p@O=8Wa$*g_tktt19=3G[N-V!JQUe'c5@g9+YfhL$?+H+aiGTPS$J3!pY\@KFkppd%JJ"mFWk<f,a4K6sd_**'akmYfD-f-rYSl1$d`uI:mW-6DP-eEUWr0TKGi]>G(6%b>STY0-261#f4rc>Y(MtHhPUqFp63=+/F'3E#%5J:]l/O7rSiAF>m+GVK:HBaE2U3_'pl.!<f,QKSbSF`M/i>YeYJA@J7ZBctk.>W\WnZ8`,7O*mMABjYJ3h8B2JOC,^?nbg;c`nD.%94Z5r5#Ysj@gC,mV<@"k.ufR]/#6PuOjZC+JVk"/fd_%KU&bn.3nPM5XLA[KVh1F?b-$iX@'W+k@m+DS)LhK%Am@TKKIX59aX%#j%qZ7%Oa:oA/f'CDUfQk&L@p1.M751:(WX5DuS"S@@]ud>7:)+Ld7!*iVhkj&D2%f&h5fQW/Qo.n@CnrQ2P:UNXV:QKaX:gr4nqP^d%3'e%bI7b#pr><hZUt;YTbW.6Nf[.03$>R&u$B`_5;Vm87r*di*=^?h_<=l[i*ab$;^1b?#:Wo1/n:k$i&Hm"j)Nskk5mW,M@_@h[%X+!Ta=u)WpkD%ZgTk[c;[Y'X<95:m(+@=40,fL`kA@clZ:p`!4C7@7d55kJkZ`2</8L1`MUp,E)p";\,^7tKnoGh+5=6ap0mG$Ti%Ss)#ka71L\QT`4X#YX?^"i=)CT_7KLKF%iF1Ooc(gU.?NrPPUOrIU]j?=T*:6^;SRiddme#TXNjRZo\?`+[XBA&*lc)km[X`&p7.%Li9OdK;>]*8.8M`H$ua,aV?6kA-,$?(.+FiFAM^=A">R)&kL*)i,qXbP!$Ia&GIo.#/*Rom1%rIQlgl6Y)g&'0fnbeX+JD-$AQV\%#s$@HQ.D;bid8NW8#h<nBN6E@'X7V;Uc(d""Fd2%i=S"W%V+2tX".^`COq/g^"ZC-cU\g!((!?*&-:"]b^/pd,M,rI4q[TITuB!n%o'&^R1A2h8cVH'+epJXK]J0+dAU5&Ae$a!ccXdHT?VN5J(4p()('23J$T7O8j?td1.6#G+/<WDI-DIFo\ehio"bhO/mtU1&6rlZ*%11Im"%7oUbNL@8l:Q<*rK*JP&lqNG@QlLVjAFEY[Y=JlQ.RXIX+AJ",JH`BW6F=+9Rl9,j"b\`]*8$sqic=d9ehhN++&3Rc(^?ci%<=MJcAA;["V)C`Ih^+!M['E;^dh=!<ldt$PHMn?1$M9'NHQdPG9C7k;0,M'/HA!Qf)7GF-#B-S_UkUU_2#u;3\3Oo`BQgMcYsMtW%7AUni;Y$MM9#1YQ?rYR3_N_NhFOWk2K-2"eG@q*dDkTfZ;Je1&*,Tt6;=8!(H<(VHnmNZ)4N86R:._Gg@,*"+0P/.s[X_7<CLOs,%#RJmh-?]*seC*PQ2aHePJ=m;#aoMQlRqS%m'c(%ta;/oC[4k%L0SSeOPhFP@%L,<fdm-ft_?X,F)^&ojDXBNF@.UCeTcIR:pMpgj%:=ij:!5d28YB=?"+Qgon:3E'cKRtW@7c8g`F;*>J<\XbbV(*)%(?^Z;^/_>9]]4fV$:n0*PdLd)BL1F>cNhS'=uMJ\)/sk;muO0d%Cmca46]a&!7Eo5RN702H#\@5X.SGNED/:d+GGLWs`3]q\]Y2F$)8&To9IIr5'\2#nHL;nI4:U#2@-43a'$ThG<A0HVqAuQHT2nI+%7g_:mbCPZ,ja2_'rZuVTLL,u-PkQu0<N^t9^3\=TY!\HJ1T[V'ZeU0Z53RtO1g!,o'ULGp4"okSNPep+bN)\rJ?XLZBdLh].Jb$J%\"AIJ2C[KkV!7b+8fr&%:OOdT0:0:HOJ8)IT;d14RDr*hoO]Pj$IE!(l.fknl5@T`DE[[;WWPm%9Bl2>6=j_+Dd5PKB&&3o9+al`%+kanMPr-hC,B=_D?F(#R"KEs"oNLuTE1I2K;`9el"Atdi/ZU<.$EkfDl!QoZlDgqoA48g8DP92a\Y=g#=0QcmKaX9WT"6F`J16</%H7fKTYB2)`(!a$o`j;gVnSth:B6:W.pXa'lrP5N21@I$0+H5SHUe(pBAO,YL!Q$mn/1q5162kaXmp?a7VTGo&&JM0]W7c-A1O4qr%I+c.\dq,t8Qh-)fJ<tu:,qhq)kbZK8n!(+'lkbfYaPEF/cnUZcF@,`C'e-ig!4h-q&fo)o<r\XM"_:Uh5"*j<l%h`bH5/eVU!H2g%a6)`W,!g/3/""bGhe"T.2k)q9KI/4UM]qXG1/pj5^XZd-;@l.2:@2d@6>(D%-o=K@G8Er;6e3fslus&%WTXo<L_R%MCK9GtJgPcK%U.!i4oSl)L,'(=UdXVp(lP-1#B1NLk[JRf*O(i?eC"W_742"0kLPalBqmfCqjqW<gT[0W&CR.%71;i6_SiLTnk1"#c"^$TM0"NG2%C($-clWU\$2:-%Z=!^hlb^Hr-$$F4TJ!'sI=iO+l\XMajF]&KKCH^AuQJ[m*9a#Uno$5Yk_FqbAX!n_,g')m.0e'o>T_f,9%S[X=%$?G9<b+@M(pG9'BAE8Dmm'I[/SoG0"O770?*HApFXTq6H0?m'DC0AP!7o0i(j_(R]:g8(Al;_1sMMBBQj]IZ?&3bb@0trc$aVR"4%Jo,eGHa9"=MGB>F*&M\dbK.IGi*&k:=+qW\lH#q=:V8,].dhi/M-NL@O_PB:SHrkR*n*?alo3@_TMVCReO`-7FfnK^,&DbWQ^!6a%@'Yr`*W9FG(r&SrQAWbFlCut6\eqn(dY"M8/VfS?dADN'03`ALqn_od$UQH%n!Y7NWSM(jg]LIj&c'V#5^e*/781@#58#sbH?q97%q$f'hN?"i$S>J]m;lZ6U%ajdlo:<cue[cmqbdtOIgu/9#N"quWJ^>IQ@#Q'c6oFjtDlfs"0n=njGQF#Wm:5NepmS(u=!ME5C-Muq%.p?t:=r!l@2hO!Igu3r)fY*H4(0S?e`$*#um1A*S%P_n#K8NX74F+##amB8"aLR//YZ0(M%9p7bdG-Hmq5R,H<'*!=XhSk*lTpFs%`Mu:u[Y?Dg-Xmua&dEUdBSb.]g!hd4-#lP^F&?]2+7&-I"G/\,JRTRcE#2,,7U[gERdC36Ze'%0k*0"eVFp2Uh%W59T`^Dbb1,)e%M^?N;9]?f!+D^XLO(??r^HAEO0+m&rR@A.cE$=orY;:mBD4&qC)LBU#Ss^bt7L,<T6J5=$^9VO8Je4=if[NHWOC;Z,@<CW`O@gQl%O0Ct(RBdD`&2l]%e6ogp4HbPC<GE(#]E%6_+Z;.g`fQl]1h:hs1h>f(%2lb624d5^-#n6Ea:O_.<`H[6&n\d!=d&<G"q"&Hb>'Q!%:7-)(0gd'pW(*dQ6Xi3ZgCHS;,.qU/4Ma;TCtamS@\Ge(-AFK0FiBag3rJRaah2uG:KQ&X$2ena'2r>hOGF%m<9nVHNZ'rpO)brs%Zm3eG">ut(o0BBaJqeYunQDlC^^lBu3A<M6YnG#kq]4J5Ctm6pkmeWCq9biYk)^;t((\@5$gY]e)$87ug29oa_Wu9!)FiT*BjW)^%6arC=C'\>a<B1mRN4eL4W]_P'6gdT);/gjQDdHaa5slhf;ctqjkcc'a,UTOR"q?DG%=^*G#UBQ_(2M:dV.B'n@nQ"a7;<6N\[k4b%i1rBK$k`1L^C2RR0#;=4:"=EQTFmTh6R+#=O<jS8BjZI+CshpO[N6"=?h;GP#r0$0p,YSV=O\0A:+C]'aXtf\<-lg463LG]/QZqB%Z/&A<*!61/=Ku:,VF.Z!0VpGAeCd1,]TG$1h=%nb]:C$)R*W)eR#Tp69anHWq)J:E=aI$%#WgDi!d\]A)mM*ZGtr"3=0C[<f,e7[%ATZHQP"X*OQXPhK]&('o5WEP#a;HnuSG&Jc<u1oFGm>*u0T$^1X?#*TT]&V30ndQL#KML)Un-[Zek4?"!:A5C_P2&E*!ctP9tqZ\%[r[WX*rEV:S=[-OAFC1B5M,7G:'^aK\F,lYPge7OS.=e_Gr,W4d/[U[%RotM'OhSnkqO]3j;7tu>Zul('R9_H/RooL?Dof<5F0i<%Cs0R`-!R`W:\(5_1[K?@,7sMf,Y8+#+=,3IP^k*RS2GU]>FM<W%MMM*>OsL!`0>l5@KMjbb"Cg`7],KabnTEpb=Lm$.[NkUG%dF]%I&`*L]c&06AJfT*_B&mq#1n6oHffBq&u_!%#YQ,^&W*us)De19a*ljub:cnT>>7f*<Y#>8S2Z$k%ZG"U&dd8B4VpBS:=i/ji$'L^%5,+B,&c2OmqO/J[E?r/'nG^>[e8bm?.8f0SIM`.k'!N01i13`d.C9Q.lQ0"aD"uobSrY!]H#&^kP1#UdM@;tE33ec]mJZ(,6[a5k%?;K\j<nhgsDQ!QcR9OeajfO<l8/6g^f.G4E?JNXR-Mmo7H`GH+]`r_]i[LcpTN?>!J%<SZ<G6aD[)ngW@,@MND2:IRF9n>CZ\T#1%cPU-@A_tl&'>`TN[WT,$c5&\A0kWuD0PhLhJ=$TW<<<4i\dp[%@jCgM\fGq]6,n%T#C1)2BeAuc8:mW&#u5E56pC:6#sh)3LtV&W%(ua]Z(u9W*?^BE&TJ=$N[d\YR:5h'*+JDB/eG%W6@8>VI]Zc5l?MBYN7/GIhl%[Qo6SEQ>!3*%V(Po\TAZ9l(lFkoNK2ePooq6im%mKlASf1CrXq7?"ELg@i5Me$5s]6lZk!FpNjn57!#o_s$+O(dcn)0_(P'eKSW/W(8p/Za-ZRkP<ZjJ3R5Ng:G]3uhU2Q#bQ)`GZcS%5.C?#*m`<p(@cn];7&.\.pACGn>V?\aC;N@aHMh,b=&O<dF,mHKKYr1"p@-%2`O46J1SSb[_1":e_tZT9*pS>\\Etp5:;)[$!G*m%KK3.,,]#4f5<t7(IF#@]DRF?#(Np=]"_9-D1X=#NR'7Nip=q3CO)A/6=>@kG_:%/?50!Yj,m?auJ^.Y8.9+H87Q'Dc$KRVHG[E^0%4C=d[@Pbl3h?R2te=dY49%1JjJ%'oGKhC7bHJZ:cI[X^ZANDo"`?noDm*(BD9dF8g-6AOt.cu4?U+.P:4Hs!T@hXBg@N3,i4;=Ol%Hg=#kanZ??!7SU5Xe85sj;5`^J1Ole!u/\BpMtOH`iTD$D6`i=iUh>A!`6G@JL`q#<\1<nZ%3/>?2dU"oXUUPS<*FJYh*Shh[AgB%]V!]`pYDMXk];O>'Bgr&CSDR?;m^;[-Q\*('+#&=kErEO)tAd%3hZ-XT)a'1^utIq+<QNTVm<M+pKbcd'!gL1$$1J<h.[`=PlEoh%QGs&eBd=)m",8<i!G#b+3'KX0qic&JJloG,8K69qdd[VdA(V=Mp]Q($Hqo\t!0\[@`$a3Z,KD2,5.<=#*1u/2%gL<oV3:K`TAWNc%`AC3+-]3eshKc)Z:Ei"%#NGMH_Ao0JEl[^'nHh=oW=q\<-f12I[#?-^c&CF;:a+5ec?t#.&.!Zn1hX5[;qbMh<N%[DVZ70q<UrQ9%6J9K>M:foC6u4D:&c5>^M#_SOa\)4No[laJ]?I]40A9]DgB8=<+sp)do<Go$-`,t]"^!J.jb^d<_q'u5&KBDpLlI*9!dE(W$W"_?%]mY5&3]](upSHUVJMFbV7Zo!*P/*r.JfGBO2;PS`!a'mI+TS),M9?El&c!S*&q5XqaUbXo*c;5`A]XlmDM\6jgC8^HVk2mg6f@q(%j9mobmY1%_Qt-CJpP"C(lR1eJ8:[3Aql9%:GjFDfac+Iq1.d>Ti>_l[PTBfr8jLZ>d5$iKL]p4UI5BCEbbcB@E]c(t2(B/N.lQ,*%;(AY]*6pjXHCY:fs+8nB\i<<t9!IEuRn1VhX:&/N-"9s+`&C9Pok"&Ih](P3bDQgf$V63B4]@T$eL*kDf\,WR]fFpWM*342&I`16%iF(BlO$0\f="qYW&k+b'bPa>WUdQchRNs=F&6^pt=X9in>:(d2.?<bc1oC-Cs-]]OX>fqfbu3O4?C-(q2cn0DoO$(30_"`Vo&H.9%PU=<-.1r=5@doV<'`DFu"r_tEQ4fiP4>H-441;JL5ZlEuaRC@t-j?&%35EJ[0MRDFBmZ:*V1e1XdJe#!9o2Yc3lunY3M]i>9M4<f%`;XJ>;X1:$;^++>4sa"hJWQdoOMt.E@,rd,(ZQq*0*u[nh@e(3_X!G8QJ?5.V.?/1?hqN9H=(`VL<=M)GiI'-k6l#W/IeJW5m7OG%=-:'j$Y34slH"@S:nOrWMW9[-%\t9N8h2]c$!C*_K2a<1^b2e!-E""^UobgY$u>+J$Tjm@"q1hBLXV;?:m_=,<(5rH+,;n@2hs\u%)m*_#"=-&KC3qoA!kAXE:ICDNpiFn[:+quPYA/Sah1=E!Sm8ZY.a-4H7*9YAYomC'0e-f<X%g8MEBPGG@h47_oUVqfZ"BGS@BK$^%%@cT+?=C-IN_Cmo4?fBOEV]Rl:";L4aR5?"Wp,epYc#/YEbGrP0c,0[qLt=eW*k'V4(\;:!8XaJN>OE#`SaK+da)[JpCZO9HP:f9%a?7=f#]FNj/b#3&YYS$JElH`ah`%dGfn2j)a;n\U,H$IJa+=-.q`"'.N1>d*W!]O?Z!i(o4%:F%=/c%AA#2g/J?r!UG6;#H9e'![%Br#KC<]c;Z2&O?:#q)=^6?(cH(1l:#e`"D&O/mL3+?e0=p][@tL*e8io<hkOYE[Bf-]MHs#K"BnXu#4sk+.Acj6=TY^P=?bRV@/L%b6(V7)1s<'L3=R!pjVsb31&##B&Tjm;,K%,]Kge=f\8'9;6Y]CUrYNN8kpSB%Y;")8N[tT?+)GYEmo/2q;Ujq*`A#Cf[hJ9@gA`Q%5D`[`>8#8:5U;%)k=iU7*#;Q,WNtT'^N(Q0Yb-cr<`pj'8&K(uQ?)mA<&.@[WcWrc^G<$tD59XMr<&gK`Z#rDoW!-b+L@OP_W5r)%B'IF6%A9,orjoRh?L0fuU-W@Q^soAV_E0Y5!6Yt([LqCf.J@f2L`fT2g3chg)EC=pF52X[>JIS\OUq4NFAK(p2<#h%Rn$Qh/]=E1%_C?:Wn*rdoQBD`h`68asd@QfGp::h`SL%euW>VEU5se?B8r3*FlQ"X!.".D[s&F)Njb]MdGIXM?qf3^.#jm$GM_p%;U,I9Coj;F!%+k`]pWkJ1<V\UE1?RFDd*Wo?/]sT(N?["u^3c%F&c?U_jgYEE$Y=2H4*a"c-?UC]9S[t[k4BM8diF6D+@o^@l4102S+>K+d&R>&k%G-O)-DUg?eAE0-^5S[K)jbh5$d26?<Ig?]0%W#-gi4AL13"`\sZcWaaT&BpP1CfoUcGuAPa&Q_j';8TTOPPF$mOOe+L6lL8VVUHZ%WQr#aA/T;+#cu!?=iO[6$[9#8@K;4=<@NN85ahH,MaecKcuM5j"$^%0,pj&X[pR7pU-;]G+\oG+gb5!n_24*^AV!(:aDIYD5>-*2%H">=,=3`c>PU_C/q[<g8+>&1:6pC4s2#2`['RP7R,`iA0=[6CkB8d@+6`?F`C<0ls.IFr:H!d\:\I\)t_bLmn#Qnku#>?HM"1a3E%JdK:/$4Nbk]k0U=E^["R(.)RAb`NNk+].tq5s5&\'WiA6b>=47Q+TFmc1(.`5+pF?k'BGISKLVBdKnPW5o<E7kL4(Eb&bPhb\JI0%"'N2Yb1D>Xl+$SE!8*JQCG83*D%/Hf(t_iKp2!/<k]E`O-/S7>SNCR19+`rKj&Y=te6=(T&m8Yg%gM0(;sHKGgFWh)[H`[$.N-Lm%(W*:hU][_%@C@\KU4J[;Om>UG_F197O!]kW#E(UZ#\!jSDPa-&GX(I$V?C=8.Orr<+:R=RTJ<8`9,m`6f)FUj![GN;nT-2g[p&"r%e.hs51m`_9C=Yuh#0%>/:(_sT7O!#9LDsln;b@YAUQh0$:'nl]Sc)29f+<+FN\Dc"qc.[;*f1Ts:+-D+.(F>Odj/0Y_XGhDbRq#-%;DNZV^65,,8:dR2:AI#P1#+3,UbW92'>"A+Y,;XEmoBu203Tr0W$<H[dYJMb2HCXr`/RajG^\N>iV-#U`+>2XH)VA]3tYlY9$p7M%"$PC'ou<fba8$_]25'/kTU%1\?C79c0Uan1>fNb6>S25;P!'?N5$@1V^kKHB8#ts#p`eWAAQ]i)rF!`c2Ij9aB]VkD3T?cX9N]gO%=Xak#_bIC"!t\\ZEKCFb$LR`R0T=WV4TVD[<:2Z)TNQ2c:O_"Ri%PFDq2W8f]VHq"@Y]l[<@J/cifCu"m*?a;S$qqF-KFs8aIE^#%(Bc4:;S+nJm"@'0GW+TO(66F%/D$_$C@%2&[ut`KXpY!ePXV`XI72QOCpiG,F`TNUnYDLl8r-jH3^r&$OBm0,a3>7&#YbhGc#;L]%AGc"Gqrl!d:j*ZG3Fe5^VnR?;QW$Ug6Gn&N$7IESk!`^i#lXVTT`rgV/aS\\cFk8F2l\sE8o):5p6r3?Y6cRi90FAj:bD=.M66?j%LU9-O[=VRgn6E=K5l)p],I&X*],:79^_Dej/IKDgE:T_'_Uk=(7015(f]6gF!:e13M&1l8+)>0rT\nSGF%s.b4l0tkmHSe?9isqi%'*;BR_B&JSCJ@@@=qfoYes^RHkdB#q>NK<8CVmbJBkpGQG?is>!iqZXGtjq^^H^<QB_V2s\L)]pML/'bOYO>s";Ef.*`F(g/+_t=%;:rrr'K-_b_?nQ-/GX@Z(@TS-_GoZ&C,L0PTbiFU<bYDJi<ieI_KsP9-nHVq$40r.gNQhZ_YUsQ.#`#1Gu5DVN)#;JfDb]R-pX+H%F9Wc7YH5$MB2]cW6=V9^&kI?r\I`5tb2hgf(,DdKq5as^L117%q&L7cX3q'\#6`"R]+<h![<hbb<NYojZLWce6b]%#&!4QaiXo/5%:%E&;ma,?W;n%@Jr/gqd+IJ?(MgZo4PfNe[?YAXY&K2AYFBdO7ge"mBa.J;a3n?UYj.W[KP?88mhP2u.8Mq[crgbo_=BXX.(;k;g%"+=$$Lp/kr>&H7(W#,h^`$4$ZOYn7Srle=M[L*@KX>f=hl#aJtq*)8DNu8115D390X>^iPH1:_;*MI-P-RpbX1+1lb$!Br\KK6P:%6t)<;TB#+_aF,'LN*Nr90ekY"U77NJ_07F?]TS,f^(Gj90enKL;YP;TZ^R6u)'BM9"6O$&a>8(sffTZeh\-;@4jYB]n?MBZP'f1E%9R9Fq@&3O(*"7"^6I1RB;7A*<8Jhtk/<"],@UZqDDlt("7Jb"JmfTo&bWL.p,NPC]lQaj&JM;AA=GW2u]O+g`o1[R;d-I%69<]0^%eNc`94/s,_?ZLj8"bsA0m=)!f/Fn8,9S1'Nmd"kY6Z'kTT%e-MY-E"Q<i]/Qf%.m_8ctgkfCXl.#Mo9UJj--[3DLYq6/JfFg%dIJ%;1`o`,cca(!d"89@d::(VYr2<Q@AA`mLq*_VNSPejE(kZ^JU:k.!ME$j1;hR0ll\\[mUd[Ke"2.0R"V+8kn\RkN7Kp:(UO8E0SH@%J?3<#/fj"If*JHSI==tk`SQ*:T$&+*#Z9oE55pbuCGAHH5'Yjq9T6/h(39W#=L5V')Bj[Rik;X4G2KL%"0.)J5LSV@%TtU0'91WX%Vb(\Omh9KFKbT)BT1"e8hd>f0D:/qNYErKDX'W`a9Y"+Ff<Dt8`(!SJj`OJdO8Z^meZh\dWMuGr1Pl7Z>.`BU66IC:Q:p>aMrXLd%_tMD.C-Jh*_U"t=j4Sbsfd27E)\H#CTnQ5YkB"fNV@`R_jqA+ea^nkNLa\SsKN1\^kl@Pa=OSkN&<Mp5'!S>M.VG./77V/\dPnbA%#dZf-UH9Ea)&'Z,NAM;?VP71O;hMrEK%<X\P!EbnWR`VTW_Te>6u(gB:<7I%R;u(S,RHX%1!_,5MSE<?,>"cHc,K@0mXAN#WPECg%IW9nRUD6_WjC-(ZNLCDARPPhU'h!M&m\W(>]4O`7+4m<tOg8B[[;p7=R@93oA-o#A.M*@W$.W#3]%bUHV-*3mbMu?%&5!3cBFeJh%!*MA(6&]4ahBO<fZD6DS1k^$:0@<`cbqsL!VC'6UWUHVOmu+';!mZ5ha;9DS<)>V,@E;\K'GS-iEsPoL1*KX1j.G3AB(6#Z8K!D*%GXj?_V97lJHlmNblpeJLUM^a>_u,?:6.,7[3HC/=qY9bt7G]qbYgf(o%]!/RPu.lWG?SHF_9YF,Y@o@[=9,)$f5&ub]hDdl[.@,A%Rj/c5d0b`7^$>$C^hgqO\^,1)N2@'Pe>j+4e0)Tr9mah3(6:XZ]S7Xe=>+oCW+;+bdS;MY<A>dC?>/,fJMGu9SY[-]J-:U=RVU#%%FU_`BG;2F]GcKf0.1Nun?H.@F,C3qL/lO87-$H^S6Q7RfFkOLk*iF9aMs8WbNddqfQ*^_S<4oF$Ld2iWAt7-aQ*Ln)"0GVnU$8cA%-jpEZ#E=Q9c(r1d&J%=t\J::E02([%$X\CiqG5?7Ko$l#VeK*r/&7.2!HY4.R/\0X)+9:2>l0^tLPJ[fe?]&HXf"P&NO\KF8W"Ve%.I:m(V#nU3U\_]B=/k>+W?XU"g(Fc$?$]#0We5R^i^?'"er=*RkC_`9?fIRD7P2JA@8_!]bMhWnKUo8p`Y@X"_`%;#G!0k^pdi6E%E3!2SRoYOY?`pf7Ih:9"is(455JEt;*jX9I-Kl(&9$4'Z]h3+#U`-<*<]V^o#_=s$4U1pUq:h;KFl1X3E[uh/X@ss%cpfo<C1@jH%]t8I9[&3N`"'[;5Xh?R!)CgK^2>#h2YPI00mDkhm]eh='!??DJiS,4qIqA2uTUoolm3%+,?;Ep#f]eX0nEg4f*I=&jkCm#5,kghh%Cu<OX_E-Ot$K',l6R$7AG'7Wjp?f'aRY(t<mGNE2LCW2OqOq3@p_$KJc^&5fWets>1HTf"V'A4qm4;YWFqtd`*T#r;g"ATu>rutW%6eBVtG.VoOA7s)g*EIH4\9?4VUY?KjCBmrn.65F9(.+a;m3Fs"SHOU]-UBMgpRT40_r7%[n'6BZmG/ZPF?#s`e^9E(;[E-CmXso`%!S4GrSVQOrhC%REab\_6qmu1OH0aMgahZ#C-?@($@E!+YR98LXW24l'"2F!JRIKU&7'Ek6LH2(m7`d>'f^!kWg+\*UI,qE8U)](n%m8e?;[/5[qZ@+eR$f;HB[I5>eD31?<jO-ksWh@t=*fF4pOP1-#%T5$Z,G=#M5rNSU--EcN>(ADnb3@[^18<QUSNEniBMjV*mN>=$%.)tJp).3L#)/'V#fuFY3b!HO*%PuVZNKJEt?uq-=$MNlrE+;CEI<W_bhZaU1QDE'(Xu\1^p"ZQ?1G@Pj\MiR6hKcg*1%2ak1W_Tj%]2W$Sc)U0fH(1Dkn2O[J4M,h,/9N9K]?5fu:s)ffat#<g[XSOq&JN3e;#6s`r([4:meu8)JZM-Fk7.AOR*@+hAcE8:Jk6Ho^B<g2%'a+;Ven;8c4)]'3`P43)F7/`k2j)qri-t`P-sH^t/S!hGd7m;7CCeESQSJ?2M*r49I,5AVW(k(=UWkjJD'Yiq)6k5h_P0Qoh(:tr%`6p&,&$I1*Fi8OR8t+\W>[J%4"]hW:.rATYoi8%;\4tPl"2^M/*!,<_&IUH5M@:*E6,I8^+:MXi#8UL&,8"oZLm='Go\^]ddU63-%1SS0%\<(o^hiID:@`+=XlJ_9U&e_i\H5EmZn.HMMN'"GG$jZkoefYDsEnD[OF[k>hYY1^<l`rkH54ck.Q[(!HTC%ft2`kqipZbYp%9-[t94;O]/c6^uH:66afP.)\Xk=BgXbH2mtPn``g>fT2C07?M0`2cR'2O/uV0d*=gQu#&N?rcNmKHpgkfN^m&OQe=d=;!O#'_1sT%[q_'NSIn+^S'4jM,B?!tX^>.a,dWIEV-^g%lI8;)N0KW#jKLRBPrb&q'])Y$3I)cjg4LKF[Q2<EhPW9m@.>APNb#4>r&D*XlMVoH%WD/G*<j>Y@A09Pa(<8>gWSC&`!P`4orSHl19_CpnhSigtOD`)87WF54XT\!2R+96ceBZ+Ce1X[h&'/TX]oR$G*(\c'[b#S[C-SMS%D(jtXqjMK?"53!g?<u&>o#Z3fWup+(U<LI:dYqDO5.5;ZNbrik:LbWin+E,95jH*G\Zki]h,5.NZgGl?Nbn1U0$hW\_V*-3"P0`=%[)%Qg2/.[T$-%Wm:gbUWLC"<DIBZDlG$MI2Q=;q6LM%V]goC@"Qe\H+'%VB)Ke*<_@A/I)<)Y7?F?:_Y]Cj*LcU?)YC'EWN`>87n%bmBB<5MNGFYdQcQ.%4`EP=U,?('.\aCguuL:M!_2X\JN3C*a#Tk4XU9&F5?Bdf(LI/Ytf2ZQ\5q0$/jcFY3BRCEfm0Z";$)LalK7%5P^huKRL>@p*%=t\i/Hhp*[)tH=Di.(L5#(p1KglbPlm]SuW(DEJ8f"Z9L@0[faDq*cbY((b(mZK^QchJ"el&m[IG2?%&(5BBoH"%5B3`(7uI!f&8+\:&c3d@1n=R*:=@&WK*^N/rRILZB4EQ*,bqqU6bu@DMIS-f:`L>*jVg%_b;Eg(+)!+88@-Gr+NL\9/;]$M(gN)&%]nYOF?i"B4CK'BaH9-Oo[i/Hj9I1Vf`(-rm&2bDeZ.0dmZf)b;o3EjSjWf/DCGm1,(7'-g"uI!-.dA<j`2hWHDgH1CnI[$tY\Q-:%,?X,+ZN5?L-&Q!lmP?-BG0L6PPh%@!,-aM]RP^-J8CVJ.=O_.8Gd!PmOmm_,dQVm"L1>s5_CjP]/7N!$D)cF<]QV\WNU3AK)iLF"%qbFDD+t9kKjIFc,ch#59/./JF,<9Rkg]jKb"/(aeM4+mhb+1AOp4ZALJN:<-9o>)Cpq?QN80S(M_66bY#5%GVoT/c&iOa<M##+`"%VmRGVH?`F=;S`QrHan!h@)F_6BZKKNU.)nQN'tL:NCC[<K5(8@GJ/`OKLXFjfC64Dr&`Tjh)5%j,=ZE*l<UWSUCbH!dpK3*jn>%H%n"D_e,(%BnCH=1T9FjNQW.Mj]6E-+]?SMnU_d3PAg&hMp1*q?T81(,/$+1@j^q.+rdHf*X\[pn9;(3ORW_+"UbjmNSfu'Nm=J3i:%?CPF&>ZB-M_5DmMMtr'**!)1rn2@r_,A8:Rk["gCWq=_`^Hb^0Rm.Q@aTfOCX5hl330:qaaZXcMKs%p:YIHdkXD?@:P68_l1=D2E%C+<NurFRU7m%.rE!uMjd3F&RaD+P=K[U/W(:0\Z_i)us]l(*(!b"bIl'<,1*S/@[F7)IrZA+f!s9HmWpe\(;"$Pi4<a;G2S7YJ(I%h:::;.XWD?[.$/t3#!k>]Pb^-?<EuD=,h/J&?9ms$14a]#ccOFql9P[Rla9EM:=>DI^bHu1LKRNf/2W9QTL-$S>Uh!EBkWU#A^+t%?"9br?a3(f&,3r\V.#(ga02Od]jF&4!"`!m?bJ=sR4$H%,KM)M8$HT3LXOIk4D>&.L0T4qPGTF,l5Ak"M52r^UTZ^'W:eP>+=ki$%Z6g>85if#JcKYnmVS3+"3KMZk4n><s2)Qn&jTHr(56KlIITGU]#FRnSRTMk7#2oAZ`2Xmpg.(A6P6^tn3Gr6FV<c&?.X,hKE""tr%ro/ET>o&XM*X%-uZrk$4Vm'4o,@n_+@K&#/2!eWp$mB)RWJXh$B$["\%u:-!0gZ2iGeD=KF\O#%QoGiB!JV]A1PqqVNgABufKLlO%;BU,&%5q7,ON/c@4s&=QlrX*'$a^(fbI[)nh<:0VN1[Z#&0VA+8'.`nVpRIo$]\*_]9jQ8jF[+:KPBOj7B&AgM;Jrc7'dp"po3T5%H0HbXBPSj^&@Jbq;_PgbG3ol^On*WToM^cL+E[(Rn^VbE<FIT?m>*B'`qpoE*3qiZ8bMdWDM;*ST'8G#[jmiN4QbmF)qEWH*R#YG%:fHY50L[83V5XRIO$B&!S*:*UXiXo4ipr9EQ&domoVH`$eYd!\e*?EtY./)^*?j[Ce`sN9^^H9h_s[7C^*g(qG]k4J<+em5DG+lb%8PX+Q+B=m;0T!t(?;GqU=;[\qoC^qRGj:tZ:M#9,LqrbK4;-aKf8-0V4JDSoJ<]dt$EGG>WaKN8]=^l*iG]t`GXKi_BjD5;1C,ZD%Z"ABNW&oQC,"4H)<%qALR6Tj2E-8GY0uLW$[AXW7Xh[VM#pQWJR(u2X,el-[-[R/-%Pn,?D%_dBS?:D;q&sR#??1[D+C<Bk6]U@@%#Fb,jmLXhR]%'O2,$8*SGXO2?U77n_cFO&HNTT3VG,)WC2_Ec'R;tI$]*#\(RD>A2\.NF(MBN5X?_"mr:=TI(VHm@V\=%^UX,JHR%!>/>3W):SL:InUh`f3u<gXD-k\HHi-6/JuIU&mY5Gu;P.@NH@;+A+tnkQ?6<=D"JDhKSS='NeAn)sp`7@st9N8neL7J-6n223&UM%`C]0o>33=/?)t<S6Zq?EG4HCBK(jlc6cq\;)FDP4jAs\C!^^3FL4WF.CXiI,6P1i+p8%@Ee>fo"+_Bd!B2%rS)]sLURc5\J/gFDZ%)gu_bHs7gNeI#1$9;_lL@/VqVaD3qsEBXq7L*P-`U6oDNJI-E_%nS\npX>Ph%PBMuFpeo00+cp<KA?$2Kg^^^#q-LCLV+AT-V%t;%S%?u4%qNKQ[ZS-h2i1DE/N*u!3OijHjMhCUar"(\YGU.V;7Q]M1!*4XI#>bj]db>[..fbO@7'ku/]8\_h5d*U5,*)_=GE7bZ9sT@%8TgT2$MN5aL#5^2>mp4*66nFQO`;f,Dthg3"\KuoX/eCC,.-/e)lPA1=^1NE_<gVLD=n]gc*JbOSE3%3*=bWtjLE\1JKr+0.,p['%eSN)5@D1l2/C7,P3b6c\8U2F%f`7o*n`[T&-(0aC)Lq%"8$P<RC`beY4R(<Nqjb,Z@b-#@Mt$;C.#M4qG]YmL:UXS0-s3[JMC4\;%,pKmVqb]]d%'N#=o=DkE;g0t?(-PUX8RS_R!8GJ$G$Y.o8:U&cn<"i`!2.kKo7tgA6kk1.U`;8sgurp+&rT=]Q\^S.TPH:Y]&7,-%:pZ1"3dIs85oIegBDI1KGA88)Xn0YEG`TroO3r&gg\/L_::^p&A/*)&PHcmFLqN'lBP=u$oLK?]-]a7h<IVMWd+\Lr6:<\?p+H/e%,RRVL<`O8gp<dAp]?FoK(T(<M3dUjhIj*)Y5ZhNBT05XO,C#bB#&_ejFOEFXgp8A]A@-OCZcAe#Y-S@?paGCn0kbsiO0ck4g-Zhu%<j/TG"fon`G#"rr;1'G=XfuTuknJctmH&?_(tJ?Y3db>0*;7V?n?Jn?5((";c-6s&QN'UU%m7sBb<VO%bO#!d,'sK3aWfs5oRX0<%O)8)Yo@Mqj3dg:ShhR7iX@'Wq*uH[l\)R16^1^d9p@/5e\U-AdXR@<m+)c)ljno.Bg,QL&;7/Xl5?.li:Ab4B=[T1>9k?C^?UmL8%Y1e9s>-26E-GKr,,q6&#BigD9/nr)s&KchN?OJlYMk.&0+XP!7PF,8#b"/(tO#aaCd7U=eE0Z$`G5ARdMZbpe\$jMP7=Rt5;Gb>-%)b7805/(n1=KINNW!QKu]\a"OjjpD=@jS(^&.-"p[/>GM`qn;lN;,HAC<Gel1Yf6TdLtO91&YY9(bar]MH2<,e[1mta4;M9c^a#X%[tQ)$I0sbG>&E1bP&u\qh;[^ZE4jn<IR3QD=)'NJ!sj"SiJ(nlJXfX&![c#rq\qbUM$\k@(g*a1]kUA#f?`+os7%IX4`+K_`@qg_%;d^)6k#B[JdfQTmDW1K]f?*hK.EG3Se-R?\@ljCJd5L1Eg`B"sO2ZI@apKI/q;`K7:$Do28&$+sX^tqs]i(_.JB"fanP`DcH$JkR%[6qO\Y^O.q"qn72"M3CU,FMbehe*0T,8I"jh7"G^ar7.#.6_]!ECj[oHbYdT3CCJ@ID7QPV.6GtQ_S;B%*dc#COFOYFG9Yk:.N4N%:nc_(m=e;W,'@G"b!pc12cYl?F>.SR0a*YmaHU26VYp7!?Z"-8(QV>=ZnPPVElW$\[efZq=I)2/eLg$iYrX^*<AW`GE*boZ`0<@$%Xs)E;XTJh]jZ-3Xr,R2!74buY[qquUXUf*!<^;ja9o&j@TZLL=-s]#%I()<6LW[s7kak"<80j>B4'h3.$\JU]`JQ#nDT]E#9/eB(%gENIqL<0#R$2=;NJrj,,<=U(Qeo6]L,Y:@<DH48r+BsqU;4[QgJ7>QO'FdA-^i:0],[d[i1^.T,Jf2030uO8:0tUH4)jY%D`Ye<[%W3WF%,hQ7D8a\f!bG*fmabpP0g$Z,$*b3k`gt,q)353N/'B>'oK]QP#PMZ&>kjUM&2?Y.GMi,'H2GNlf=+NZW8O@Y-dUg;4A1&g\%/-<=U_#jg<'L=gVlY@-a[#:PJKHI0X0m47t7Sda[.i(q<a@]R\:ktnq4,U3Xa))IIC.+!!P(4ajgX*(?8!4;;,me]V\7h4[k_3#I%CU_1DePj["o82?9K6h#3-gEgPNq[W'LsI@rf?-^6cO1KM5HVMTOOnKB^690QE(7T)jNU9FeWTUi3?<h8gQ3g#Lke:1^")D0a-XQn%9Jp)]AY[b#`iO"4=S/83NB;c>k7r[\BDl)5H@36mJG=Jn@US+KS!H%(i5SKCf@MZ=XTBfK*,UmjI&2"fW#YRO@[6;p/*hrVI0c2C%!;AZF^/VQ^H(%8K+`FlR;5f9B#uX=Z&WCQ>5L_WM7Pc>>`[.lG^e)+,gmfHG.5GnkU7Nuo6Bo4?)_Wn5)Je4FWTi:.$hhhnpADBH%6[E*I`FnmhhZG<lhG_*#?:n90UB3\&cOGUk8?2U+cM1h:k;B^d9BMghhLnE1<h#FXO,i)"h%L=1r6H_ZJr]2q3g$NK`5MkP__4ar%W*!BdPY9<YABDLRo4eu<q2T0I3tN7#Oa#iEFP(!3f?M^B@APn0)$<g@#:<?q;4iYhF5&>pcBE[;9OcAmZg5s70f_e\X!8!qOf<Hu%"@H181%k=hn?&b$D"p=L/^YiH#pL[1/\aP_]sNoc8Cgn]iCY14DVpuA)O:eoC7dR4)amd5G.V.58_c@dlO1>Y//n[XSaFp49bpCm%4uSY$kgu5,JK`s]M=5Oi)/hTTJM@m!*p\GTFTd8&l@*o(!*.jLNnQD5qhgS=UTWP&@l<OX)IrGK:jRV^,sJ<@)I8ZQbH'%`C\V-G%CW,+g.6tpQ6;4o=SV1DgZ1P-pKF8L0'jnLg@Q'rIhmSC3i6p>[Ma$u`Q#S'"R2lh\L2CC-P?sl0Ua:1@+(%$j\gZ#XUm-rcS0f25%8-G&dbJ4e'IkHf8f5\Wom;(ZAJ"7Qg[$p]!E\@-I,oBAgNG%.1Pq4*F2.4Z!NpAf8<EhYT4;hP;WXZJJ^ur08e^qt?4l+f&PXMn4%?)#=71-O)4*gZY)b:BFipjdTJ`g#d8H1KGe(S7nME1,h,b</t+a\46.nj#anhNse]XS_N8rL:M8\AjEjC^uj6';miWAe0P<Zf\#g%MO5!Ua)gQ9i/ZccE#pl=T+K+N_(Qo[(5<bo!b1:=E:9FU,o=F-8L\*Q9V.gEiBIn"dm/)pN#7cJGJpSV44Zt3(m,*Z11Jg:T"uR,%q7?qR3?"o%H!PO-m"$iuQB8IW,GY:^@QhRf?;%@195,8MDj(sml+ERCQou"`3Y0.@Zd`2f_?2gr))>ZU-VuSQMO:g@6)KI+L@G(t%Qf7Di9t=cH%)]6l`Z6_e;dm_iL`PWs0j_jMB@m"#GhE1U*=Mc9FXF/dO]$5^mc<OBVLf6Z@,6Qm"(oJnNc;dm8FuI]_!HX)4g[DB%*A;38#9<YS]Sqp%CPn/BF[XP_nZpYM&MG@C<\OVf)i;Jl"*)C5@?-b\O6KtVT+W3ON,p4iS)Xp3PZj@)<#%7M$_J%$@aOIiaiV_'%hejk5Rt5OtM/=0[A_&Z@.&U":!l:'X1DP)6C<bIkkQI51r9Be=Y$i,X&U5t+CW,2'^NeK;`$$(MDB>F`*l4qi22]ZC2]I#_b3GNu%)*Pi^(Z3E[GI/lDl1-WT>^=4f,'',g96[#rAaf9"O6\"^`eqTL@6BWh]rCoI^sd]XZNKrRGuA4D?G;\`FS$<"Q]4DjYm:/i:S>Y%%iqe)5&+boa&<]iIfquh:J"NFQ\C1[;-*^p]*+s\)=.l,!?\NW'?8M,lgFQ"h&,?t4Yj\5:0ni?]iIJ";0cV&rfRl7t9;n6,iL"Il%-*/>:VAb`R;`qK3b=#<kHbK6ZP[(SpGSPRggg,KtQu0]&.9h56e=F^TppEc<q23i`VIt6:\.ri2OY"sN_3Y(Vf`IX@q/aaqL^#nL%[R=e"XI(R_AtH/mD.AEf/&c<Do4sDGi*AsLHf9[`K2%o+j`(CNbpHrE(5VOVG0C_hX\q7:<j+nJQG7pX`"#d3Q!R(#<NJ3nD?L3Z%DrdQC]8kl.&[ZDV%PUi.G#,"NZ[JI6/%Z9/@[D@=NnNtp>&5$4?]a2ie\j1X'I,U"7be_5B@NqV'n;./D<gm2Zc0&2>88ks:1KNV%>-6En4KiTD26k>u9uLZ;kMVHhqoaE0YCfYSZ0g\8D,Z!g]bj,FNP[V75RYMRdgFb04(F__<fJuO,A%>%/<psVD5]bKm7$+m4qK#6%DIg_&2\nafA/s`WE(UZJrb8m6E8?DtIdh8eEHmD+hHA_5W16g.&YI)(Bh*jsYpD=!f$#Z/!JuX"7Wu^.@?0"2:3<P=`J5`YlJluu%)su*k4.R;)::JI5]onS7*H8CKl#q:?52?8j=0g2,WC*$@KE^4A]n88.7>m3HYiR]G4F=Q:rD!At+Nf#f!SbVO5_kmU[ianDb!?/H%e%Ha*9g?)g[dQ"8Dd1]M*m*<e,(D1V`=,)TRME_</pUJ+'5u;B%dckLg$e6=/:<#q<aKu*L0Xd+s$l?gB17F;UN*ok`rc<o50sOA%791`$KUX(G<5&U[(86B2"'j%ehH0/A<+L0QZc&t>;F_$[Ud/idZ&Af"h=EF.(*9I;6G,.C:Z"Zsc?=EE%8.VFZeI.uA@eB>MHq5f%QokdI&YZR0fVbA!;QK2B4sT/TA'\$Q]qho_+\2FhMe580j1-A,SK0jM_`uf?p*Rg8`;nV3Cu/;VRs*Os_jklF$e-GaTO&.91GW#a%m)!um6=0;@o9KH9XD*M5+,;:5js9C3WCqC+Ja%QJ&M71rQi*+kS\jp*_d"PrHic%uaLl3!n"`!o+LnSRH"mLUh:GYsn(9(RC5Ykk%*Mj0tq"-e("bU%InHZoV;]sm["f>nAe*YrNP,hg3o5P%"S#^K]Et;8(C.e^)cYn0ElrI3+$(HgQ?m9pQXD:t!3K64Wh3A#4DDlI4%`K0b3A!o@p1-)('Qh\[_Af<CV%T)A!7oQSnVI@7-KODb[A[>p+n\9`:XV(;n(h"PU&1VS*><ul<F;99$q5^3Ws1(?>4S`@oanN8i%elQY66pKDSMg_"a+($r*0)I'g3XEX$q>@B=^ttZ3\HHn5&-rB)Vj.Kr&e6WGoW8u/7SL[E+=?&`C`.Qbme2G:E(n=e*$@;-7aUH^%[)-Fj1#MA,\IKYXG,o\QOr4BB+S$@c!Y-q+6%a\T7#S!2KKs@PDds3X<m8mJ0*5C,=_RS7,iSEoa<Goo*Pm!S@g$Tf2?lI^iK_HO%k#F_`rFTQe[HCX=4P;XnHk+r?(`G9\o>;>*8#SaB>QM#`_?!eXoo`+&gD5]28Y4,UR@ATq(`8ES0R/gQ$=XJ,J24>Fq1d@mS'`$h%I*-!t&tahV<`<gVI5XC*!HNOhdK4_T@lJCGJBcht*A5],A=f6:6Y&7T29n&egYA:,.NGNT1Q^`a1VG,'W)/_;LppA,)%fD)5438<%@=aeS9VOT/JJXgL3F5l-!8,*?[aI$u(<0BVeKU,m-1$Zmi\OUHCEm0!FfVnM:puHV3.0d7>X+Rh,do`H'buN=AR]YKecT5j$p*;s%K`LrRF$.\a[#;RT-]A)Ta_L$)$UDh80N,,q[Hii$_nF[-bHfR.(&ZT#=.DP8n*QJJTJ6"p4&hc1j.(sQ;Kob(&7]KHN2LP^fVM,`%5D)JK,6rnp95NEi68qSi+8skb#G)&h*[dLX.(4%i^W(Rq/ZoKJ<k6OnXT*O;Iqtfcr>gQST>[mE![[0Zo>qIab=P7f)c7=u&3S\F%lS>WmkdL?=^/;A,'IMs26;jT.^jW+Z3Fj;9E&U$43$EXM!lBg%!AN;b9-*3%<h(5Ljr#Itq$<=bPC-Z7<)Lr**.eD3JN,YW00:X^%X0M+=rN,3pr7iTFRcQ):j%.KE,@4`k%`2GXK)bg*1lh&)j'TNC"!@R5gFrTc5@=H^TE"a@+2@chhuEJLJ,8l^0E:^S^\n)grqPl1%s6K-'I/D+EJ,;IFJ,eo>J,S+dIf%1Ss7Z<8pV6XrqqqGD[m,?ArqHHc\,QisF\+Fijd1Jr0E::krs-.<ou@~>%AI9_PrivateDataEnd